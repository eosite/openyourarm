<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.etl.mapper.ETLDataSrcMapper">

 	<resultMap id="eTLDataSrcResultMap"	type="com.glaf.etl.domain.ETLDataSrc">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="databaseId" column="DATABASEID_" jdbcType="BIGINT"/>
        <result property="databaseName" column="DATABASENAME_" jdbcType="VARCHAR"/>
        <result property="sourceName" column="SOURCENAME_" jdbcType="VARCHAR"/>
        <result property="tableName" column="TABLENAME_" jdbcType="VARCHAR"/>
        <result property="columnInfos" column="COLUMNINFOS_" jdbcType="VARBINARY" typeHandler="org.apache.ibatis.type.BlobTypeHandler"
        />
        <result property="sql" column="SQL_" jdbcType="VARBINARY" typeHandler="org.apache.ibatis.type.BlobTypeHandler"
        />
        <result property="restoreJson" column="RESTOREJSON_" jdbcType="VARBINARY" typeHandler="org.apache.ibatis.type.BlobTypeHandler"
        />
        <result property="createBy" column="CREATEBY_" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR"/>
        <result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP"/>
	</resultMap>

 
	<insert id="insertETLDataSrc" parameterType="com.glaf.etl.domain.ETLDataSrc">
		insert into ETL_DATASRC 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
			<if test="databaseId != null">
				,DATABASEID_ 
			</if>
			<if test="databaseName != null">
				,DATABASENAME_ 
			</if>
			<if test="sourceName != null">
				,SOURCENAME_ 
			</if>
			<if test="tableName != null">
				,TABLENAME_ 
			</if>
			<if test="columnInfos != null">
				,COLUMNINFOS_ 
			</if>
			<if test="sql != null">
				,SQL_ 
			</if>
			<if test="restoreJson != null">
				,RESTOREJSON_ 
			</if>
			<if test="createBy != null">
				,CREATEBY_ 
			</if>
			<if test="createTime != null">
				,CREATETIME_ 
			</if>
			<if test="updateBy != null">
				,UPDATEBY_ 
			</if>
			<if test="updateTime != null">
				,UPDATETIME_ 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="databaseId != null">
				,#{databaseId, jdbcType=BIGINT}
			</if>
			<if test="databaseName != null">
				,#{databaseName, jdbcType=VARCHAR}
			</if>
			<if test="sourceName != null">
				,#{sourceName, jdbcType=VARCHAR}
			</if>
			<if test="tableName != null">
				,#{tableName, jdbcType=VARCHAR}
			</if>
			<if test="columnInfos != null">
				,#{columnInfos, jdbcType=VARBINARY}
			</if>
			<if test="sql != null">
				,#{sql, jdbcType=VARBINARY}
			</if>
			<if test="restoreJson != null">
				,#{restoreJson, jdbcType=VARBINARY}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateETLDataSrc" parameterType="com.glaf.etl.domain.ETLDataSrc">
		update ETL_DATASRC
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="databaseId != null">
				DATABASEID_ = #{databaseId, jdbcType=BIGINT},
			</if>
			<if test="databaseName != null">
				DATABASENAME_ = #{databaseName, jdbcType=VARCHAR},
			</if>
			<if test="sourceName != null">
				SOURCENAME_ = #{sourceName, jdbcType=VARCHAR},
			</if>
			<if test="tableName != null">
				TABLENAME_ = #{tableName, jdbcType=VARCHAR},
			</if>
			<if test="columnInfos != null">
				COLUMNINFOS_ = #{columnInfos, jdbcType=VARBINARY},
			</if>
			<if test="sql != null">
				SQL_ = #{sql, jdbcType=VARBINARY},
			</if>
			<if test="restoreJson != null">
				RESTOREJSON_ = #{restoreJson, jdbcType=VARBINARY},
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME_ = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteETLDataSrcById" parameterType="string"> 
        delete from ETL_DATASRC
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteETLDataSrcs" parameterType="com.glaf.etl.query.ETLDataSrcQuery">
		delete from ETL_DATASRC
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getETLDataSrcById" parameterType="string" resultMap="eTLDataSrcResultMap">
		select * from ETL_DATASRC where ID_ = #{id}
	</select>


	<select id="getETLDataSrcs" 
	    parameterType="com.glaf.etl.query.ETLDataSrcQuery"
		resultMap="eTLDataSrcResultMap">
		select E.*
		<include refid="selectETLDataSrcsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getETLDataSrcCount" 
	    parameterType="com.glaf.etl.query.ETLDataSrcQuery"
		resultType="int">
		select count(*)
		<include refid="selectETLDataSrcsSql" />
	</select>


	<sql id="selectETLDataSrcsSql">

		from ETL_DATASRC E
		
		<where>
		       1 = 1  
			 
			 <if test="keywordsLike != null and keywordsLike != '' ">
				and ( E.SOURCENAME_ like #{keywordsLike}
				or E.TABLENAME_ like
				#{keywordsLike}
				)
			</if>
			
			<if test="databaseId != null">
				and E.DATABASEID_ = #{databaseId}
            </if>

			<if test="databaseIdGreaterThanOrEqual != null">
				and E.DATABASEID_ &gt;= #{databaseIdGreaterThanOrEqual}
            </if>

			<if test="databaseIdLessThanOrEqual != null">
				and E.DATABASEID_ &lt;= #{databaseIdLessThanOrEqual}
            </if>

			<if test="databaseIds != null and databaseIds.size() &gt; 0">
			    and E.DATABASEID_ IN
                <foreach item="x_databaseId" index="index" collection="databaseIds" 
                     open="(" separator="," close=")">
                  #{x_databaseId}
                </foreach>
			</if>
      
	        
			<if test="databaseName != null and databaseName != '' ">
				and E.DATABASENAME_ = #{databaseName}
            </if>

			<if test="databaseNameLike != null and databaseNameLike != '' ">
				and E.DATABASENAME_ like #{databaseNameLike}
            </if>

			<if test="databaseNames != null and databaseNames.size() &gt; 0">
			    and E.DATABASENAME_ IN
                <foreach item="x_databaseName" index="index" collection="databaseNames" 
                     open="(" separator="," close=")">
                  #{x_databaseName}
                </foreach>
			</if>
	        
			<if test="sourceName != null and sourceName != '' ">
				and E.SOURCENAME_ = #{sourceName}
            </if>

			<if test="sourceNameLike != null and sourceNameLike != '' ">
				and E.SOURCENAME_ like #{sourceNameLike}
            </if>

			<if test="sourceNames != null and sourceNames.size() &gt; 0">
			    and E.SOURCENAME_ IN
                <foreach item="x_sourceName" index="index" collection="sourceNames" 
                     open="(" separator="," close=")">
                  #{x_sourceName}
                </foreach>
			</if>
	        
			<if test="tableName != null and tableName != '' ">
				and E.TABLENAME_ = #{tableName}
            </if>

			<if test="tableNameLike != null and tableNameLike != '' ">
				and E.TABLENAME_ like #{tableNameLike}
            </if>

			<if test="tableNames != null and tableNames.size() &gt; 0">
			    and E.TABLENAME_ IN
                <foreach item="x_tableName" index="index" collection="tableNames" 
                     open="(" separator="," close=")">
                  #{x_tableName}
                </foreach>
			</if>
	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY_ like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY_ IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
            </if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
            </if>

	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY_ like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY_ IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>

			<if test="updateTimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updateTimeGreaterThanOrEqual}
            </if>

			<if test="updateTimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updateTimeLessThanOrEqual}
            </if>

            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>