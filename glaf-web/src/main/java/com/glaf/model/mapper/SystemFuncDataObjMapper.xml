<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.model.mapper.SystemFuncDataObjMapper">

 	<resultMap id="systemFuncDataObjResultMap"	type="com.glaf.model.domain.SystemFuncDataObj">
        <id property="sysDataObjId" column="SYS_DATA_OBJ_ID_" jdbcType="VARCHAR" />
        <result property="funcId" column="FUNC_ID_" jdbcType="VARCHAR"/>
        <result property="dataObjId" column="DATA_OBJ_ID_" jdbcType="VARCHAR"/>
        <result property="type" column="TYPE_" jdbcType="INTEGER"/>
        <result property="createBy" column="CREATEBY_" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR"/>
        <result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP"/>
	</resultMap>

 
	<insert id="insertSystemFuncDataObj" parameterType="com.glaf.model.domain.SystemFuncDataObj">
		insert into SYSTEM_FUNC_DATA_OBJ_ 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    SYS_DATA_OBJ_ID_
			<if test="funcId != null">
				,FUNC_ID_ 
			</if>
			<if test="dataObjId != null">
				,DATA_OBJ_ID_ 
			</if>
			<if test="type != null">
			    ,TYPE_
			</if>
			<if test="createBy != null">
				,CREATEBY_ 
			</if>
			<if test="createTime != null">
				,CREATETIME_ 
			</if>
			<if test="updateBy != null">
				,UPDATEBY_ 
			</if>
			<if test="updateTime != null">
				,UPDATETIME_ 
			</if>
			<if test="deleteFlag != null">
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{sysDataObjId, jdbcType=VARCHAR}
	     
			<if test="funcId != null">
				,#{funcId, jdbcType=VARCHAR}
			</if>
			<if test="dataObjId != null">
				,#{dataObjId, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
			    ,#{type, jdbcType=INTEGER} 
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="deleteFlag != null">
			</if>
	    </trim>
    </insert>

	 
	<update id="updateSystemFuncDataObj" parameterType="com.glaf.model.domain.SystemFuncDataObj">
		update SYSTEM_FUNC_DATA_OBJ_
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="funcId != null">
				FUNC_ID_ = #{funcId, jdbcType=VARCHAR},
			</if>
			<if test="dataObjId != null">
				DATA_OBJ_ID_ = #{dataObjId, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
			    TYPE_ = #{type, jdbcType=INTEGER}, 
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME_ = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
			</if>
        </trim>
		where
          SYS_DATA_OBJ_ID_ = #{sysDataObjId, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteSystemFuncDataObjById" parameterType="string"> 
        delete from SYSTEM_FUNC_DATA_OBJ_
        where SYS_DATA_OBJ_ID_ =	#{id}
	</delete>
	
    <delete id="deleteFuncDataObj" parameterType="map"> 
        delete from SYSTEM_FUNC_DATA_OBJ_
        where FUNC_ID_ =#{funcId} and DATA_OBJ_ID_=#{dataObjId} and TYPE_=#{type}
	</delete>

	
	<delete id="deleteSystemFuncDataObjs" parameterType="com.glaf.model.query.SystemFuncDataObjQuery">
		delete from SYSTEM_FUNC_DATA_OBJ_
		where ( 
 			  SYS_DATA_OBJ_ID_ IN
              <foreach item="x_sysDataObjId" index="index" collection="sysDataObjIds" 
                     open="(" separator="," close=")">
                  #{x_sysDataObjId}
              </foreach>
		)
	</delete>


	<select id="getSystemFuncDataObjById" parameterType="string" resultMap="systemFuncDataObjResultMap">
		select * from SYSTEM_FUNC_DATA_OBJ_ where SYS_DATA_OBJ_ID_ = #{id}
	</select>


	<select id="getSystemFuncDataObjs" 
	    parameterType="com.glaf.model.query.SystemFuncDataObjQuery"
		resultMap="systemFuncDataObjResultMap">
		select distinct E.*
		<include refid="selectSystemFuncDataObjsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.SYS_DATA_OBJ_ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getSystemFuncDataObjCount" 
	    parameterType="com.glaf.model.query.SystemFuncDataObjQuery"
		resultType="int">
		select count(*)
		<include refid="selectSystemFuncDataObjsSql" />
	</select>


	<sql id="selectSystemFuncDataObjsSql">

		from SYSTEM_FUNC_DATA_OBJ_ E
		
		<where>
		       1 = 1  
			 

			<if test="funcId != null">
				and E.FUNC_ID_ = #{funcId}
            </if>
            
            <if test="type != null">
				and E.TYPE_ = #{type}
            </if>
            

			<if test="funcIds != null and funcIds.size() &gt; 0">
			    and E.FUNC_ID_ IN
                <foreach item="x_funcId" index="index" collection="funcIds" 
                     open="(" separator="," close=")">
                  #{x_funcId}
                </foreach>
			</if>
      

			<if test="dataObjId != null">
				and E.DATA_OBJ_ID_ = #{dataObjId}
            </if>

			<if test="dataObjIds != null and dataObjIds.size() &gt; 0">
			    and E.DATA_OBJ_ID_ IN
                <foreach item="x_dataObjId" index="index" collection="dataObjIds" 
                     open="(" separator="," close=")">
                  #{x_dataObjId}
                </foreach>
			</if>
      
	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY_ like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY_ IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
            </if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
            </if>

	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY_ like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY_ IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>

			<if test="updateTimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updateTimeGreaterThanOrEqual}
            </if>

			<if test="updateTimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updateTimeLessThanOrEqual}
            </if>

            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>