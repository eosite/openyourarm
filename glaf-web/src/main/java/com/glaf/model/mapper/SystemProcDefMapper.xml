<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.model.mapper.SystemProcDefMapper">

	<resultMap id="systemProcDefResultMap" type="com.glaf.model.domain.SystemProcDef">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="funcId" column="FUNC_ID_" jdbcType="VARCHAR" />
		<result property="sysId" column="SYS_ID_" jdbcType="VARCHAR" />
		<result property="subSysId" column="SUB_SYS_ID_" jdbcType="VARCHAR" />
		<result property="currProcDefKey" column="CURR_PROCDEF_KEY_"
			jdbcType="VARCHAR" />
		<result property="currProcDefId" column="CURR_PROCDEF_ID_"
			jdbcType="VARCHAR" />
		<result property="currProcModelId" column="CURR_PROCMODEL_ID_"
			jdbcType="VARCHAR" />
		<result property="currProcDeployId" column="CURR_PROCDEPLOY_ID_"
			jdbcType="VARCHAR" />
		<result property="currProcDeployStatus" column="CURR_PROCDEPLOY_STATUS_"
			jdbcType="VARCHAR" />
		<result property="procDefKey" column="PROCDEF_KEY_" jdbcType="VARCHAR" />
		<result property="procDefId" column="PROCDEF_ID_" jdbcType="VARCHAR" />
		<result property="procModelId" column="PROCMODEL_ID_" jdbcType="VARCHAR" />
		<result property="procDeployId" column="PROCDEPLOY_ID_"
			jdbcType="VARCHAR" />
		<result property="procDeployStatus" column="PROCDEPLOY_STATUS_"
			jdbcType="VARCHAR" />
		<result property="eleType" column="ELE_TYPE_" jdbcType="VARCHAR" />
		<result property="eleResourceId" column="ELE_RESOURCE_ID_"
			jdbcType="VARCHAR" />
		<result property="eleId" column="ELE_ID_" jdbcType="VARCHAR" />
		<result property="eleName" column="ELE_NAME_" jdbcType="VARCHAR" />
		<result property="eleDesc" column="ELE_DESC" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP" />
		<result property="deleteFlag" column="DELETE_FLAG_" jdbcType="INTEGER" />
	</resultMap>


	<insert id="insertSystemProcDef" parameterType="com.glaf.model.domain.SystemProcDef">
		insert into SYSTEM_PROCDEF_
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="funcId != null">
				,FUNC_ID_
			</if>
			<if test="sysId != null">
				,SYS_ID_
			</if>
			<if test="subSysId != null">
				,SUB_SYS_ID_
			</if>
			<if test="currProcDefKey != null">
				,CURR_PROCDEF_KEY_
			</if>
			<if test="currProcDefId != null">
				,CURR_PROCDEF_ID_
			</if>
			<if test="currProcModelId != null">
				,CURR_PROCMODEL_ID_
			</if>
			<if test="currProcDeployId != null">
				,CURR_PROCDEPLOY_ID_
			</if>
			<if test="currProcDeployStatus != null">
				,CURR_PROCDEPLOY_STATUS_
			</if>
			<if test="procDefKey != null">
				,PROCDEF_KEY_
			</if>
			<if test="procDefId != null">
				,PROCDEF_ID_
			</if>
			<if test="procModelId != null">
				,PROCMODEL_ID_
			</if>
			<if test="procDeployId != null">
				,PROCDEPLOY_ID_
			</if>
			<if test="procDeployStatus != null">
				,PROCDEPLOY_STATUS_
			</if>
			<if test="eleType != null">
				,ELE_TYPE_
			</if>
			<if test="eleResourceId != null">
				,ELE_RESOURCE_ID_
			</if>
			<if test="eleId != null">
				,ELE_ID_
			</if>
			<if test="eleName != null">
				,ELE_NAME_
			</if>
			<if test="eleDesc != null">
				,ELE_DESC
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
			<if test="updateTime != null">
				,UPDATETIME_
			</if>
			<if test="deleteFlag != null">
				,DELETE_FLAG_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="funcId != null">
				,#{funcId, jdbcType=VARCHAR}
			</if>
			<if test="sysId != null">
				,#{sysId, jdbcType=VARCHAR}
			</if>
			<if test="subSysId != null">
				,#{subSysId, jdbcType=VARCHAR}
			</if>
			<if test="currProcDefKey != null">
				,#{currProcDefKey, jdbcType=VARCHAR}
			</if>
			<if test="currProcDefId != null">
				,#{currProcDefId, jdbcType=VARCHAR}
			</if>
			<if test="currProcModelId != null">
				,#{currProcModelId, jdbcType=VARCHAR}
			</if>
			<if test="currProcDeployId != null">
				,#{currProcDeployId, jdbcType=VARCHAR}
			</if>
			<if test="currProcDeployStatus != null">
				,#{currProcDeployStatus, jdbcType=VARCHAR}
			</if>
			<if test="procDefKey != null">
				,#{procDefKey, jdbcType=VARCHAR}
			</if>
			<if test="procDefId != null">
				,#{procDefId, jdbcType=VARCHAR}
			</if>
			<if test="procModelId != null">
				,#{procModelId, jdbcType=VARCHAR}
			</if>
			<if test="procDeployId != null">
				,#{procDeployId, jdbcType=VARCHAR}
			</if>
			<if test="procDeployStatus != null">
				,#{procDeployStatus, jdbcType=VARCHAR}
			</if>
			<if test="eleType != null">
				,#{eleType, jdbcType=VARCHAR}
			</if>
			<if test="eleResourceId != null">
				,#{eleResourceId, jdbcType=VARCHAR}
			</if>
			<if test="eleId != null">
				,#{eleId, jdbcType=VARCHAR}
			</if>
			<if test="eleName != null">
				,#{eleName, jdbcType=VARCHAR}
			</if>
			<if test="eleDesc != null">
				,#{eleDesc, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="deleteFlag != null">
				,#{deleteFlag, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>


	<update id="updateSystemProcDef" parameterType="com.glaf.model.domain.SystemProcDef">
		update SYSTEM_PROCDEF_
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="funcId != null">
				FUNC_ID_ = #{funcId, jdbcType=VARCHAR},
			</if>
			<if test="sysId != null">
				SYS_ID_ = #{sysId, jdbcType=VARCHAR},
			</if>
			<if test="subSysId != null">
				SUB_SYS_ID_ = #{subSysId, jdbcType=VARCHAR},
			</if>
			<if test="currProcDefKey != null">
				CURR_PROCDEF_KEY_ = #{currProcDefKey, jdbcType=VARCHAR},
			</if>
			<if test="currProcDefId != null">
				CURR_PROCDEF_ID_ = #{currProcDefId, jdbcType=VARCHAR},
			</if>
			<if test="currProcModelId != null">
				CURR_PROCMODEL_ID_ = #{currProcModelId,
				jdbcType=VARCHAR},
			</if>
			<if test="currProcDeployId != null">
				CURR_PROCDEPLOY_ID_ = #{currProcDeployId,
				jdbcType=VARCHAR},
			</if>
			<if test="currProcDeployStatus != null">
				CURR_PROCDEPLOY_STATUS_ = #{currProcDeployStatus,
				jdbcType=VARCHAR},
			</if>
			<if test="procDefKey != null">
				PROCDEF_KEY_ = #{procDefKey, jdbcType=VARCHAR},
			</if>
			<if test="procDefId != null">
				PROCDEF_ID_ = #{procDefId, jdbcType=VARCHAR},
			</if>
			<if test="procModelId != null">
				PROCMODEL_ID_ = #{procModelId, jdbcType=VARCHAR},
			</if>
			<if test="procDeployId != null">
				PROCDEPLOY_ID_ = #{procDeployId, jdbcType=VARCHAR},
			</if>
			<if test="procDeployStatus != null">
				PROCDEPLOY_STATUS_ = #{procDeployStatus,
				jdbcType=VARCHAR},
			</if>
			<if test="eleType != null">
				ELE_TYPE_ = #{eleType, jdbcType=VARCHAR},
			</if>
			<if test="eleResourceId != null">
				ELE_RESOURCE_ID_ = #{eleResourceId, jdbcType=VARCHAR},
			</if>
			<if test="eleId != null">
				ELE_ID_ = #{eleId, jdbcType=VARCHAR},
			</if>
			<if test="eleName != null">
				ELE_NAME_ = #{eleName, jdbcType=VARCHAR},
			</if>
			<if test="eleDesc != null">
				ELE_DESC = #{eleDesc, jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME_ = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
				DELETE_FLAG_ = #{deleteFlag, jdbcType=INTEGER},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>

	<update id="updateProcDefNameType" parameterType="com.glaf.model.domain.SystemProcDef">
	  		update SYSTEM_PROCDEF_
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="eleType != null">
				ELE_TYPE_ = #{eleType, jdbcType=VARCHAR},
			</if>
			<if test="eleName != null">
				ELE_NAME_ = #{eleName, jdbcType=VARCHAR},
			</if>
			<if test="eleDesc != null">
				ELE_DESC = #{eleDesc, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
				DELETE_FLAG_ = #{deleteFlag, jdbcType=INTEGER},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteSystemProcDefById" parameterType="string">
		delete from SYSTEM_PROCDEF_
		where ID_ = #{id}
	</delete>

    <update id="deleteSystemProcDefBySysId" parameterType="string">
		update SYSTEM_PROCDEF_ set DELETE_FLAG_=1
		where SYS_ID_ = #{id}
	</update>
	
	<delete id="deleteSystemProcDefs" parameterType="com.glaf.model.query.SystemProcDefQuery">
		delete from SYSTEM_PROCDEF_
		where (
		ID_ IN
		<foreach item="x_id" index="index" collection="ids" open="("
			separator="," close=")">
			#{x_id}
		</foreach>
		)
	</delete>


	<select id="getSystemProcDefById" parameterType="string"
		resultMap="systemProcDefResultMap">
		select * from SYSTEM_PROCDEF_ where ID_ = #{id}
	</select>


	<select id="getSystemProcDefs" parameterType="com.glaf.model.query.SystemProcDefQuery"
		resultMap="systemProcDefResultMap">
		select distinct E.*
		<include refid="selectSystemProcDefsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getSystemProcDefCount" parameterType="com.glaf.model.query.SystemProcDefQuery"
		resultType="int">
		select count(*)
		<include refid="selectSystemProcDefsSql" />
	</select>


	<sql id="selectSystemProcDefsSql">

		from SYSTEM_PROCDEF_ E

		<where>
			1 = 1


			<if test="funcId != null">
				and E.FUNC_ID_ = #{funcId}
			</if>

			<if test="funcIds != null and funcIds.size() &gt; 0">
				and E.FUNC_ID_ IN
				<foreach item="x_funcId" index="index" collection="funcIds"
					open="(" separator="," close=")">
					#{x_funcId}
				</foreach>
			</if>


			<if test="sysId != null">
				and E.SYS_ID_ = #{sysId}
			</if>

			<if test="sysIds != null and sysIds.size() &gt; 0">
				and E.SYS_ID_ IN
				<foreach item="x_sysId" index="index" collection="sysIds"
					open="(" separator="," close=")">
					#{x_sysId}
				</foreach>
			</if>


			<if test="subSysId != null">
				and E.SUB_SYS_ID_ = #{subSysId}
			</if>

			<if test="subSysIds != null and subSysIds.size() &gt; 0">
				and E.SUB_SYS_ID_ IN
				<foreach item="x_subSysId" index="index" collection="subSysIds"
					open="(" separator="," close=")">
					#{x_subSysId}
				</foreach>
			</if>


			<if test="currProcDefKey != null and currProcDefKey != '' ">
				and E.CURR_PROCDEF_KEY_ = #{currProcDefKey}
			</if>

			<if test="currProcDefKeyLike != null and currProcDefKeyLike != '' ">
				and E.CURR_PROCDEF_KEY_ like #{currProcDefKeyLike}
			</if>

			<if test="currProcDefKeys != null and currProcDefKeys.size() &gt; 0">
				and E.CURR_PROCDEF_KEY_ IN
				<foreach item="x_currProcDefKey" index="index" collection="currProcDefKeys"
					open="(" separator="," close=")">
					#{x_currProcDefKey}
				</foreach>
			</if>

			<if test="currProcDefId != null and currProcDefId != '' ">
				and E.CURR_PROCDEF_ID_ = #{currProcDefId}
			</if>

			<if test="currProcDefIdLike != null and currProcDefIdLike != '' ">
				and E.CURR_PROCDEF_ID_ like #{currProcDefIdLike}
			</if>

			<if test="currProcDefIds != null and currProcDefIds.size() &gt; 0">
				and E.CURR_PROCDEF_ID_ IN
				<foreach item="x_currProcDefId" index="index" collection="currProcDefIds"
					open="(" separator="," close=")">
					#{x_currProcDefId}
				</foreach>
			</if>

			<if test="currProcModelId != null and currProcModelId != '' ">
				and E.CURR_PROCMODEL_ID_ = #{currProcModelId}
			</if>

			<if test="currProcModelIdLike != null and currProcModelIdLike != '' ">
				and E.CURR_PROCMODEL_ID_ like #{currProcModelIdLike}
			</if>

			<if test="currProcModelIds != null and currProcModelIds.size() &gt; 0">
				and E.CURR_PROCMODEL_ID_ IN
				<foreach item="x_currProcModelId" index="index" collection="currProcModelIds"
					open="(" separator="," close=")">
					#{x_currProcModelId}
				</foreach>
			</if>

			<if test="currProcDeployId != null and currProcDeployId != '' ">
				and E.CURR_PROCDEPLOY_ID_ = #{currProcDeployId}
			</if>

			<if test="currProcDeployIdLike != null and currProcDeployIdLike != '' ">
				and E.CURR_PROCDEPLOY_ID_ like #{currProcDeployIdLike}
			</if>

			<if test="currProcDeployIds != null and currProcDeployIds.size() &gt; 0">
				and E.CURR_PROCDEPLOY_ID_ IN
				<foreach item="x_currProcDeployId" index="index" collection="currProcDeployIds"
					open="(" separator="," close=")">
					#{x_currProcDeployId}
				</foreach>
			</if>

			<if test="currProcDeployStatus != null and currProcDeployStatus != '' ">
				and E.CURR_PROCDEPLOY_STATUS_ = #{currProcDeployStatus}
			</if>

			<if
				test="currProcDeployStatusLike != null and currProcDeployStatusLike != '' ">
				and E.CURR_PROCDEPLOY_STATUS_ like #{currProcDeployStatusLike}
			</if>

			<if
				test="currProcDeployStatuss != null and currProcDeployStatuss.size() &gt; 0">
				and E.CURR_PROCDEPLOY_STATUS_ IN
				<foreach item="x_currProcDeployStatus" index="index"
					collection="currProcDeployStatuss" open="(" separator="," close=")">
					#{x_currProcDeployStatus}
				</foreach>
			</if>

			<if test="procDefKey != null and procDefKey != '' ">
				and E.PROCDEF_KEY_ = #{procDefKey}
			</if>

			<if test="procDefKeyLike != null and procDefKeyLike != '' ">
				and E.PROCDEF_KEY_ like #{procDefKeyLike}
			</if>

			<if test="procDefKeys != null and procDefKeys.size() &gt; 0">
				and E.PROCDEF_KEY_ IN
				<foreach item="x_procDefKey" index="index" collection="procDefKeys"
					open="(" separator="," close=")">
					#{x_procDefKey}
				</foreach>
			</if>

			<if test="procDefId != null and procDefId != '' ">
				and E.PROCDEF_ID_ = #{procDefId}
			</if>

			<if test="procDefIdLike != null and procDefIdLike != '' ">
				and E.PROCDEF_ID_ like #{procDefIdLike}
			</if>

			<if test="procDefIds != null and procDefIds.size() &gt; 0">
				and E.PROCDEF_ID_ IN
				<foreach item="x_procDefId" index="index" collection="procDefIds"
					open="(" separator="," close=")">
					#{x_procDefId}
				</foreach>
			</if>

			<if test="procModelId != null and procModelId != '' ">
				and E.PROCMODEL_ID_ = #{procModelId}
			</if>

			<if test="procModelIdLike != null and procModelIdLike != '' ">
				and E.PROCMODEL_ID_ like #{procModelIdLike}
			</if>

			<if test="procModelIds != null and procModelIds.size() &gt; 0">
				and E.PROCMODEL_ID_ IN
				<foreach item="x_procModelId" index="index" collection="procModelIds"
					open="(" separator="," close=")">
					#{x_procModelId}
				</foreach>
			</if>

			<if test="procDeployId != null and procDeployId != '' ">
				and E.PROCDEPLOY_ID_ = #{procDeployId}
			</if>

			<if test="procDeployIdLike != null and procDeployIdLike != '' ">
				and E.PROCDEPLOY_ID_ like #{procDeployIdLike}
			</if>

			<if test="procDeployIds != null and procDeployIds.size() &gt; 0">
				and E.PROCDEPLOY_ID_ IN
				<foreach item="x_procDeployId" index="index" collection="procDeployIds"
					open="(" separator="," close=")">
					#{x_procDeployId}
				</foreach>
			</if>

			<if test="procDeployStatus != null and procDeployStatus != '' ">
				and E.PROCDEPLOY_STATUS_ = #{procDeployStatus}
			</if>

			<if test="procDeployStatusLike != null and procDeployStatusLike != '' ">
				and E.PROCDEPLOY_STATUS_ like #{procDeployStatusLike}
			</if>

			<if test="procDeployStatuss != null and procDeployStatuss.size() &gt; 0">
				and E.PROCDEPLOY_STATUS_ IN
				<foreach item="x_procDeployStatus" index="index" collection="procDeployStatuss"
					open="(" separator="," close=")">
					#{x_procDeployStatus}
				</foreach>
			</if>

			<if test="eleType != null and eleType != '' ">
				and E.ELE_TYPE_ = #{eleType}
			</if>

			<if test="eleTypeLike != null and eleTypeLike != '' ">
				and E.ELE_TYPE_ like #{eleTypeLike}
			</if>

			<if test="eleTypes != null and eleTypes.size() &gt; 0">
				and E.ELE_TYPE_ IN
				<foreach item="x_eleType" index="index" collection="eleTypes"
					open="(" separator="," close=")">
					#{x_eleType}
				</foreach>
			</if>

			<if test="eleResourceId != null and eleResourceId != '' ">
				and E.ELE_RESOURCE_ID_ = #{eleResourceId}
			</if>

			<if test="eleResourceIdLike != null and eleResourceIdLike != '' ">
				and E.ELE_RESOURCE_ID_ like #{eleResourceIdLike}
			</if>

			<if test="eleResourceIds != null and eleResourceIds.size() &gt; 0">
				and E.ELE_RESOURCE_ID_ IN
				<foreach item="x_eleResourceId" index="index" collection="eleResourceIds"
					open="(" separator="," close=")">
					#{x_eleResourceId}
				</foreach>
			</if>

			<if test="eleId != null and eleId != '' ">
				and E.ELE_ID_ = #{eleId}
			</if>

			<if test="eleIdLike != null and eleIdLike != '' ">
				and E.ELE_ID_ like #{eleIdLike}
			</if>

			<if test="eleIds != null and eleIds.size() &gt; 0">
				and E.ELE_ID_ IN
				<foreach item="x_eleId" index="index" collection="eleIds"
					open="(" separator="," close=")">
					#{x_eleId}
				</foreach>
			</if>

			<if test="eleName != null and eleName != '' ">
				and E.ELE_NAME_ = #{eleName}
			</if>

			<if test="eleNameLike != null and eleNameLike != '' ">
				and E.ELE_NAME_ like #{eleNameLike}
			</if>

			<if test="eleNames != null and eleNames.size() &gt; 0">
				and E.ELE_NAME_ IN
				<foreach item="x_eleName" index="index" collection="eleNames"
					open="(" separator="," close=")">
					#{x_eleName}
				</foreach>
			</if>

			<if test="eleDesc != null and eleDesc != '' ">
				and E.ELE_DESC = #{eleDesc}
			</if>

			<if test="eleDescLike != null and eleDescLike != '' ">
				and E.ELE_DESC like #{eleDescLike}
			</if>

			<if test="eleDescs != null and eleDescs.size() &gt; 0">
				and E.ELE_DESC IN
				<foreach item="x_eleDesc" index="index" collection="eleDescs"
					open="(" separator="," close=")">
					#{x_eleDesc}
				</foreach>
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY_ like #{createByLike}
			</if>

			<if test="createBys != null and createBys.size() &gt; 0">
				and E.CREATEBY_ IN
				<foreach item="x_createBy" index="index" collection="createBys"
					open="(" separator="," close=")">
					#{x_createBy}
				</foreach>
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>


			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
			</if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY_ like #{updateByLike}
			</if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
				and E.UPDATEBY_ IN
				<foreach item="x_updateBy" index="index" collection="updateBys"
					open="(" separator="," close=")">
					#{x_updateBy}
				</foreach>
			</if>

			<if test="updateTimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updateTimeGreaterThanOrEqual}
			</if>

			<if test="updateTimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updateTimeLessThanOrEqual}
			</if>


			<if test="deleteFlag != null">
				and E.DELETE_FLAG_ = #{deleteFlag}
			</if>

			<if test="deleteFlagGreaterThanOrEqual != null">
				and E.DELETE_FLAG_ &gt;= #{deleteFlagGreaterThanOrEqual}
			</if>

			<if test="deleteFlagLessThanOrEqual != null">
				and E.DELETE_FLAG_ &lt;= #{deleteFlagLessThanOrEqual}
			</if>

			<if test="deleteFlags != null and deleteFlags.size() &gt; 0">
				and E.DELETE_FLAG_ IN
				<foreach item="x_deleteFlag" index="index" collection="deleteFlags"
					open="(" separator="," close=")">
					#{x_deleteFlag}
				</foreach>
			</if>

			<if test="dataRequest != null and dataRequest.filter != null ">
				<include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>

		</where>
	</sql>

</mapper>