<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.dep.report.mapper.DepReportReferenceMapper">

 	<resultMap id="depReportReferenceResultMap"	type="com.glaf.dep.report.domain.DepReportReference">
        <id property="id" column="ID_" jdbcType="BIGINT" />
        <result property="repDataSetId" column="REPDATASET_ID_" jdbcType="BIGINT"/>
        <result property="repDataId" column="REPDATA_ID_" jdbcType="BIGINT"/>
        <result property="refType" column="REFTYPE_" jdbcType="VARCHAR"/>
        <result property="refMode" column="REFMODE_" jdbcType="VARCHAR"/>
        <result property="enCondition" column="ENCONDITON_" jdbcType="VARCHAR"/>
        <result property="columnName" column="COLUMNNAME_" jdbcType="VARCHAR"/>
        <result property="tableName" column="TABLENAME_" jdbcType="VARCHAR"/>
        <result property="reportId" column="REPORT_ID_" jdbcType="VARCHAR"/>
        <result property="reportCellId" column="REPORT_CELL_ID_" jdbcType="VARCHAR"/>
        <result property="ruleJson" column="RULEJSON_" jdbcType="VARCHAR"/>
        <result property="creator" column="CREATOR_" jdbcType="VARCHAR"/>
        <result property="createDateTime" column="CREATEDATETIME_" jdbcType="TIMESTAMP"/>
        <result property="modifier" column="MODIFIER_" jdbcType="VARCHAR"/>
        <result property="modifyDateTime" column="MODIFYDATETIME_" jdbcType="TIMESTAMP"/>
	</resultMap>

 
	<insert id="insertDepReportReference" parameterType="com.glaf.dep.report.domain.DepReportReference">
		insert into DEP_REPORT_REFERENCE 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
			<if test="repDataSetId != null">
				,REPDATASET_ID_ 
			</if>
			<if test="repDataId != null">
				,REPDATA_ID_ 
			</if>
			<if test="refType != null">
				,REFTYPE_ 
			</if>
			<if test="refMode != null">
				,REFMODE_ 
			</if>
			<if test="enCondition != null">
				,ENCONDITON_ 
			</if>
			<if test="columnName != null">
				,COLUMNNAME_ 
			</if>
			<if test="tableName != null">
				,TABLENAME_ 
			</if>
			<if test="reportId != null">
				,REPORT_ID_ 
			</if>
			<if test="reportCellId != null">
				,REPORT_CELL_ID_ 
			</if>
			<if test="ruleJson != null">
				,RULEJSON_ 
			</if>
			<if test="creator != null">
				,CREATOR_ 
			</if>
			<if test="createDateTime != null">
				,CREATEDATETIME_ 
			</if>
			<if test="modifier != null">
				,MODIFIER_ 
			</if>
			<if test="modifyDateTime != null">
				,MODIFYDATETIME_ 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=BIGINT}
	     
			<if test="repDataSetId != null">
				,#{repDataSetId, jdbcType=BIGINT}
			</if>
			<if test="repDataId != null">
				,#{repDataId, jdbcType=BIGINT}
			</if>
			<if test="refType != null">
				,#{refType, jdbcType=VARCHAR}
			</if>
			<if test="refMode != null">
				,#{refMode, jdbcType=VARCHAR}
			</if>
			<if test="enCondition != null">
				,#{enCondition, jdbcType=VARCHAR}
			</if>
			<if test="columnName != null">
				,#{columnName, jdbcType=VARCHAR}
			</if>
			<if test="tableName != null">
				,#{tableName, jdbcType=VARCHAR}
			</if>
			<if test="reportId != null">
				,#{reportId, jdbcType=VARCHAR}
			</if>
			<if test="reportCellId != null">
				,#{reportCellId, jdbcType=VARCHAR}
			</if>
			<if test="ruleJson != null">
				,#{ruleJson, jdbcType=VARCHAR}
			</if>
			<if test="creator != null">
				,#{creator, jdbcType=VARCHAR}
			</if>
			<if test="createDateTime != null">
				,#{createDateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="modifier != null">
				,#{modifier, jdbcType=VARCHAR}
			</if>
			<if test="modifyDateTime != null">
				,#{modifyDateTime, jdbcType=TIMESTAMP}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateDepReportReference" parameterType="com.glaf.dep.report.domain.DepReportReference">
		update DEP_REPORT_REFERENCE
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="repDataSetId != null">
				REPDATASET_ID_ = #{repDataSetId, jdbcType=BIGINT},
			</if>
			<if test="repDataId != null">
				REPDATA_ID_ = #{repDataId, jdbcType=BIGINT},
			</if>
			<if test="refType != null">
				REFTYPE_ = #{refType, jdbcType=VARCHAR},
			</if>
			<if test="refMode != null">
				REFMODE_ = #{refMode, jdbcType=VARCHAR},
			</if>
			<if test="enCondition != null">
				ENCONDITON_ = #{enCondition, jdbcType=VARCHAR},
			</if>
			<if test="columnName != null">
				COLUMNNAME_ = #{columnName, jdbcType=VARCHAR},
			</if>
			<if test="tableName != null">
				TABLENAME_ = #{tableName, jdbcType=VARCHAR},
			</if>
			<if test="reportId != null">
				REPORT_ID_ = #{reportId, jdbcType=VARCHAR},
			</if>
			<if test="reportCellId != null">
				REPORT_CELL_ID_ = #{reportCellId, jdbcType=VARCHAR},
			</if>
			<if test="ruleJson != null">
				RULEJSON_ = #{ruleJson, jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				CREATOR_ = #{creator, jdbcType=VARCHAR},
			</if>
			<if test="createDateTime != null">
				CREATEDATETIME_ = #{createDateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="modifier != null">
				MODIFIER_ = #{modifier, jdbcType=VARCHAR},
			</if>
			<if test="modifyDateTime != null">
				MODIFYDATETIME_ = #{modifyDateTime, jdbcType=TIMESTAMP},
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=BIGINT}
		
    </update>

 
	<delete id="deleteDepReportReferenceById" parameterType="long"> 
        delete from DEP_REPORT_REFERENCE
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteDepReportReferences" parameterType="com.glaf.dep.report.query.DepReportReferenceQuery">
		delete from DEP_REPORT_REFERENCE
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getDepReportReferenceById" parameterType="long" resultMap="depReportReferenceResultMap">
		select * from DEP_REPORT_REFERENCE where ID_ = #{id}
	</select>


	<select id="getDepReportReferences" 
	    parameterType="com.glaf.dep.report.query.DepReportReferenceQuery"
		resultMap="depReportReferenceResultMap">
		select distinct E.*
		<include refid="selectDepReportReferencesSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getDepReportReferenceCount" 
	    parameterType="com.glaf.dep.report.query.DepReportReferenceQuery"
		resultType="int">
		select count(*)
		<include refid="selectDepReportReferencesSql" />
	</select>


	<sql id="selectDepReportReferencesSql">

		from DEP_REPORT_REFERENCE E
		
		<where>
		       1 = 1  
			 

			<if test="repDataSetId != null">
				and E.REPDATASET_ID_ = #{repDataSetId}
            </if>

			<if test="repDataSetIdGreaterThanOrEqual != null">
				and E.REPDATASET_ID_ &gt;= #{repDataSetIdGreaterThanOrEqual}
            </if>

			<if test="repDataSetIdLessThanOrEqual != null">
				and E.REPDATASET_ID_ &lt;= #{repDataSetIdLessThanOrEqual}
            </if>

			<if test="repDataSetIds != null and repDataSetIds.size() &gt; 0">
			    and E.REPDATASET_ID_ IN
                <foreach item="x_repDataSetId" index="index" collection="repDataSetIds" 
                     open="(" separator="," close=")">
                  #{x_repDataSetId}
                </foreach>
			</if>
      

			<if test="repDataId != null">
				and E.REPDATA_ID_ = #{repDataId}
            </if>

			<if test="repDataIdGreaterThanOrEqual != null">
				and E.REPDATA_ID_ &gt;= #{repDataIdGreaterThanOrEqual}
            </if>

			<if test="repDataIdLessThanOrEqual != null">
				and E.REPDATA_ID_ &lt;= #{repDataIdLessThanOrEqual}
            </if>

			<if test="repDataIds != null and repDataIds.size() &gt; 0">
			    and E.REPDATA_ID_ IN
                <foreach item="x_repDataId" index="index" collection="repDataIds" 
                     open="(" separator="," close=")">
                  #{x_repDataId}
                </foreach>
			</if>
      
	        
			<if test="refType != null and refType != '' ">
				and E.REFTYPE_ = #{refType}
            </if>

			<if test="refTypeLike != null and refTypeLike != '' ">
				and E.REFTYPE_ like #{refTypeLike}
            </if>

			<if test="refTypes != null and refTypes.size() &gt; 0">
			    and E.REFTYPE_ IN
                <foreach item="x_refType" index="index" collection="refTypes" 
                     open="(" separator="," close=")">
                  #{x_refType}
                </foreach>
			</if>
	        
			<if test="refMode != null and refMode != '' ">
				and E.REFMODE_ = #{refMode}
            </if>

			<if test="refModeLike != null and refModeLike != '' ">
				and E.REFMODE_ like #{refModeLike}
            </if>

			<if test="refModes != null and refModes.size() &gt; 0">
			    and E.REFMODE_ IN
                <foreach item="x_refMode" index="index" collection="refModes" 
                     open="(" separator="," close=")">
                  #{x_refMode}
                </foreach>
			</if>
	        
			<if test="enCondition != null and enCondition != '' ">
				and E.ENCONDITON_ = #{enCondition}
            </if>

			<if test="enConditionLike != null and enConditionLike != '' ">
				and E.ENCONDITON_ like #{enConditionLike}
            </if>

			<if test="enConditions != null and enConditions.size() &gt; 0">
			    and E.ENCONDITON_ IN
                <foreach item="x_enCondition" index="index" collection="enConditions" 
                     open="(" separator="," close=")">
                  #{x_enCondition}
                </foreach>
			</if>
	        
			<if test="columnName != null and columnName != '' ">
				and E.COLUMNNAME_ = #{columnName}
            </if>

			<if test="columnNameLike != null and columnNameLike != '' ">
				and E.COLUMNNAME_ like #{columnNameLike}
            </if>

			<if test="columnNames != null and columnNames.size() &gt; 0">
			    and E.COLUMNNAME_ IN
                <foreach item="x_columnName" index="index" collection="columnNames" 
                     open="(" separator="," close=")">
                  #{x_columnName}
                </foreach>
			</if>
	        
			<if test="tableName != null and tableName != '' ">
				and E.TABLENAME_ = #{tableName}
            </if>

			<if test="tableNameLike != null and tableNameLike != '' ">
				and E.TABLENAME_ like #{tableNameLike}
            </if>

			<if test="tableNames != null and tableNames.size() &gt; 0">
			    and E.TABLENAME_ IN
                <foreach item="x_tableName" index="index" collection="tableNames" 
                     open="(" separator="," close=")">
                  #{x_tableName}
                </foreach>
			</if>
	        
			<if test="reportId != null and reportId != '' ">
				and E.REPORT_ID_ = #{reportId}
            </if>

			<if test="reportIdLike != null and reportIdLike != '' ">
				and E.REPORT_ID_ like #{reportIdLike}
            </if>

			<if test="reportIds != null and reportIds.size() &gt; 0">
			    and E.REPORT_ID_ IN
                <foreach item="x_reportId" index="index" collection="reportIds" 
                     open="(" separator="," close=")">
                  #{x_reportId}
                </foreach>
			</if>
	        
			<if test="reportCellId != null and reportCellId != '' ">
				and E.REPORT_CELL_ID_ = #{reportCellId}
            </if>

			<if test="reportCellIdLike != null and reportCellIdLike != '' ">
				and E.REPORT_CELL_ID_ like #{reportCellIdLike}
            </if>

			<if test="reportCellIds != null and reportCellIds.size() &gt; 0">
			    and E.REPORT_CELL_ID_ IN
                <foreach item="x_reportCellId" index="index" collection="reportCellIds" 
                     open="(" separator="," close=")">
                  #{x_reportCellId}
                </foreach>
			</if>
	        
			<if test="ruleJson != null and ruleJson != '' ">
				and E.RULEJSON_ = #{ruleJson}
            </if>

			<if test="ruleJsonLike != null and ruleJsonLike != '' ">
				and E.RULEJSON_ like #{ruleJsonLike}
            </if>

			<if test="ruleJsons != null and ruleJsons.size() &gt; 0">
			    and E.RULEJSON_ IN
                <foreach item="x_ruleJson" index="index" collection="ruleJsons" 
                     open="(" separator="," close=")">
                  #{x_ruleJson}
                </foreach>
			</if>
	        
			<if test="creator != null and creator != '' ">
				and E.CREATOR_ = #{creator}
            </if>

			<if test="creatorLike != null and creatorLike != '' ">
				and E.CREATOR_ like #{creatorLike}
            </if>

			<if test="creators != null and creators.size() &gt; 0">
			    and E.CREATOR_ IN
                <foreach item="x_creator" index="index" collection="creators" 
                     open="(" separator="," close=")">
                  #{x_creator}
                </foreach>
			</if>

			<if test="createDateTimeGreaterThanOrEqual != null">
				and E.CREATEDATETIME_ &gt;= #{createDateTimeGreaterThanOrEqual}
            </if>

			<if test="createDateTimeLessThanOrEqual != null">
				and E.CREATEDATETIME_ &lt;= #{createDateTimeLessThanOrEqual}
            </if>

	        
			<if test="modifier != null and modifier != '' ">
				and E.MODIFIER_ = #{modifier}
            </if>

			<if test="modifierLike != null and modifierLike != '' ">
				and E.MODIFIER_ like #{modifierLike}
            </if>

			<if test="modifiers != null and modifiers.size() &gt; 0">
			    and E.MODIFIER_ IN
                <foreach item="x_modifier" index="index" collection="modifiers" 
                     open="(" separator="," close=")">
                  #{x_modifier}
                </foreach>
			</if>

			<if test="modifyDateTimeGreaterThanOrEqual != null">
				and E.MODIFYDATETIME_ &gt;= #{modifyDateTimeGreaterThanOrEqual}
            </if>

			<if test="modifyDateTimeLessThanOrEqual != null">
				and E.MODIFYDATETIME_ &lt;= #{modifyDateTimeLessThanOrEqual}
            </if>

            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>