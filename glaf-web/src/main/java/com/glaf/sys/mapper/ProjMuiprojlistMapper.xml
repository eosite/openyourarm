<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.sys.mapper.ProjMuiprojlistMapper">

 	<resultMap id="projMuiprojlistResultMap"	type="com.glaf.sys.domain.ProjMuiprojlist">
        <id property="indexId" column="INDEX_ID" jdbcType="INTEGER" />
        <result property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="intFlag" column="INTFLAG" jdbcType="INTEGER"/>
        <result property="sysId" column="SYS_ID" jdbcType="VARCHAR"/>
        <result property="projName" column="PROJNAME" jdbcType="VARCHAR"/>
        <result property="num" column="NUM" jdbcType="VARCHAR"/>
        <result property="cTime" column="CTIME" jdbcType="TIMESTAMP"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="sDbName" column="SDBNAME" jdbcType="VARCHAR"/>
        <result property="sServerName" column="SSERVERNAME" jdbcType="VARCHAR"/>
        <result property="sUser" column="SUSER" jdbcType="VARCHAR"/>
        <result property="spassword" column="SPASSWORD" jdbcType="VARCHAR"/>
        <result property="listNo" column="LISTNO" jdbcType="INTEGER"/>
        <result property="email" column="EMAIL" jdbcType="VARCHAR"/>
        <result property="iParentId" column="PARENT_ID" jdbcType="INTEGER"/>
        <result property="nodeIco" column="NODEICO" jdbcType="INTEGER"/>
        <result property="intLine" column="INTLINE" jdbcType="INTEGER"/>
        <result property="domainIndex" column="DOMAIN_INDEX" jdbcType="INTEGER"/>
        <result property="inLocal" column="INTLOCAL" jdbcType="INTEGER"/>
        <result property="emailPsw" column="EMAIL_PSW" jdbcType="VARCHAR"/>
        <result property="intConnected" column="INTCONNECTED" jdbcType="INTEGER"/>
        <result property="emailsStr" column="EMAIL_S" jdbcType="VARCHAR"/>
        <result property="intOrgLevel" column="INTORGLEVEL" jdbcType="INTEGER"/>
        <result property="intSendType" column="INTSENDTYPE" jdbcType="INTEGER"/>
        <result property="emailBaskUp" column="EMAIL_BACKUP" jdbcType="VARCHAR"/>
        <result property="emailImplement" column="EMAIL_IMPLEMENT" jdbcType="VARCHAR"/>
        <result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="CREATEBY" jdbcType="VARCHAR"/>
        <result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR"/>
        <result property="smsUrl" column="SMS_URL" jdbcType="VARCHAR"/>
        <result property="toDbName" column="TODBNAME" jdbcType="VARCHAR"/>
        <result property="toServerName" column="TOSERVERNAME" jdbcType="VARCHAR"/>
        <result property="toUser" column="TOUSER" jdbcType="VARCHAR"/>
        <result property="toPassword" column="TOPASSWORD" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertProjMuiprojlist" parameterType="com.glaf.sys.domain.ProjMuiprojlist">
		insert into PROJ_MUIPROJLIST 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    INDEX_ID
			<if test="id != null">
				,ID 
			</if>
			<if test="intFlag != null">
				,INTFLAG 
			</if>
			<if test="sysId != null">
				,SYS_ID 
			</if>
			<if test="projName != null">
				,PROJNAME 
			</if>
			<if test="num != null">
				,NUM 
			</if>
			<if test="cTime != null">
				,CTIME 
			</if>
			<if test="content != null">
				,CONTENT 
			</if>
			<if test="sDbName != null">
				,SDBNAME 
			</if>
			<if test="sServerName != null">
				,SSERVERNAME 
			</if>
			<if test="sUser != null">
				,SUSER 
			</if>
			<if test="spassword != null">
				,SPASSWORD 
			</if>
			<if test="listNo != null">
				,LISTNO 
			</if>
			<if test="email != null">
				,EMAIL 
			</if>
			<if test="iParentId != null">
				,PARENT_ID 
			</if>
			<if test="nodeIco != null">
				,NODEICO 
			</if>
			<if test="intLine != null">
				,INTLINE 
			</if>
			<if test="domainIndex != null">
				,DOMAIN_INDEX 
			</if>
			<if test="inLocal != null">
				,INTLOCAL 
			</if>
			<if test="emailPsw != null">
				,EMAIL_PSW 
			</if>
			<if test="intConnected != null">
				,INTCONNECTED 
			</if>
			<if test="emailsStr != null">
				,EMAIL_S 
			</if>
			<if test="intOrgLevel != null">
				,INTORGLEVEL 
			</if>
			<if test="intSendType != null">
				,INTSENDTYPE 
			</if>
			<if test="emailBaskUp != null">
				,EMAIL_BACKUP 
			</if>
			<if test="emailImplement != null">
				,EMAIL_IMPLEMENT 
			</if>
			<if test="createDate != null">
				,CREATEDATE 
			</if>
			<if test="updateDate != null">
				,UPDATEDATE 
			</if>
			<if test="createBy != null">
				,CREATEBY 
			</if>
			<if test="updateBy != null">
				,UPDATEBY 
			</if>
			<if test="smsUrl != null">
				,SMS_URL 
			</if>
			<if test="toDbName != null">
				,TODBNAME 
			</if>
			<if test="toServerName != null">
				,TOSERVERNAME 
			</if>
			<if test="toUser != null">
				,TOUSER 
			</if>
			<if test="toPassword != null">
				,TOPASSWORD 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{indexId, jdbcType=INTEGER}
	     
			<if test="id != null">
				,#{id, jdbcType=VARCHAR}
			</if>
			<if test="intFlag != null">
				,#{intFlag, jdbcType=INTEGER}
			</if>
			<if test="sysId != null">
				,#{sysId, jdbcType=VARCHAR}
			</if>
			<if test="projName != null">
				,#{projName, jdbcType=VARCHAR}
			</if>
			<if test="num != null">
				,#{num, jdbcType=VARCHAR}
			</if>
			<if test="cTime != null">
				,#{cTime, jdbcType=TIMESTAMP}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="sDbName != null">
				,#{sDbName, jdbcType=VARCHAR}
			</if>
			<if test="sServerName != null">
				,#{sServerName, jdbcType=VARCHAR}
			</if>
			<if test="sUser != null">
				,#{sUser, jdbcType=VARCHAR}
			</if>
			<if test="spassword != null">
				,#{spassword, jdbcType=VARCHAR}
			</if>
			<if test="listNo != null">
				,#{listNo, jdbcType=INTEGER}
			</if>
			<if test="email != null">
				,#{email, jdbcType=VARCHAR}
			</if>
			<if test="iParentId != null">
				,#{iParentId, jdbcType=INTEGER}
			</if>
			<if test="nodeIco != null">
				,#{nodeIco, jdbcType=INTEGER}
			</if>
			<if test="intLine != null">
				,#{intLine, jdbcType=INTEGER}
			</if>
			<if test="domainIndex != null">
				,#{domainIndex, jdbcType=INTEGER}
			</if>
			<if test="inLocal != null">
				,#{inLocal, jdbcType=INTEGER}
			</if>
			<if test="emailPsw != null">
				,#{emailPsw, jdbcType=VARCHAR}
			</if>
			<if test="intConnected != null">
				,#{intConnected, jdbcType=INTEGER}
			</if>
			<if test="emailsStr != null">
				,#{emailsStr, jdbcType=VARCHAR}
			</if>
			<if test="intOrgLevel != null">
				,#{intOrgLevel, jdbcType=INTEGER}
			</if>
			<if test="intSendType != null">
				,#{intSendType, jdbcType=INTEGER}
			</if>
			<if test="emailBaskUp != null">
				,#{emailBaskUp, jdbcType=VARCHAR}
			</if>
			<if test="emailImplement != null">
				,#{emailImplement, jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="smsUrl != null">
				,#{smsUrl, jdbcType=VARCHAR}
			</if>
			<if test="toDbName != null">
				,#{toDbName, jdbcType=VARCHAR}
			</if>
			<if test="toServerName != null">
				,#{toServerName, jdbcType=VARCHAR}
			</if>
			<if test="toUser != null">
				,#{toUser, jdbcType=VARCHAR}
			</if>
			<if test="toPassword != null">
				,#{toPassword, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateProjMuiprojlist" parameterType="com.glaf.sys.domain.ProjMuiprojlist">
		update PROJ_MUIPROJLIST
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="id != null">
				ID = #{id, jdbcType=VARCHAR},
			</if>
			<if test="intFlag != null">
				INTFLAG = #{intFlag, jdbcType=INTEGER},
			</if>
			<if test="sysId != null">
				SYS_ID = #{sysId, jdbcType=VARCHAR},
			</if>
			<if test="projName != null">
				PROJNAME = #{projName, jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				NUM = #{num, jdbcType=VARCHAR},
			</if>
			<if test="cTime != null">
				CTIME = #{cTime, jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				CONTENT = #{content, jdbcType=VARCHAR},
			</if>
			<if test="sDbName != null">
				SDBNAME = #{sDbName, jdbcType=VARCHAR},
			</if>
			<if test="sServerName != null">
				SSERVERNAME = #{sServerName, jdbcType=VARCHAR},
			</if>
			<if test="sUser != null">
				SUSER = #{sUser, jdbcType=VARCHAR},
			</if>
			<if test="spassword != null">
				SPASSWORD = #{spassword, jdbcType=VARCHAR},
			</if>
			<if test="listNo != null">
				LISTNO = #{listNo, jdbcType=INTEGER},
			</if>
			<if test="email != null">
				EMAIL = #{email, jdbcType=VARCHAR},
			</if>
			<if test="iParentId != null">
				PARENT_ID = #{iParentId, jdbcType=INTEGER},
			</if>
			<if test="nodeIco != null">
				NODEICO = #{nodeIco, jdbcType=INTEGER},
			</if>
			<if test="intLine != null">
				INTLINE = #{intLine, jdbcType=INTEGER},
			</if>
			<if test="domainIndex != null">
				DOMAIN_INDEX = #{domainIndex, jdbcType=INTEGER},
			</if>
			<if test="inLocal != null">
				INTLOCAL = #{inLocal, jdbcType=INTEGER},
			</if>
			<if test="emailPsw != null">
				EMAIL_PSW = #{emailPsw, jdbcType=VARCHAR},
			</if>
			<if test="intConnected != null">
				INTCONNECTED = #{intConnected, jdbcType=INTEGER},
			</if>
			<if test="emailsStr != null">
				EMAIL_S = #{emailsStr, jdbcType=VARCHAR},
			</if>
			<if test="intOrgLevel != null">
				INTORGLEVEL = #{intOrgLevel, jdbcType=INTEGER},
			</if>
			<if test="intSendType != null">
				INTSENDTYPE = #{intSendType, jdbcType=INTEGER},
			</if>
			<if test="emailBaskUp != null">
				EMAIL_BACKUP = #{emailBaskUp, jdbcType=VARCHAR},
			</if>
			<if test="emailImplement != null">
				EMAIL_IMPLEMENT = #{emailImplement, jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CREATEDATE = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				CREATEBY = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="smsUrl != null">
				SMS_URL = #{smsUrl, jdbcType=VARCHAR},
			</if>
			<if test="toDbName != null">
				TODBNAME = #{toDbName, jdbcType=VARCHAR},
			</if>
			<if test="toServerName != null">
				TOSERVERNAME = #{toServerName, jdbcType=VARCHAR},
			</if>
			<if test="toUser != null">
				TOUSER = #{toUser, jdbcType=VARCHAR},
			</if>
			<if test="toPassword != null">
				TOPASSWORD = #{toPassword, jdbcType=VARCHAR},
			</if>
        </trim>
		where
          INDEX_ID = #{indexId, jdbcType=INTEGER}
		
    </update>

 
	<delete id="deleteProjMuiprojlistById" parameterType="integer"> 
        delete from PROJ_MUIPROJLIST
        where INDEX_ID =	#{id}
	</delete>

	
	<delete id="deleteProjMuiprojlists" parameterType="com.glaf.sys.query.ProjMuiprojlistQuery">
		delete from PROJ_MUIPROJLIST
		where ( 
 			  INDEX_ID IN
              <foreach item="x_indexId" index="index" collection="indexIds" 
                     open="(" separator="," close=")">
                  #{x_indexId}
              </foreach>
		)
	</delete>


	<select id="getProjMuiprojlistById" parameterType="integer" resultMap="projMuiprojlistResultMap">
		select * from PROJ_MUIPROJLIST where INDEX_ID = #{id}
	</select>

    <select id="getLocalProjMuiprojlist" resultMap="projMuiprojlistResultMap">
		select * from PROJ_MUIPROJLIST where intLocal = 1
	</select>
	<select id="getProjMuiprojlists" 
	    parameterType="com.glaf.sys.query.ProjMuiprojlistQuery"
		resultMap="projMuiprojlistResultMap">
		select distinct E.*
		<include refid="selectProjMuiprojlistsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.INDEX_ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getProjMuiprojlistCount" 
	    parameterType="com.glaf.sys.query.ProjMuiprojlistQuery"
		resultType="int">
		select count(*)
		<include refid="selectProjMuiprojlistsSql" />
	</select>


	<sql id="selectProjMuiprojlistsSql">

		from PROJ_MUIPROJLIST E
		
		<where>
		       1 = 1  
			 
	        
			<if test="id != null and id != '' ">
				and E.ID = #{id}
            </if>

			<if test="idLike != null and idLike != '' ">
				and E.ID like #{idLike}
            </if>

			<if test="ids != null and ids.size() &gt; 0">
			    and E.ID IN
                <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
                </foreach>
			</if>

			<if test="intFlag != null">
				and E.INTFLAG = #{intFlag}
            </if>

			<if test="intFlagGreaterThanOrEqual != null">
				and E.INTFLAG &gt;= #{intFlagGreaterThanOrEqual}
            </if>

			<if test="intFlagLessThanOrEqual != null">
				and E.INTFLAG &lt;= #{intFlagLessThanOrEqual}
            </if>

			<if test="intFlags != null and intFlags.size() &gt; 0">
			    and E.INTFLAG IN
                <foreach item="x_intFlag" index="index" collection="intFlags" 
                     open="(" separator="," close=")">
                  #{x_intFlag}
                </foreach>
			</if>
      
	        
			<if test="sysId != null and sysId != '' ">
				and E.SYS_ID = #{sysId}
            </if>

			<if test="sysIdLike != null and sysIdLike != '' ">
				and E.SYS_ID like #{sysIdLike}
            </if>

			<if test="sysIds != null and sysIds.size() &gt; 0">
			    and E.SYS_ID IN
                <foreach item="x_sysId" index="index" collection="sysIds" 
                     open="(" separator="," close=")">
                  #{x_sysId}
                </foreach>
			</if>
	        
			<if test="projName != null and projName != '' ">
				and E.PROJNAME = #{projName}
            </if>

			<if test="projNameLike != null and projNameLike != '' ">
				and E.PROJNAME like #{projNameLike}
            </if>

			<if test="projNames != null and projNames.size() &gt; 0">
			    and E.PROJNAME IN
                <foreach item="x_projName" index="index" collection="projNames" 
                     open="(" separator="," close=")">
                  #{x_projName}
                </foreach>
			</if>
	        
			<if test="num != null and num != '' ">
				and E.NUM = #{num}
            </if>

			<if test="numLike != null and numLike != '' ">
				and E.NUM like #{numLike}
            </if>

			<if test="nums != null and nums.size() &gt; 0">
			    and E.NUM IN
                <foreach item="x_num" index="index" collection="nums" 
                     open="(" separator="," close=")">
                  #{x_num}
                </foreach>
			</if>

			<if test="cTimeGreaterThanOrEqual != null">
				and E.CTIME &gt;= #{cTimeGreaterThanOrEqual}
            </if>

			<if test="cTimeLessThanOrEqual != null">
				and E.CTIME &lt;= #{cTimeLessThanOrEqual}
            </if>

	        
			<if test="content != null and content != '' ">
				and E.CONTENT = #{content}
            </if>

			<if test="contentLike != null and contentLike != '' ">
				and E.CONTENT like #{contentLike}
            </if>

			<if test="contents != null and contents.size() &gt; 0">
			    and E.CONTENT IN
                <foreach item="x_content" index="index" collection="contents" 
                     open="(" separator="," close=")">
                  #{x_content}
                </foreach>
			</if>
	        
			<if test="sDbName != null and sDbName != '' ">
				and E.SDBNAME = #{sDbName}
            </if>

			<if test="sDbNameLike != null and sDbNameLike != '' ">
				and E.SDBNAME like #{sDbNameLike}
            </if>

			<if test="sDbNames != null and sDbNames.size() &gt; 0">
			    and E.SDBNAME IN
                <foreach item="x_sDbName" index="index" collection="sDbNames" 
                     open="(" separator="," close=")">
                  #{x_sDbName}
                </foreach>
			</if>
	        
			<if test="sServerName != null and sServerName != '' ">
				and E.SSERVERNAME = #{sServerName}
            </if>

			<if test="sServerNameLike != null and sServerNameLike != '' ">
				and E.SSERVERNAME like #{sServerNameLike}
            </if>

			<if test="sServerNames != null and sServerNames.size() &gt; 0">
			    and E.SSERVERNAME IN
                <foreach item="x_sServerName" index="index" collection="sServerNames" 
                     open="(" separator="," close=")">
                  #{x_sServerName}
                </foreach>
			</if>
	        
			<if test="sUser != null and sUser != '' ">
				and E.SUSER = #{sUser}
            </if>

			<if test="sUserLike != null and sUserLike != '' ">
				and E.SUSER like #{sUserLike}
            </if>

			<if test="sUsers != null and sUsers.size() &gt; 0">
			    and E.SUSER IN
                <foreach item="x_sUser" index="index" collection="sUsers" 
                     open="(" separator="," close=")">
                  #{x_sUser}
                </foreach>
			</if>
	        
			<if test="spassword != null and spassword != '' ">
				and E.SPASSWORD = #{spassword}
            </if>

			<if test="spasswordLike != null and spasswordLike != '' ">
				and E.SPASSWORD like #{spasswordLike}
            </if>

			<if test="spasswords != null and spasswords.size() &gt; 0">
			    and E.SPASSWORD IN
                <foreach item="x_spassword" index="index" collection="spasswords" 
                     open="(" separator="," close=")">
                  #{x_spassword}
                </foreach>
			</if>

			<if test="listNo != null">
				and E.LISTNO = #{listNo}
            </if>

			<if test="listNoGreaterThanOrEqual != null">
				and E.LISTNO &gt;= #{listNoGreaterThanOrEqual}
            </if>

			<if test="listNoLessThanOrEqual != null">
				and E.LISTNO &lt;= #{listNoLessThanOrEqual}
            </if>

			<if test="listNos != null and listNos.size() &gt; 0">
			    and E.LISTNO IN
                <foreach item="x_listNo" index="index" collection="listNos" 
                     open="(" separator="," close=")">
                  #{x_listNo}
                </foreach>
			</if>
      
	        
			<if test="email != null and email != '' ">
				and E.EMAIL = #{email}
            </if>

			<if test="emailLike != null and emailLike != '' ">
				and E.EMAIL like #{emailLike}
            </if>

			<if test="emails != null and emails.size() &gt; 0">
			    and E.EMAIL IN
                <foreach item="x_email" index="index" collection="emails" 
                     open="(" separator="," close=")">
                  #{x_email}
                </foreach>
			</if>

			<if test="iParentId != null">
				and E.PARENT_ID = #{iParentId}
            </if>

			<if test="iParentIdGreaterThanOrEqual != null">
				and E.PARENT_ID &gt;= #{iParentIdGreaterThanOrEqual}
            </if>

			<if test="iParentIdLessThanOrEqual != null">
				and E.PARENT_ID &lt;= #{iParentIdLessThanOrEqual}
            </if>

			<if test="iParentIds != null and iParentIds.size() &gt; 0">
			    and E.PARENT_ID IN
                <foreach item="x_iParentId" index="index" collection="iParentIds" 
                     open="(" separator="," close=")">
                  #{x_iParentId}
                </foreach>
			</if>
      

			<if test="nodeIco != null">
				and E.NODEICO = #{nodeIco}
            </if>

			<if test="nodeIcoGreaterThanOrEqual != null">
				and E.NODEICO &gt;= #{nodeIcoGreaterThanOrEqual}
            </if>

			<if test="nodeIcoLessThanOrEqual != null">
				and E.NODEICO &lt;= #{nodeIcoLessThanOrEqual}
            </if>

			<if test="nodeIcos != null and nodeIcos.size() &gt; 0">
			    and E.NODEICO IN
                <foreach item="x_nodeIco" index="index" collection="nodeIcos" 
                     open="(" separator="," close=")">
                  #{x_nodeIco}
                </foreach>
			</if>
      

			<if test="intLine != null">
				and E.INTLINE = #{intLine}
            </if>

			<if test="intLineGreaterThanOrEqual != null">
				and E.INTLINE &gt;= #{intLineGreaterThanOrEqual}
            </if>

			<if test="intLineLessThanOrEqual != null">
				and E.INTLINE &lt;= #{intLineLessThanOrEqual}
            </if>

			<if test="intLines != null and intLines.size() &gt; 0">
			    and E.INTLINE IN
                <foreach item="x_intLine" index="index" collection="intLines" 
                     open="(" separator="," close=")">
                  #{x_intLine}
                </foreach>
			</if>
      

			<if test="domainIndex != null">
				and E.DOMAIN_INDEX = #{domainIndex}
            </if>

			<if test="domainIndexGreaterThanOrEqual != null">
				and E.DOMAIN_INDEX &gt;= #{domainIndexGreaterThanOrEqual}
            </if>

			<if test="domainIndexLessThanOrEqual != null">
				and E.DOMAIN_INDEX &lt;= #{domainIndexLessThanOrEqual}
            </if>

			<if test="domainIndexs != null and domainIndexs.size() &gt; 0">
			    and E.DOMAIN_INDEX IN
                <foreach item="x_domainIndex" index="index" collection="domainIndexs" 
                     open="(" separator="," close=")">
                  #{x_domainIndex}
                </foreach>
			</if>
      

			<if test="inLocal != null">
				and E.INTLOCAL = #{inLocal}
            </if>

			<if test="inLocalGreaterThanOrEqual != null">
				and E.INTLOCAL &gt;= #{inLocalGreaterThanOrEqual}
            </if>

			<if test="inLocalLessThanOrEqual != null">
				and E.INTLOCAL &lt;= #{inLocalLessThanOrEqual}
            </if>

			<if test="inLocals != null and inLocals.size() &gt; 0">
			    and E.INTLOCAL IN
                <foreach item="x_inLocal" index="index" collection="inLocals" 
                     open="(" separator="," close=")">
                  #{x_inLocal}
                </foreach>
			</if>
      
	        
			<if test="emailPsw != null and emailPsw != '' ">
				and E.EMAIL_PSW = #{emailPsw}
            </if>

			<if test="emailPswLike != null and emailPswLike != '' ">
				and E.EMAIL_PSW like #{emailPswLike}
            </if>

			<if test="emailPsws != null and emailPsws.size() &gt; 0">
			    and E.EMAIL_PSW IN
                <foreach item="x_emailPsw" index="index" collection="emailPsws" 
                     open="(" separator="," close=")">
                  #{x_emailPsw}
                </foreach>
			</if>

			<if test="intConnected != null">
				and E.INTCONNECTED = #{intConnected}
            </if>

			<if test="intConnectedGreaterThanOrEqual != null">
				and E.INTCONNECTED &gt;= #{intConnectedGreaterThanOrEqual}
            </if>

			<if test="intConnectedLessThanOrEqual != null">
				and E.INTCONNECTED &lt;= #{intConnectedLessThanOrEqual}
            </if>

			<if test="intConnecteds != null and intConnecteds.size() &gt; 0">
			    and E.INTCONNECTED IN
                <foreach item="x_intConnected" index="index" collection="intConnecteds" 
                     open="(" separator="," close=")">
                  #{x_intConnected}
                </foreach>
			</if>
      
	        
			<if test="emailsStr != null and emailsStr != '' ">
				and E.EMAIL_S = #{emailsStr}
            </if>

			<if test="emailsStrLike != null and emailsStrLike != '' ">
				and E.EMAIL_S like #{emailsStrLike}
            </if>

			<if test="emailsStrs != null and emailsStrs.size() &gt; 0">
			    and E.EMAIL_S IN
                <foreach item="x_emailsStr" index="index" collection="emailsStrs" 
                     open="(" separator="," close=")">
                  #{x_emailsStr}
                </foreach>
			</if>

			<if test="intOrgLevel != null">
				and E.INTORGLEVEL = #{intOrgLevel}
            </if>

			<if test="intOrgLevelGreaterThanOrEqual != null">
				and E.INTORGLEVEL &gt;= #{intOrgLevelGreaterThanOrEqual}
            </if>

			<if test="intOrgLevelLessThanOrEqual != null">
				and E.INTORGLEVEL &lt;= #{intOrgLevelLessThanOrEqual}
            </if>

			<if test="intOrgLevels != null and intOrgLevels.size() &gt; 0">
			    and E.INTORGLEVEL IN
                <foreach item="x_intOrgLevel" index="index" collection="intOrgLevels" 
                     open="(" separator="," close=")">
                  #{x_intOrgLevel}
                </foreach>
			</if>
      

			<if test="intSendType != null">
				and E.INTSENDTYPE = #{intSendType}
            </if>

			<if test="intSendTypeGreaterThanOrEqual != null">
				and E.INTSENDTYPE &gt;= #{intSendTypeGreaterThanOrEqual}
            </if>

			<if test="intSendTypeLessThanOrEqual != null">
				and E.INTSENDTYPE &lt;= #{intSendTypeLessThanOrEqual}
            </if>

			<if test="intSendTypes != null and intSendTypes.size() &gt; 0">
			    and E.INTSENDTYPE IN
                <foreach item="x_intSendType" index="index" collection="intSendTypes" 
                     open="(" separator="," close=")">
                  #{x_intSendType}
                </foreach>
			</if>
      
	        
			<if test="emailBaskUp != null and emailBaskUp != '' ">
				and E.EMAIL_BACKUP = #{emailBaskUp}
            </if>

			<if test="emailBaskUpLike != null and emailBaskUpLike != '' ">
				and E.EMAIL_BACKUP like #{emailBaskUpLike}
            </if>

			<if test="emailBaskUps != null and emailBaskUps.size() &gt; 0">
			    and E.EMAIL_BACKUP IN
                <foreach item="x_emailBaskUp" index="index" collection="emailBaskUps" 
                     open="(" separator="," close=")">
                  #{x_emailBaskUp}
                </foreach>
			</if>
	        
			<if test="emailImplement != null and emailImplement != '' ">
				and E.EMAIL_IMPLEMENT = #{emailImplement}
            </if>

			<if test="emailImplementLike != null and emailImplementLike != '' ">
				and E.EMAIL_IMPLEMENT like #{emailImplementLike}
            </if>

			<if test="emailImplements != null and emailImplements.size() &gt; 0">
			    and E.EMAIL_IMPLEMENT IN
                <foreach item="x_emailImplement" index="index" collection="emailImplements" 
                     open="(" separator="," close=")">
                  #{x_emailImplement}
                </foreach>
			</if>

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE &gt;= #{createDateGreaterThanOrEqual}
            </if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE &lt;= #{createDateLessThanOrEqual}
            </if>


			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE &gt;= #{updateDateGreaterThanOrEqual}
            </if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE &lt;= #{updateDateLessThanOrEqual}
            </if>

	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>
	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>
	        
			<if test="smsUrl != null and smsUrl != '' ">
				and E.SMS_URL = #{smsUrl}
            </if>

			<if test="smsUrlLike != null and smsUrlLike != '' ">
				and E.SMS_URL like #{smsUrlLike}
            </if>

			<if test="smsUrls != null and smsUrls.size() &gt; 0">
			    and E.SMS_URL IN
                <foreach item="x_smsUrl" index="index" collection="smsUrls" 
                     open="(" separator="," close=")">
                  #{x_smsUrl}
                </foreach>
			</if>
	        
			<if test="toDbName != null and toDbName != '' ">
				and E.TODBNAME = #{toDbName}
            </if>

			<if test="toDbNameLike != null and toDbNameLike != '' ">
				and E.TODBNAME like #{toDbNameLike}
            </if>

			<if test="toDbNames != null and toDbNames.size() &gt; 0">
			    and E.TODBNAME IN
                <foreach item="x_toDbName" index="index" collection="toDbNames" 
                     open="(" separator="," close=")">
                  #{x_toDbName}
                </foreach>
			</if>
	        
			<if test="toServerName != null and toServerName != '' ">
				and E.TOSERVERNAME = #{toServerName}
            </if>

			<if test="toServerNameLike != null and toServerNameLike != '' ">
				and E.TOSERVERNAME like #{toServerNameLike}
            </if>

			<if test="toServerNames != null and toServerNames.size() &gt; 0">
			    and E.TOSERVERNAME IN
                <foreach item="x_toServerName" index="index" collection="toServerNames" 
                     open="(" separator="," close=")">
                  #{x_toServerName}
                </foreach>
			</if>
	        
			<if test="toUser != null and toUser != '' ">
				and E.TOUSER = #{toUser}
            </if>

			<if test="toUserLike != null and toUserLike != '' ">
				and E.TOUSER like #{toUserLike}
            </if>

			<if test="toUsers != null and toUsers.size() &gt; 0">
			    and E.TOUSER IN
                <foreach item="x_toUser" index="index" collection="toUsers" 
                     open="(" separator="," close=")">
                  #{x_toUser}
                </foreach>
			</if>
	        
			<if test="toPassword != null and toPassword != '' ">
				and E.TOPASSWORD = #{toPassword}
            </if>

			<if test="toPasswordLike != null and toPasswordLike != '' ">
				and E.TOPASSWORD like #{toPasswordLike}
            </if>

			<if test="toPasswords != null and toPasswords.size() &gt; 0">
			    and E.TOPASSWORD IN
                <foreach item="x_toPassword" index="index" collection="toPasswords" 
                     open="(" separator="," close=")">
                  #{x_toPassword}
                </foreach>
			</if>
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>