<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.form.core.mapper.FormEventTemplateTreeMapper">

 	<resultMap id="formEventTemplateTreeResultMap"	type="com.glaf.form.core.domain.FormEventTemplateTree">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="indexId" column="INDEXID_" jdbcType="INTEGER"/>
        <result property="parentId" column="PARENTID_" jdbcType="INTEGER"/>
        <result property="treeId" column="TREEID_" jdbcType="VARCHAR"/>
        <result property="type" column="TYPE_" jdbcType="INTEGER"/>
        <result property="name" column="NAME_" jdbcType="VARCHAR"/>
        <result property="deleteFlag" column="DELETEFLAG_" jdbcType="INTEGER"/>
        <result property="createDate" column="CREATEDATE_" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="CREATEBY_" jdbcType="VARCHAR"/>
        <result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR"/>
        <result property="updateDate" column="UPDATEDATE_" jdbcType="TIMESTAMP"/>
	</resultMap>

 
	<insert id="insertFormEventTemplateTree" parameterType="com.glaf.form.core.domain.FormEventTemplateTree">
		insert into FORM_EVENT_TEMPLATE_TREE 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
			<if test="indexId != null">
				,INDEXID_ 
			</if>
			<if test="parentId != null">
				,PARENTID_ 
			</if>
			<if test="treeId != null">
				,TREEID_ 
			</if>
			<if test="type != null">
				,TYPE_ 
			</if>
			<if test="name != null">
				,NAME_ 
			</if>
			<if test="deleteFlag != null">
				,DELETEFLAG_ 
			</if>
			<if test="createDate != null">
				,CREATEDATE_ 
			</if>
			<if test="createBy != null">
				,CREATEBY_ 
			</if>
			<if test="updateBy != null">
				,UPDATEBY_ 
			</if>
			<if test="updateDate != null">
				,UPDATEDATE_ 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="indexId != null">
				,#{indexId, jdbcType=INTEGER}
			</if>
			<if test="parentId != null">
				,#{parentId, jdbcType=INTEGER}
			</if>
			<if test="treeId != null">
				,#{treeId, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=INTEGER}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="deleteFlag != null">
				,#{deleteFlag, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateFormEventTemplateTree" parameterType="com.glaf.form.core.domain.FormEventTemplateTree">
		update FORM_EVENT_TEMPLATE_TREE
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="indexId != null">
				INDEXID_ = #{indexId, jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				PARENTID_ = #{parentId, jdbcType=INTEGER},
			</if>
			<if test="treeId != null">
				TREEID_ = #{treeId, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=INTEGER},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				DELETEFLAG_ = #{deleteFlag, jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				CREATEDATE_ = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE_ = #{updateDate, jdbcType=TIMESTAMP},
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteFormEventTemplateTreeById" parameterType="string"> 
        delete from FORM_EVENT_TEMPLATE_TREE
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteFormEventTemplateTrees" parameterType="com.glaf.form.core.query.FormEventTemplateTreeQuery">
		delete from FORM_EVENT_TEMPLATE_TREE
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getFormEventTemplateTreeById" parameterType="string" resultMap="formEventTemplateTreeResultMap">
		select * from FORM_EVENT_TEMPLATE_TREE where ID_ = #{id}
	</select>


	<select id="getFormEventTemplateTrees" 
	    parameterType="com.glaf.form.core.query.FormEventTemplateTreeQuery"
		resultMap="formEventTemplateTreeResultMap">
		select distinct E.*
		<include refid="selectFormEventTemplateTreesSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getFormEventTemplateTreeCount" 
	    parameterType="com.glaf.form.core.query.FormEventTemplateTreeQuery"
		resultType="int">
		select count(*)
		<include refid="selectFormEventTemplateTreesSql" />
	</select>


	<sql id="selectFormEventTemplateTreesSql">

		from FORM_EVENT_TEMPLATE_TREE E
		
		<where>
		       1 = 1  
			 

			<if test="indexId != null">
				and E.INDEXID_ = #{indexId}
            </if>

			<if test="indexIdGreaterThanOrEqual != null">
				and E.INDEXID_ &gt;= #{indexIdGreaterThanOrEqual}
            </if>

			<if test="indexIdLessThanOrEqual != null">
				and E.INDEXID_ &lt;= #{indexIdLessThanOrEqual}
            </if>

			<if test="indexIds != null and indexIds.size() &gt; 0">
			    and E.INDEXID_ IN
                <foreach item="x_indexId" index="index" collection="indexIds" 
                     open="(" separator="," close=")">
                  #{x_indexId}
                </foreach>
			</if>
      

			<if test="parentId != null">
				and E.PARENTID_ = #{parentId}
            </if>

			<if test="parentIdGreaterThanOrEqual != null">
				and E.PARENTID_ &gt;= #{parentIdGreaterThanOrEqual}
            </if>

			<if test="parentIdLessThanOrEqual != null">
				and E.PARENTID_ &lt;= #{parentIdLessThanOrEqual}
            </if>

			<if test="parentIds != null and parentIds.size() &gt; 0">
			    and E.PARENTID_ IN
                <foreach item="x_parentId" index="index" collection="parentIds" 
                     open="(" separator="," close=")">
                  #{x_parentId}
                </foreach>
			</if>
      
	        
			<if test="treeId != null and treeId != '' ">
				and E.TREEID_ = #{treeId}
            </if>

			<if test="treeIdLike != null and treeIdLike != '' ">
				and E.TREEID_ like #{treeIdLike}
            </if>

			<if test="treeIds != null and treeIds.size() &gt; 0">
			    and E.TREEID_ IN
                <foreach item="x_treeId" index="index" collection="treeIds" 
                     open="(" separator="," close=")">
                  #{x_treeId}
                </foreach>
			</if>

			<if test="type != null">
				and E.TYPE_ = #{type}
            </if>

			<if test="typeGreaterThanOrEqual != null">
				and E.TYPE_ &gt;= #{typeGreaterThanOrEqual}
            </if>

			<if test="typeLessThanOrEqual != null">
				and E.TYPE_ &lt;= #{typeLessThanOrEqual}
            </if>

			<if test="types != null and types.size() &gt; 0">
			    and E.TYPE_ IN
                <foreach item="x_type" index="index" collection="types" 
                     open="(" separator="," close=")">
                  #{x_type}
                </foreach>
			</if>
      
	        
			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
            </if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
            </if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME_ IN
                <foreach item="x_name" index="index" collection="names" 
                     open="(" separator="," close=")">
                  #{x_name}
                </foreach>
			</if>

			<if test="deleteFlag != null">
				and E.DELETEFLAG_ = #{deleteFlag}
            </if>

			<if test="deleteFlagGreaterThanOrEqual != null">
				and E.DELETEFLAG_ &gt;= #{deleteFlagGreaterThanOrEqual}
            </if>

			<if test="deleteFlagLessThanOrEqual != null">
				and E.DELETEFLAG_ &lt;= #{deleteFlagLessThanOrEqual}
            </if>

			<if test="deleteFlags != null and deleteFlags.size() &gt; 0">
			    and E.DELETEFLAG_ IN
                <foreach item="x_deleteFlag" index="index" collection="deleteFlags" 
                     open="(" separator="," close=")">
                  #{x_deleteFlag}
                </foreach>
			</if>
      

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE_ &gt;= #{createDateGreaterThanOrEqual}
            </if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE_ &lt;= #{createDateLessThanOrEqual}
            </if>

	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY_ like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY_ IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>
	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY_ like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY_ IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>

			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE_ &gt;= #{updateDateGreaterThanOrEqual}
            </if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE_ &lt;= #{updateDateLessThanOrEqual}
            </if>

            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>