<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.form.core.mapper.FormFileMapper">
	
	<resultMap id="formFileMap" type="com.glaf.form.core.domain.FormFile">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="parent" column="PARENT_" jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="CHAR" />
		<result property="fileName" column="FILENAME_" jdbcType="VARCHAR" />
		<result property="fileSize" column="FILESIZE_" jdbcType="INTEGER" />
		<result property="saveServicePath" column="SAVESERVICEPATH_"
			jdbcType="VARCHAR" />
		<result property="vision" column="VISION_" jdbcType="VARCHAR" />
		<result property="status" column="STATUS_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP" />
		<result property="business" column="BUSINESS" jdbcType="VARCHAR" />
	</resultMap>
	

	<resultMap id="formFileBlobMap" type="com.glaf.form.core.domain.FormFile">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="parent" column="PARENT_" jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="CHAR" />
		<result property="fileName" column="FILENAME_" jdbcType="VARCHAR" />
		<result property="fileSize" column="FILESIZE_" jdbcType="INTEGER" />
		<result property="fileContent" column="FILECONTENT_" jdbcType="BLOB" />
		<result property="saveServicePath" column="SAVESERVICEPATH_"
			jdbcType="VARCHAR" />
		<result property="vision" column="VISION_" jdbcType="VARCHAR" />
		<result property="status" column="STATUS_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP" />
		<result property="business" column="BUSINESS" jdbcType="VARCHAR" />
	</resultMap>

 
	<insert id="insertFormFile" parameterType="com.glaf.form.core.domain.FormFile">
		insert into FORM_FILE_ 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
			<if test="parent != null">
				,PARENT_ 
			</if>
			<if test="type != null">
				,TYPE_ 
			</if>
			<if test="fieldType != null">
				,FILETYPE_ 
			</if>
			<if test="fileName != null">
				,FILENAME_ 
			</if>
			<if test="fileSize != null">
				,FILESIZE_ 
			</if>
			<if test="fileContent != null">
				,FILECONTENT_ 
			</if>
			<if test="saveServicePath != null">
				,SAVESERVICEPATH_ 
			</if>
			<if test="vision != null">
				,VISION_ 
			</if>
			<if test="status != null">
				,STATUS_ 
			</if>
			<if test="error != null">
				,ERROR 
			</if>
			<if test="business != null">
				,BUSINESS 
			</if>
			<if test="createBy != null">
				,CREATEBY 
			</if>
			<if test="createDate != null">
				,CREATEDATE 
			</if>
			<if test="updateBy != null">
				,UPDATEBY 
			</if>
			<if test="updateDate != null">
				,UPDATEDATE 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="parent != null">
				,#{parent, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="fieldType != null">
				,#{fieldType, jdbcType=VARCHAR}
			</if>
			<if test="fileName != null">
				,#{fileName, jdbcType=VARCHAR}
			</if>
			<if test="fileSize != null">
				,#{fileSize, jdbcType=INTEGER}
			</if>
			<if test="fileContent != null">
				,#{fileContent, jdbcType=BLOB}
			</if>
			<if test="saveServicePath != null">
				,#{saveServicePath, jdbcType=VARCHAR}
			</if>
			<if test="vision != null">
				,#{vision, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="error != null">
				,#{error, jdbcType=VARCHAR}
			</if>
			<if test="business != null">
				,#{business, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateFormFile" parameterType="com.glaf.form.core.domain.FormFile">
		update FORM_FILE_
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="parent != null">
				PARENT_ = #{parent, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="fieldType != null">
				FILETYPE_ = #{fieldType, jdbcType=VARCHAR},
			</if>
			<if test="fileName != null">
				FILENAME_ = #{fileName, jdbcType=VARCHAR},
			</if>
			<if test="fileSize != null">
				FILESIZE_ = #{fileSize, jdbcType=INTEGER},
			</if>
			<if test="fileContent != null">
				FILECONTENT_ = #{fileContent, jdbcType=BLOB},
			</if>
			<if test="saveServicePath != null">
				SAVESERVICEPATH_ = #{saveServicePath, jdbcType=VARCHAR},
			</if>
			<if test="vision != null">
				VISION_ = #{vision, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS_ = #{status, jdbcType=INTEGER},
			</if>
			<if test="error != null">
				ERROR = #{error, jdbcType=VARCHAR},
			</if>
			<if test="business != null">
				BUSINESS = #{business, jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				CREATEBY = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CREATEDATE = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteFormFileById" parameterType="string"> 
        delete from FORM_FILE_
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteFormFiles" parameterType="com.glaf.form.core.query.FormFileQuery">
		delete from FORM_FILE_
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>

	<delete id="deleteFormFileByParent" parameterType="string">
		DELETE FROM FORM_FILE_ WHERE PARENT_ = #{parent}
	</delete>

	<select id="getFormFileById" parameterType="string" resultMap="formFileBlobMap">
		select * from FORM_FILE_ where ID_ = #{id}
	</select>


	<select id="getFormFiles" 
	    parameterType="com.glaf.form.core.query.FormFileQuery"
		resultMap="formFileMap">
		select E.ID_, E.PARENT_, E.TYPE_, E.FILENAME_, E.FILESIZE_, E.SAVESERVICEPATH_, E.VISION_, E.STATUS_, E.CREATEBY,
				 E.CREATEDATE, E.UPDATEBY, E.UPDATEDATE,E.BUSINESS 
		<include refid="selectFormFilesSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getFormFileCount" 
	    parameterType="com.glaf.form.core.query.FormFileQuery"
		resultType="int">
		select count(*)
		<include refid="selectFormFilesSql" />
	</select>


	<sql id="selectFormFilesSql">

		from FORM_FILE_ E
		
		<where>
		       1 = 1  
			 
	        
			<if test="parent != null and parent != '' ">
				and E.PARENT_ = #{parent}
            </if>

			<if test="parentLike != null and parentLike != '' ">
				and E.PARENT_ like #{parentLike}
            </if>

			<if test="parents != null and parents.size() &gt; 0">
			    and E.PARENT_ IN
                <foreach item="x_parent" index="index" collection="parents" 
                     open="(" separator="," close=")">
                  #{x_parent}
                </foreach>
			</if>
	        
			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
            </if>

			<if test="typeLike != null and typeLike != '' ">
				and E.TYPE_ like #{typeLike}
            </if>

			<if test="types != null and types.size() &gt; 0">
			    and E.TYPE_ IN
                <foreach item="x_type" index="index" collection="types" 
                     open="(" separator="," close=")">
                  #{x_type}
                </foreach>
			</if>
	        
			<if test="fieldType != null and fieldType != '' ">
				and E.FILETYPE_ = #{fieldType}
            </if>

			<if test="fieldTypeLike != null and fieldTypeLike != '' ">
				and E.FILETYPE_ like #{fieldTypeLike}
            </if>

			<if test="fieldTypes != null and fieldTypes.size() &gt; 0">
			    and E.FILETYPE_ IN
                <foreach item="x_fieldType" index="index" collection="fieldTypes" 
                     open="(" separator="," close=")">
                  #{x_fieldType}
                </foreach>
			</if>
	        
			<if test="fileName != null and fileName != '' ">
				and E.FILENAME_ = #{fileName}
            </if>

			<if test="fileNameLike != null and fileNameLike != '' ">
				and E.FILENAME_ like #{fileNameLike}
            </if>

			<if test="fileNames != null and fileNames.size() &gt; 0">
			    and E.FILENAME_ IN
                <foreach item="x_fileName" index="index" collection="fileNames" 
                     open="(" separator="," close=")">
                  #{x_fileName}
                </foreach>
			</if>

			<if test="fileSize != null">
				and E.FILESIZE_ = #{fileSize}
            </if>

			<if test="fileSizeGreaterThanOrEqual != null">
				and E.FILESIZE_ &gt;= #{fileSizeGreaterThanOrEqual}
            </if>

			<if test="fileSizeLessThanOrEqual != null">
				and E.FILESIZE_ &lt;= #{fileSizeLessThanOrEqual}
            </if>

			<if test="fileSizes != null and fileSizes.size() &gt; 0">
			    and E.FILESIZE_ IN
                <foreach item="x_fileSize" index="index" collection="fileSizes" 
                     open="(" separator="," close=")">
                  #{x_fileSize}
                </foreach>
			</if>
      
	        
			<if test="fileContent != null and fileContent != '' ">
				and E.FILECONTENT_ = #{fileContent}
            </if>

			<if test="fileContentLike != null and fileContentLike != '' ">
				and E.FILECONTENT_ like #{fileContentLike}
            </if>

			<if test="fileContents != null and fileContents.size() &gt; 0">
			    and E.FILECONTENT_ IN
                <foreach item="x_fileContent" index="index" collection="fileContents" 
                     open="(" separator="," close=")">
                  #{x_fileContent}
                </foreach>
			</if>
	        
			<if test="saveServicePath != null and saveServicePath != '' ">
				and E.SAVESERVICEPATH_ = #{saveServicePath}
            </if>

			<if test="saveServicePathLike != null and saveServicePathLike != '' ">
				and E.SAVESERVICEPATH_ like #{saveServicePathLike}
            </if>

			<if test="saveServicePaths != null and saveServicePaths.size() &gt; 0">
			    and E.SAVESERVICEPATH_ IN
                <foreach item="x_saveServicePath" index="index" collection="saveServicePaths" 
                     open="(" separator="," close=")">
                  #{x_saveServicePath}
                </foreach>
			</if>

			<if test="vision != null">
				and E.VISION_ = #{vision}
            </if>

			<if test="visionGreaterThanOrEqual != null">
				and E.VISION_ &gt;= #{visionGreaterThanOrEqual}
            </if>

			<if test="visionLessThanOrEqual != null">
				and E.VISION_ &lt;= #{visionLessThanOrEqual}
            </if>

			<if test="visions != null and visions.size() &gt; 0">
			    and E.VISION_ IN
                <foreach item="x_vision" index="index" collection="visions" 
                     open="(" separator="," close=")">
                  #{x_vision}
                </foreach>
			</if>
      

			<if test="status != null">
				and E.STATUS_ = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS_ &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS_ &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
			    and E.STATUS_ IN
                <foreach item="x_status" index="index" collection="statuss" 
                     open="(" separator="," close=")">
                  #{x_status}
                </foreach>
			</if>
      
	        
			<if test="error != null and error != '' ">
				and E.ERROR = #{error}
            </if>

			<if test="errorLike != null and errorLike != '' ">
				and E.ERROR like #{errorLike}
            </if>

			<if test="errors != null and errors.size() &gt; 0">
			    and E.ERROR IN
                <foreach item="x_error" index="index" collection="errors" 
                     open="(" separator="," close=")">
                  #{x_error}
                </foreach>
			</if>
	        
			<if test="business != null and business != '' ">
				and E.BUSINESS = #{business}
            </if>

			<if test="businessLike != null and businessLike != '' ">
				and E.BUSINESS like #{businessLike}
            </if>

			<if test="businesss != null and businesss.size() &gt; 0">
			    and E.BUSINESS IN
                <foreach item="x_business" index="index" collection="businesss" 
                     open="(" separator="," close=")">
                  #{x_business}
                </foreach>
			</if>
	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE &gt;= #{createDateGreaterThanOrEqual}
            </if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE &lt;= #{createDateLessThanOrEqual}
            </if>

	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>

			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE &gt;= #{updateDateGreaterThanOrEqual}
            </if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE &lt;= #{updateDateLessThanOrEqual}
            </if>

            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>