<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.form.core.mapper.UserSqliteMapper">

 	<resultMap id="userSqliteResultMap"	type="com.glaf.form.core.domain.UserSqlite">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="userId" column="USERID_" jdbcType="VARCHAR"/>
        <result property="name" column="NAME_" jdbcType="VARCHAR"/>
        <result property="desc" column="DESC_" jdbcType="VARCHAR"/>
        <result property="sqliteCode" column="SQLITECODE_" jdbcType="VARCHAR"/>
        <result property="ruleJson" column="RULEJSON_" jdbcType="VARCHAR"/>
        <result property="createBy" column="CREATEBY_" jdbcType="VARCHAR"/>
        <result property="createDate" column="CREATEDATE_" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR"/>
        <result property="updateDate" column="UPDATEDATE_" jdbcType="TIMESTAMP"/>
        <result property="fileDate" column="FILEDATE_" jdbcType="TIMESTAMP"/>
        <result property="downloadNum" column="DOWNLOADNUM_" jdbcType="INTEGER"/>
        <result property="status" column="STATUS_" jdbcType="INTEGER"/>
        <result property="errorMessage" column="ERROR_MESSAGE_" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertUserSqlite" parameterType="com.glaf.form.core.domain.UserSqlite">
		insert into USER_SQLITE_ 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
			<if test="userId != null">
				,USERID_ 
			</if>
			<if test="name != null">
				,NAME_ 
			</if>
			<if test="desc != null">
				,DESC_ 
			</if>
			<if test="sqliteCode != null">
				,SQLITECODE_ 
			</if>
			<if test="ruleJson != null">
				,RULEJSON_ 
			</if>
			<if test="createBy != null">
				,CREATEBY_ 
			</if>
			<if test="createDate != null">
				,CREATEDATE_ 
			</if>
			<if test="updateBy != null">
				,UPDATEBY_ 
			</if>
			<if test="updateDate != null">
				,UPDATEDATE_ 
			</if>
			<if test="fileDate != null">
				,FILEDATE_ 
			</if>
			<if test="downloadNum != null">
				,DOWNLOADNUM_ 
			</if>
			<if test="status != null">
				,STATUS_ 
			</if>
			<if test="errorMessage != null">
				,ERROR_MESSAGE_ 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="userId != null">
				,#{userId, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="sqliteCode != null">
				,#{sqliteCode, jdbcType=VARCHAR}
			</if>
			<if test="ruleJson != null">
				,#{ruleJson, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="fileDate != null">
				,#{fileDate, jdbcType=TIMESTAMP}
			</if>
			<if test="downloadNum != null">
				,#{downloadNum, jdbcType=INTEGER}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="errorMessage != null">
				,#{errorMessage, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateUserSqlite" parameterType="com.glaf.form.core.domain.UserSqlite">
		update USER_SQLITE_
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="userId != null">
				USERID_ = #{userId, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				DESC_ = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="sqliteCode != null">
				SQLITECODE_ = #{sqliteCode, jdbcType=VARCHAR},
			</if>
			<if test="ruleJson != null">
				RULEJSON_ = #{ruleJson, jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CREATEDATE_ = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE_ = #{updateDate, jdbcType=TIMESTAMP},
			</if>
			<if test="fileDate != null">
				FILEDATE_ = #{fileDate, jdbcType=TIMESTAMP},
			</if>
			<if test="downloadNum != null">
				DOWNLOADNUM_ = #{downloadNum, jdbcType=INTEGER},
			</if>
			<if test="status != null">
				STATUS_ = #{status, jdbcType=INTEGER},
			</if>
			<if test="errorMessage != null">
				ERROR_MESSAGE_ = #{errorMessage, jdbcType=VARCHAR},
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteUserSqliteById" parameterType="string"> 
        delete from USER_SQLITE_
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteUserSqlites" parameterType="com.glaf.form.core.query.UserSqliteQuery">
		delete from USER_SQLITE_
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getUserSqliteById" parameterType="string" resultMap="userSqliteResultMap">
		select * from USER_SQLITE_ where ID_ = #{id}
	</select>


	<select id="getUserSqlites" 
	    parameterType="com.glaf.form.core.query.UserSqliteQuery"
		resultMap="userSqliteResultMap">
		select  E.*
		<include refid="selectUserSqlitesSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getUserSqliteCount" 
	    parameterType="com.glaf.form.core.query.UserSqliteQuery"
		resultType="int">
		select count(*)
		<include refid="selectUserSqlitesSql" />
	</select>


	<sql id="selectUserSqlitesSql">

		from USER_SQLITE_ E
		
		<where>
		       1 = 1  
			 
	        
			<if test="userId != null and userId != '' ">
				and E.USERID_ = #{userId}
            </if>

			<if test="userIdLike != null and userIdLike != '' ">
				and E.USERID_ like #{userIdLike}
            </if>

			<if test="userIds != null and userIds.size() &gt; 0">
			    and E.USERID_ IN
                <foreach item="x_userId" index="index" collection="userIds" 
                     open="(" separator="," close=")">
                  #{x_userId}
                </foreach>
			</if>
	        
			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
            </if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
            </if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME_ IN
                <foreach item="x_name" index="index" collection="names" 
                     open="(" separator="," close=")">
                  #{x_name}
                </foreach>
			</if>
	        
			<if test="desc != null and desc != '' ">
				and E.DESC_ = #{desc}
            </if>

			<if test="descLike != null and descLike != '' ">
				and E.DESC_ like #{descLike}
            </if>

			<if test="descs != null and descs.size() &gt; 0">
			    and E.DESC_ IN
                <foreach item="x_desc" index="index" collection="descs" 
                     open="(" separator="," close=")">
                  #{x_desc}
                </foreach>
			</if>
	        
			<if test="sqliteCode != null and sqliteCode != '' ">
				and E.SQLITECODE_ = #{sqliteCode}
            </if>

			<if test="sqliteCodeLike != null and sqliteCodeLike != '' ">
				and E.SQLITECODE_ like #{sqliteCodeLike}
            </if>

			<if test="sqliteCodes != null and sqliteCodes.size() &gt; 0">
			    and E.SQLITECODE_ IN
                <foreach item="x_sqliteCode" index="index" collection="sqliteCodes" 
                     open="(" separator="," close=")">
                  #{x_sqliteCode}
                </foreach>
			</if>
	        
			<if test="ruleJson != null and ruleJson != '' ">
				and E.RULEJSON_ = #{ruleJson}
            </if>

			<if test="ruleJsonLike != null and ruleJsonLike != '' ">
				and E.RULEJSON_ like #{ruleJsonLike}
            </if>

			<if test="ruleJsons != null and ruleJsons.size() &gt; 0">
			    and E.RULEJSON_ IN
                <foreach item="x_ruleJson" index="index" collection="ruleJsons" 
                     open="(" separator="," close=")">
                  #{x_ruleJson}
                </foreach>
			</if>
	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY_ like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY_ IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE_ &gt;= #{createDateGreaterThanOrEqual}
            </if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE_ &lt;= #{createDateLessThanOrEqual}
            </if>

	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY_ like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY_ IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>

			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE_ &gt;= #{updateDateGreaterThanOrEqual}
            </if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE_ &lt;= #{updateDateLessThanOrEqual}
            </if>


			<if test="fileDateGreaterThanOrEqual != null">
				and E.FILEDATE_ &gt;= #{fileDateGreaterThanOrEqual}
            </if>

			<if test="fileDateLessThanOrEqual != null">
				and E.FILEDATE_ &lt;= #{fileDateLessThanOrEqual}
            </if>


			<if test="downloadNum != null">
				and E.DOWNLOADNUM_ = #{downloadNum}
            </if>

			<if test="downloadNumGreaterThanOrEqual != null">
				and E.DOWNLOADNUM_ &gt;= #{downloadNumGreaterThanOrEqual}
            </if>

			<if test="downloadNumLessThanOrEqual != null">
				and E.DOWNLOADNUM_ &lt;= #{downloadNumLessThanOrEqual}
            </if>

			<if test="downloadNums != null and downloadNums.size() &gt; 0">
			    and E.DOWNLOADNUM_ IN
                <foreach item="x_downloadNum" index="index" collection="downloadNums" 
                     open="(" separator="," close=")">
                  #{x_downloadNum}
                </foreach>
			</if>
      

			<if test="status != null">
				and E.STATUS_ = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS_ &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS_ &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
			    and E.STATUS_ IN
                <foreach item="x_status" index="index" collection="statuss" 
                     open="(" separator="," close=")">
                  #{x_status}
                </foreach>
			</if>
      
	        
			<if test="errorMessage != null and errorMessage != '' ">
				and E.ERROR_MESSAGE_ = #{errorMessage}
            </if>

			<if test="errorMessageLike != null and errorMessageLike != '' ">
				and E.ERROR_MESSAGE_ like #{errorMessageLike}
            </if>

			<if test="errorMessages != null and errorMessages.size() &gt; 0">
			    and E.ERROR_MESSAGE_ IN
                <foreach item="x_errorMessage" index="index" collection="errorMessages" 
                     open="(" separator="," close=")">
                  #{x_errorMessage}
                </foreach>
			</if>
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>