<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.oa.doc.mapper.SendDocApplyMapper">

 	<resultMap id="sendDocApplyResultMap"	type="com.glaf.oa.doc.domain.SendDocApply">
        <id property="id" column="ID" jdbcType="INTEGER" />
        <result property="subject" column="SUBJECT" jdbcType="VARCHAR"/>
        <result property="securityLevel" column="SECURITYLEVEL" jdbcType="INTEGER"/>
        <result property="urgencyLevel" column="URGENCYLEVEL" jdbcType="INTEGER"/>
        <result property="docNo" column="DOCNO" jdbcType="VARCHAR"/>
        <result property="docType" column="DOCTYPE" jdbcType="VARCHAR"/>
        <result property="draftName" column="DRAFTNAME" jdbcType="VARCHAR"/>
        <result property="draftDate" column="DRAFTDATE" jdbcType="TIMESTAMP"/>
        <result property="sendDocDate" column="SENDDOCDATE" jdbcType="TIMESTAMP"/>
        <result property="serialNumber" column="SERIALNUMBER" jdbcType="VARCHAR"/>
        <result property="fromCompany" column="FROMCOMPANY" jdbcType="VARCHAR"/>
        <result property="keywords" column="KEYWORDS" jdbcType="VARCHAR"/>
        <result property="docToCompany" column="DOCTOCOMPANY" jdbcType="VARCHAR"/>
        <result property="docCCCompany" column="DOCCCCOMPANY" jdbcType="VARCHAR"/>
        <result property="checkOpinion" column="CHECKOPINION" jdbcType="VARCHAR"/>
        <result property="countersignOpinion" column="COUNTERSIGNOPINION" jdbcType="VARCHAR"/>
        <result property="signAndIssueOpinion" column="SIGNANDISSUEOPINION" jdbcType="VARCHAR"/>
        <result property="remark" column="REMARK" jdbcType="VARCHAR"/>
        <result property="status" column="STATUS" jdbcType="INTEGER"/>
        <result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="CREATEBY" jdbcType="VARCHAR"/>
        <result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertSendDocApply" parameterType="com.glaf.oa.doc.domain.SendDocApply">
		insert into SENDDOCAPPLY 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="subject != null">
				,SUBJECT 
			</if>
			<if test="securityLevel != null">
				,SECURITYLEVEL 
			</if>
			<if test="urgencyLevel != null">
				,URGENCYLEVEL 
			</if>
			<if test="docNo != null">
				,DOCNO 
			</if>
			<if test="docType != null">
				,DOCTYPE 
			</if>
			<if test="draftName != null">
				,DRAFTNAME 
			</if>
			<if test="draftDate != null">
				,DRAFTDATE 
			</if>
			<if test="sendDocDate != null">
				,SENDDOCDATE 
			</if>
			<if test="serialNumber != null">
				,SERIALNUMBER 
			</if>
			<if test="fromCompany != null">
				,FROMCOMPANY 
			</if>
			<if test="keywords != null">
				,KEYWORDS 
			</if>
			<if test="docToCompany != null">
				,DOCTOCOMPANY 
			</if>
			<if test="docCCCompany != null">
				,DOCCCCOMPANY 
			</if>
			<if test="checkOpinion != null">
				,CHECKOPINION 
			</if>
			<if test="countersignOpinion != null">
				,COUNTERSIGNOPINION 
			</if>
			<if test="signAndIssueOpinion != null">
				,SIGNANDISSUEOPINION 
			</if>
			<if test="remark != null">
				,REMARK 
			</if>
			<if test="status != null">
				,STATUS 
			</if>
			<if test="createDate != null">
				,CREATEDATE 
			</if>
			<if test="updateDate != null">
				,UPDATEDATE 
			</if>
			<if test="createBy != null">
				,CREATEBY 
			</if>
			<if test="updateBy != null">
				,UPDATEBY 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=INTEGER}
	     
			<if test="subject != null">
				,#{subject, jdbcType=VARCHAR}
			</if>
			<if test="securityLevel != null">
				,#{securityLevel, jdbcType=INTEGER}
			</if>
			<if test="urgencyLevel != null">
				,#{urgencyLevel, jdbcType=INTEGER}
			</if>
			<if test="docNo != null">
				,#{docNo, jdbcType=VARCHAR}
			</if>
			<if test="docType != null">
				,#{docType, jdbcType=VARCHAR}
			</if>
			<if test="draftName != null">
				,#{draftName, jdbcType=VARCHAR}
			</if>
			<if test="draftDate != null">
				,#{draftDate, jdbcType=TIMESTAMP}
			</if>
			<if test="sendDocDate != null">
				,#{sendDocDate, jdbcType=TIMESTAMP}
			</if>
			<if test="serialNumber != null">
				,#{serialNumber, jdbcType=VARCHAR}
			</if>
			<if test="fromCompany != null">
				,#{fromCompany, jdbcType=VARCHAR}
			</if>
			<if test="keywords != null">
				,#{keywords, jdbcType=VARCHAR}
			</if>
			<if test="docToCompany != null">
				,#{docToCompany, jdbcType=VARCHAR}
			</if>
			<if test="docCCCompany != null">
				,#{docCCCompany, jdbcType=VARCHAR}
			</if>
			<if test="checkOpinion != null">
				,#{checkOpinion, jdbcType=VARCHAR}
			</if>
			<if test="countersignOpinion != null">
				,#{countersignOpinion, jdbcType=VARCHAR}
			</if>
			<if test="signAndIssueOpinion != null">
				,#{signAndIssueOpinion, jdbcType=VARCHAR}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateSendDocApply" parameterType="com.glaf.oa.doc.domain.SendDocApply">
		update SENDDOCAPPLY
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="subject != null">
				SUBJECT = #{subject, jdbcType=VARCHAR},
			</if>
			<if test="securityLevel != null">
				SECURITYLEVEL = #{securityLevel, jdbcType=INTEGER},
			</if>
			<if test="urgencyLevel != null">
				URGENCYLEVEL = #{urgencyLevel, jdbcType=INTEGER},
			</if>
			<if test="docNo != null">
				DOCNO = #{docNo, jdbcType=VARCHAR},
			</if>
			<if test="docType != null">
				DOCTYPE = #{docType, jdbcType=VARCHAR},
			</if>
			<if test="draftName != null">
				DRAFTNAME = #{draftName, jdbcType=VARCHAR},
			</if>
			<if test="draftDate != null">
				DRAFTDATE = #{draftDate, jdbcType=TIMESTAMP},
			</if>
			<if test="sendDocDate != null">
				SENDDOCDATE = #{sendDocDate, jdbcType=TIMESTAMP},
			</if>
			<if test="serialNumber != null">
				SERIALNUMBER = #{serialNumber, jdbcType=VARCHAR},
			</if>
			<if test="fromCompany != null">
				FROMCOMPANY = #{fromCompany, jdbcType=VARCHAR},
			</if>
			<if test="keywords != null">
				KEYWORDS = #{keywords, jdbcType=VARCHAR},
			</if>
			<if test="docToCompany != null">
				DOCTOCOMPANY = #{docToCompany, jdbcType=VARCHAR},
			</if>
			<if test="docCCCompany != null">
				DOCCCCOMPANY = #{docCCCompany, jdbcType=VARCHAR},
			</if>
			<if test="checkOpinion != null">
				CHECKOPINION = #{checkOpinion, jdbcType=VARCHAR},
			</if>
			<if test="countersignOpinion != null">
				COUNTERSIGNOPINION = #{countersignOpinion, jdbcType=VARCHAR},
			</if>
			<if test="signAndIssueOpinion != null">
				SIGNANDISSUEOPINION = #{signAndIssueOpinion, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS = #{status, jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				CREATEDATE = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				CREATEBY = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
        </trim>
		where
          ID = #{id, jdbcType=INTEGER}
		
    </update>

 
	<delete id="deleteSendDocApplyById" parameterType="integer"> 
        delete from SENDDOCAPPLY
        where ID =	#{id}
	</delete>

	
	<delete id="deleteSendDocApplys" parameterType="com.glaf.oa.doc.query.SendDocApplyQuery">
		delete from SENDDOCAPPLY
		where ( 
 			  ID IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getSendDocApplyById" parameterType="integer" resultMap="sendDocApplyResultMap">
		select * from SENDDOCAPPLY where ID = #{id}
	</select>


	<select id="getSendDocApplys" 
	    parameterType="com.glaf.oa.doc.query.SendDocApplyQuery"
		resultMap="sendDocApplyResultMap">
		select distinct E.*
		<include refid="selectSendDocApplysSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getSendDocApplyCount" 
	    parameterType="com.glaf.oa.doc.query.SendDocApplyQuery"
		resultType="int">
		select count(*)
		<include refid="selectSendDocApplysSql" />
	</select>


	<sql id="selectSendDocApplysSql">

		from SENDDOCAPPLY E
		
		<where>
		       1 = 1  
			 
	        
			<if test="subject != null and subject != '' ">
				and E.SUBJECT = #{subject}
            </if>

			<if test="subjectLike != null and subjectLike != '' ">
				and E.SUBJECT like #{subjectLike}
            </if>

			<if test="ids != null and ids.size() &gt; 0">
			    and E.id IN
                <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
                </foreach>
			</if>
			<if test="subjects != null and subjects.size() &gt; 0">
			    and E.SUBJECT IN
                <foreach item="x_subject" index="index" collection="subjects" 
                     open="(" separator="," close=")">
                  #{x_subject}
                </foreach>
			</if>

			<if test="securityLevel != null">
				and E.SECURITYLEVEL = #{securityLevel}
            </if>

			<if test="securityLevelGreaterThanOrEqual != null">
				and E.SECURITYLEVEL &gt;= #{securityLevelGreaterThanOrEqual}
            </if>

			<if test="securityLevelLessThanOrEqual != null">
				and E.SECURITYLEVEL &lt;= #{securityLevelLessThanOrEqual}
            </if>

			<if test="securityLevels != null and securityLevels.size() &gt; 0">
			    and E.SECURITYLEVEL IN
                <foreach item="x_securityLevel" index="index" collection="securityLevels" 
                     open="(" separator="," close=")">
                  #{x_securityLevel}
                </foreach>
			</if>
      

			<if test="urgencyLevel != null">
				and E.URGENCYLEVEL = #{urgencyLevel}
            </if>

			<if test="urgencyLevelGreaterThanOrEqual != null">
				and E.URGENCYLEVEL &gt;= #{urgencyLevelGreaterThanOrEqual}
            </if>

			<if test="urgencyLevelLessThanOrEqual != null">
				and E.URGENCYLEVEL &lt;= #{urgencyLevelLessThanOrEqual}
            </if>

			<if test="urgencyLevels != null and urgencyLevels.size() &gt; 0">
			    and E.URGENCYLEVEL IN
                <foreach item="x_urgencyLevel" index="index" collection="urgencyLevels" 
                     open="(" separator="," close=")">
                  #{x_urgencyLevel}
                </foreach>
			</if>
      
	        
			<if test="docNo != null and docNo != '' ">
				and E.DOCNO = #{docNo}
            </if>

			<if test="docNoLike != null and docNoLike != '' ">
				and E.DOCNO like #{docNoLike}
            </if>

			<if test="docNos != null and docNos.size() &gt; 0">
			    and E.DOCNO IN
                <foreach item="x_docNo" index="index" collection="docNos" 
                     open="(" separator="," close=")">
                  #{x_docNo}
                </foreach>
			</if>
	        
			<if test="docType != null and docType != '' ">
				and E.DOCTYPE = #{docType}
            </if>

			<if test="docTypeLike != null and docTypeLike != '' ">
				and E.DOCTYPE like #{docTypeLike}
            </if>

			<if test="docTypes != null and docTypes.size() &gt; 0">
			    and E.DOCTYPE IN
                <foreach item="x_docType" index="index" collection="docTypes" 
                     open="(" separator="," close=")">
                  #{x_docType}
                </foreach>
			</if>
	        
			<if test="draftName != null and draftName != '' ">
				and E.DRAFTNAME = #{draftName}
            </if>

			<if test="draftNameLike != null and draftNameLike != '' ">
				and E.DRAFTNAME like #{draftNameLike}
            </if>

			<if test="draftNames != null and draftNames.size() &gt; 0">
			    and E.DRAFTNAME IN
                <foreach item="x_draftName" index="index" collection="draftNames" 
                     open="(" separator="," close=")">
                  #{x_draftName}
                </foreach>
			</if>

			<if test="draftDateGreaterThanOrEqual != null">
				and E.DRAFTDATE &gt;= #{draftDateGreaterThanOrEqual}
            </if>

			<if test="draftDateLessThanOrEqual != null">
				and E.DRAFTDATE &lt;= #{draftDateLessThanOrEqual}
            </if>


			<if test="sendDocDateGreaterThanOrEqual != null">
				and E.SENDDOCDATE &gt;= #{sendDocDateGreaterThanOrEqual}
            </if>

			<if test="sendDocDateLessThanOrEqual != null">
				and E.SENDDOCDATE &lt;= #{sendDocDateLessThanOrEqual}
            </if>

	        
			<if test="serialNumber != null and serialNumber != '' ">
				and E.SERIALNUMBER = #{serialNumber}
            </if>

			<if test="serialNumberLike != null and serialNumberLike != '' ">
				and E.SERIALNUMBER like #{serialNumberLike}
            </if>

			<if test="serialNumbers != null and serialNumbers.size() &gt; 0">
			    and E.SERIALNUMBER IN
                <foreach item="x_serialNumber" index="index" collection="serialNumbers" 
                     open="(" separator="," close=")">
                  #{x_serialNumber}
                </foreach>
			</if>
	        
			<if test="fromCompany != null and fromCompany != '' ">
				and E.FROMCOMPANY = #{fromCompany}
            </if>

			<if test="fromCompanyLike != null and fromCompanyLike != '' ">
				and E.FROMCOMPANY like #{fromCompanyLike}
            </if>

			<if test="fromCompanys != null and fromCompanys.size() &gt; 0">
			    and E.FROMCOMPANY IN
                <foreach item="x_fromCompany" index="index" collection="fromCompanys" 
                     open="(" separator="," close=")">
                  #{x_fromCompany}
                </foreach>
			</if>
	        
			<if test="keywords != null and keywords != '' ">
				and E.KEYWORDS = #{keywords}
            </if>

			<if test="keywordsLike != null and keywordsLike != '' ">
				and E.KEYWORDS like #{keywordsLike}
            </if>

			<if test="keywordss != null and keywordss.size() &gt; 0">
			    and E.KEYWORDS IN
                <foreach item="x_keywords" index="index" collection="keywordss" 
                     open="(" separator="," close=")">
                  #{x_keywords}
                </foreach>
			</if>
	        
			<if test="docToCompany != null and docToCompany != '' ">
				and E.DOCTOCOMPANY = #{docToCompany}
            </if>

			<if test="docToCompanyLike != null and docToCompanyLike != '' ">
				and E.DOCTOCOMPANY like #{docToCompanyLike}
            </if>

			<if test="docToCompanys != null and docToCompanys.size() &gt; 0">
			    and E.DOCTOCOMPANY IN
                <foreach item="x_docToCompany" index="index" collection="docToCompanys" 
                     open="(" separator="," close=")">
                  #{x_docToCompany}
                </foreach>
			</if>
	        
			<if test="docCCCompany != null and docCCCompany != '' ">
				and E.DOCCCCOMPANY = #{docCCCompany}
            </if>

			<if test="docCCCompanyLike != null and docCCCompanyLike != '' ">
				and E.DOCCCCOMPANY like #{docCCCompanyLike}
            </if>

			<if test="docCCCompanys != null and docCCCompanys.size() &gt; 0">
			    and E.DOCCCCOMPANY IN
                <foreach item="x_docCCCompany" index="index" collection="docCCCompanys" 
                     open="(" separator="," close=")">
                  #{x_docCCCompany}
                </foreach>
			</if>
	        
			<if test="checkOpinion != null and checkOpinion != '' ">
				and E.CHECKOPINION = #{checkOpinion}
            </if>

			<if test="checkOpinionLike != null and checkOpinionLike != '' ">
				and E.CHECKOPINION like #{checkOpinionLike}
            </if>

			<if test="checkOpinions != null and checkOpinions.size() &gt; 0">
			    and E.CHECKOPINION IN
                <foreach item="x_checkOpinion" index="index" collection="checkOpinions" 
                     open="(" separator="," close=")">
                  #{x_checkOpinion}
                </foreach>
			</if>
	        
			<if test="countersignOpinion != null and countersignOpinion != '' ">
				and E.COUNTERSIGNOPINION = #{countersignOpinion}
            </if>

			<if test="countersignOpinionLike != null and countersignOpinionLike != '' ">
				and E.COUNTERSIGNOPINION like #{countersignOpinionLike}
            </if>

			<if test="countersignOpinions != null and countersignOpinions.size() &gt; 0">
			    and E.COUNTERSIGNOPINION IN
                <foreach item="x_countersignOpinion" index="index" collection="countersignOpinions" 
                     open="(" separator="," close=")">
                  #{x_countersignOpinion}
                </foreach>
			</if>
	        
			<if test="signAndIssueOpinion != null and signAndIssueOpinion != '' ">
				and E.SIGNANDISSUEOPINION = #{signAndIssueOpinion}
            </if>

			<if test="signAndIssueOpinionLike != null and signAndIssueOpinionLike != '' ">
				and E.SIGNANDISSUEOPINION like #{signAndIssueOpinionLike}
            </if>

			<if test="signAndIssueOpinions != null and signAndIssueOpinions.size() &gt; 0">
			    and E.SIGNANDISSUEOPINION IN
                <foreach item="x_signAndIssueOpinion" index="index" collection="signAndIssueOpinions" 
                     open="(" separator="," close=")">
                  #{x_signAndIssueOpinion}
                </foreach>
			</if>
	        
			<if test="remark != null and remark != '' ">
				and E.REMARK = #{remark}
            </if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.REMARK like #{remarkLike}
            </if>

			<if test="remarks != null and remarks.size() &gt; 0">
			    and E.REMARK IN
                <foreach item="x_remark" index="index" collection="remarks" 
                     open="(" separator="," close=")">
                  #{x_remark}
                </foreach>
			</if>

			<if test="status != null">
				and E.STATUS = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
			    and E.STATUS IN
                <foreach item="x_status" index="index" collection="statuss" 
                     open="(" separator="," close=")">
                  #{x_status}
                </foreach>
			</if>
      

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE &gt;= #{createDateGreaterThanOrEqual}
            </if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE &lt;= #{createDateLessThanOrEqual}
            </if>


			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE &gt;= #{updateDateGreaterThanOrEqual}
            </if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE &lt;= #{updateDateLessThanOrEqual}
            </if>

	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>
	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>