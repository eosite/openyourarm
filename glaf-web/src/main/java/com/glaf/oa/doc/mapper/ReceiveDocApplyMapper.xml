<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.oa.doc.mapper.ReceiveDocApplyMapper">

 	<resultMap id="receiveDocApplyResultMap"	type="com.glaf.oa.doc.domain.ReceiveDocApply">
        <id property="id" column="ID" jdbcType="INTEGER" />
        <result property="subject" column="SUBJECT" jdbcType="VARCHAR"/>
        <result property="securityLevel" column="SECURITYLEVEL" jdbcType="INTEGER"/>
        <result property="urgencyLevel" column="URGENCYLEVEL" jdbcType="INTEGER"/>
        <result property="receiveDocTime" column="RECEIVEDOCTIME" jdbcType="TIMESTAMP"/>
        <result property="docType" column="DOCTYPE" jdbcType="VARCHAR"/>
        <result property="fromCompany" column="FROMCOMPANY" jdbcType="VARCHAR"/>
        <result property="serialNumber" column="SERIALNUMBER" jdbcType="VARCHAR"/>
        <result property="fromDocNo" column="FROMDOCNO" jdbcType="VARCHAR"/>
        <result property="receiveDocNo" column="RECEIVEDOCNO" jdbcType="VARCHAR"/>
        <result property="distributeCompany" column="DISTRIBUTECOMPANY" jdbcType="VARCHAR"/>
        <result property="nibanOption" column="NIBANOPTION" jdbcType="VARCHAR"/>
        <result property="leadOption" column="LEADOPTION" jdbcType="VARCHAR"/>
        <result property="chengbanOption" column="CHENGBANOPTION" jdbcType="VARCHAR"/>
        <result property="remark" column="REMARK" jdbcType="VARCHAR"/>
        <result property="status" column="STATUS" jdbcType="INTEGER"/>
        <result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="CREATEBY" jdbcType="VARCHAR"/>
        <result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertReceiveDocApply" parameterType="com.glaf.oa.doc.domain.ReceiveDocApply">
		insert into RECEIVEDOCAPPLY 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="subject != null">
				,SUBJECT 
			</if>
			<if test="securityLevel != null">
				,SECURITYLEVEL 
			</if>
			<if test="urgencyLevel != null">
				,URGENCYLEVEL 
			</if>
			<if test="receiveDocTime != null">
				,RECEIVEDOCTIME 
			</if>
			<if test="docType != null">
				,DOCTYPE 
			</if>
			<if test="fromCompany != null">
				,FROMCOMPANY 
			</if>
			<if test="serialNumber != null">
				,SERIALNUMBER 
			</if>
			<if test="fromDocNo != null">
				,FROMDOCNO 
			</if>
			<if test="receiveDocNo != null">
				,RECEIVEDOCNO 
			</if>
			<if test="distributeCompany != null">
				,DISTRIBUTECOMPANY 
			</if>
			<if test="nibanOption != null">
				,NIBANOPTION 
			</if>
			<if test="leadOption != null">
				,LEADOPTION 
			</if>
			<if test="chengbanOption != null">
				,CHENGBANOPTION 
			</if>
			<if test="remark != null">
				,REMARK 
			</if>
			<if test="status != null">
				,STATUS 
			</if>
			<if test="createDate != null">
				,CREATEDATE 
			</if>
			<if test="updateDate != null">
				,UPDATEDATE 
			</if>
			<if test="createBy != null">
				,CREATEBY 
			</if>
			<if test="updateBy != null">
				,UPDATEBY 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=INTEGER}
	     
			<if test="subject != null">
				,#{subject, jdbcType=VARCHAR}
			</if>
			<if test="securityLevel != null">
				,#{securityLevel, jdbcType=INTEGER}
			</if>
			<if test="urgencyLevel != null">
				,#{urgencyLevel, jdbcType=INTEGER}
			</if>
			<if test="receiveDocTime != null">
				,#{receiveDocTime, jdbcType=TIMESTAMP}
			</if>
			<if test="docType != null">
				,#{docType, jdbcType=VARCHAR}
			</if>
			<if test="fromCompany != null">
				,#{fromCompany, jdbcType=VARCHAR}
			</if>
			<if test="serialNumber != null">
				,#{serialNumber, jdbcType=VARCHAR}
			</if>
			<if test="fromDocNo != null">
				,#{fromDocNo, jdbcType=VARCHAR}
			</if>
			<if test="receiveDocNo != null">
				,#{receiveDocNo, jdbcType=VARCHAR}
			</if>
			<if test="distributeCompany != null">
				,#{distributeCompany, jdbcType=VARCHAR}
			</if>
			<if test="nibanOption != null">
				,#{nibanOption, jdbcType=VARCHAR}
			</if>
			<if test="leadOption != null">
				,#{leadOption, jdbcType=VARCHAR}
			</if>
			<if test="chengbanOption != null">
				,#{chengbanOption, jdbcType=VARCHAR}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateReceiveDocApply" parameterType="com.glaf.oa.doc.domain.ReceiveDocApply">
		update RECEIVEDOCAPPLY
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="subject != null">
				SUBJECT = #{subject, jdbcType=VARCHAR},
			</if>
			<if test="securityLevel != null">
				SECURITYLEVEL = #{securityLevel, jdbcType=INTEGER},
			</if>
			<if test="urgencyLevel != null">
				URGENCYLEVEL = #{urgencyLevel, jdbcType=INTEGER},
			</if>
			<if test="receiveDocTime != null">
				RECEIVEDOCTIME = #{receiveDocTime, jdbcType=TIMESTAMP},
			</if>
			<if test="docType != null">
				DOCTYPE = #{docType, jdbcType=VARCHAR},
			</if>
			<if test="fromCompany != null">
				FROMCOMPANY = #{fromCompany, jdbcType=VARCHAR},
			</if>
			<if test="serialNumber != null">
				SERIALNUMBER = #{serialNumber, jdbcType=VARCHAR},
			</if>
			<if test="fromDocNo != null">
				FROMDOCNO = #{fromDocNo, jdbcType=VARCHAR},
			</if>
			<if test="receiveDocNo != null">
				RECEIVEDOCNO = #{receiveDocNo, jdbcType=VARCHAR},
			</if>
			<if test="distributeCompany != null">
				DISTRIBUTECOMPANY = #{distributeCompany, jdbcType=VARCHAR},
			</if>
			<if test="nibanOption != null">
				NIBANOPTION = #{nibanOption, jdbcType=VARCHAR},
			</if>
			<if test="leadOption != null">
				LEADOPTION = #{leadOption, jdbcType=VARCHAR},
			</if>
			<if test="chengbanOption != null">
				CHENGBANOPTION = #{chengbanOption, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS = #{status, jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				CREATEDATE = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				CREATEBY = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
        </trim>
		where
          ID = #{id, jdbcType=INTEGER}
		
    </update>

 
	<delete id="deleteReceiveDocApplyById" parameterType="integer"> 
        delete from RECEIVEDOCAPPLY
        where ID =	#{id}
	</delete>

	
	<delete id="deleteReceiveDocApplys" parameterType="com.glaf.oa.doc.query.ReceiveDocApplyQuery">
		delete from RECEIVEDOCAPPLY
		where ( 
 			  ID IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getReceiveDocApplyById" parameterType="integer" resultMap="receiveDocApplyResultMap">
		select * from RECEIVEDOCAPPLY where ID = #{id}
	</select>


	<select id="getReceiveDocApplys" 
	    parameterType="com.glaf.oa.doc.query.ReceiveDocApplyQuery"
		resultMap="receiveDocApplyResultMap">
		select distinct E.*
		<include refid="selectReceiveDocApplysSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getReceiveDocApplyCount" 
	    parameterType="com.glaf.oa.doc.query.ReceiveDocApplyQuery"
		resultType="int">
		select count(*)
		<include refid="selectReceiveDocApplysSql" />
	</select>


	<sql id="selectReceiveDocApplysSql">

		from RECEIVEDOCAPPLY E
		
		<where>
		       1 = 1  
			 
	        
			<if test="subject != null and subject != '' ">
				and E.SUBJECT = #{subject}
            </if>

			<if test="subjectLike != null and subjectLike != '' ">
				and E.SUBJECT like #{subjectLike}
            </if>

			<if test="subjects != null and subjects.size() &gt; 0">
			    and E.SUBJECT IN
                <foreach item="x_subject" index="index" collection="subjects" 
                     open="(" separator="," close=")">
                  #{x_subject}
                </foreach>
			</if>

			<if test="securityLevel != null">
				and E.SECURITYLEVEL = #{securityLevel}
            </if>

			<if test="securityLevelGreaterThanOrEqual != null">
				and E.SECURITYLEVEL &gt;= #{securityLevelGreaterThanOrEqual}
            </if>

			<if test="securityLevelLessThanOrEqual != null">
				and E.SECURITYLEVEL &lt;= #{securityLevelLessThanOrEqual}
            </if>

			<if test="securityLevels != null and securityLevels.size() &gt; 0">
			    and E.SECURITYLEVEL IN
                <foreach item="x_securityLevel" index="index" collection="securityLevels" 
                     open="(" separator="," close=")">
                  #{x_securityLevel}
                </foreach>
			</if>
      

			<if test="urgencyLevel != null">
				and E.URGENCYLEVEL = #{urgencyLevel}
            </if>

			<if test="urgencyLevelGreaterThanOrEqual != null">
				and E.URGENCYLEVEL &gt;= #{urgencyLevelGreaterThanOrEqual}
            </if>

			<if test="urgencyLevelLessThanOrEqual != null">
				and E.URGENCYLEVEL &lt;= #{urgencyLevelLessThanOrEqual}
            </if>

			<if test="urgencyLevels != null and urgencyLevels.size() &gt; 0">
			    and E.URGENCYLEVEL IN
                <foreach item="x_urgencyLevel" index="index" collection="urgencyLevels" 
                     open="(" separator="," close=")">
                  #{x_urgencyLevel}
                </foreach>
			</if>
      

			<if test="receiveDocTimeGreaterThanOrEqual != null">
				and E.RECEIVEDOCTIME &gt;= #{receiveDocTimeGreaterThanOrEqual}
            </if>

			<if test="receiveDocTimeLessThanOrEqual != null">
				and E.RECEIVEDOCTIME &lt;= #{receiveDocTimeLessThanOrEqual}
            </if>

	        
			<if test="docType != null and docType != '' ">
				and E.DOCTYPE = #{docType}
            </if>

			<if test="docTypeLike != null and docTypeLike != '' ">
				and E.DOCTYPE like #{docTypeLike}
            </if>

			<if test="docTypes != null and docTypes.size() &gt; 0">
			    and E.DOCTYPE IN
                <foreach item="x_docType" index="index" collection="docTypes" 
                     open="(" separator="," close=")">
                  #{x_docType}
                </foreach>
			</if>
	        
			<if test="fromCompany != null and fromCompany != '' ">
				and E.FROMCOMPANY = #{fromCompany}
            </if>

			<if test="fromCompanyLike != null and fromCompanyLike != '' ">
				and E.FROMCOMPANY like #{fromCompanyLike}
            </if>

			<if test="fromCompanys != null and fromCompanys.size() &gt; 0">
			    and E.FROMCOMPANY IN
                <foreach item="x_fromCompany" index="index" collection="fromCompanys" 
                     open="(" separator="," close=")">
                  #{x_fromCompany}
                </foreach>
			</if>
	        
			<if test="serialNumber != null and serialNumber != '' ">
				and E.SERIALNUMBER = #{serialNumber}
            </if>

			<if test="serialNumberLike != null and serialNumberLike != '' ">
				and E.SERIALNUMBER like #{serialNumberLike}
            </if>

			<if test="serialNumbers != null and serialNumbers.size() &gt; 0">
			    and E.SERIALNUMBER IN
                <foreach item="x_serialNumber" index="index" collection="serialNumbers" 
                     open="(" separator="," close=")">
                  #{x_serialNumber}
                </foreach>
			</if>
	        
			<if test="fromDocNo != null and fromDocNo != '' ">
				and E.FROMDOCNO = #{fromDocNo}
            </if>

			<if test="fromDocNoLike != null and fromDocNoLike != '' ">
				and E.FROMDOCNO like #{fromDocNoLike}
            </if>

			<if test="fromDocNos != null and fromDocNos.size() &gt; 0">
			    and E.FROMDOCNO IN
                <foreach item="x_fromDocNo" index="index" collection="fromDocNos" 
                     open="(" separator="," close=")">
                  #{x_fromDocNo}
                </foreach>
			</if>
	        
			<if test="receiveDocNo != null and receiveDocNo != '' ">
				and E.RECEIVEDOCNO = #{receiveDocNo}
            </if>

			<if test="receiveDocNoLike != null and receiveDocNoLike != '' ">
				and E.RECEIVEDOCNO like #{receiveDocNoLike}
            </if>

			<if test="receiveDocNos != null and receiveDocNos.size() &gt; 0">
			    and E.RECEIVEDOCNO IN
                <foreach item="x_receiveDocNo" index="index" collection="receiveDocNos" 
                     open="(" separator="," close=")">
                  #{x_receiveDocNo}
                </foreach>
			</if>
	        
			<if test="distributeCompany != null and distributeCompany != '' ">
				and E.DISTRIBUTECOMPANY = #{distributeCompany}
            </if>

			<if test="distributeCompanyLike != null and distributeCompanyLike != '' ">
				and E.DISTRIBUTECOMPANY like #{distributeCompanyLike}
            </if>

			<if test="distributeCompanys != null and distributeCompanys.size() &gt; 0">
			    and E.DISTRIBUTECOMPANY IN
                <foreach item="x_distributeCompany" index="index" collection="distributeCompanys" 
                     open="(" separator="," close=")">
                  #{x_distributeCompany}
                </foreach>
			</if>
	        
			<if test="nibanOption != null and nibanOption != '' ">
				and E.NIBANOPTION = #{nibanOption}
            </if>

			<if test="nibanOptionLike != null and nibanOptionLike != '' ">
				and E.NIBANOPTION like #{nibanOptionLike}
            </if>

			<if test="nibanOptions != null and nibanOptions.size() &gt; 0">
			    and E.NIBANOPTION IN
                <foreach item="x_nibanOption" index="index" collection="nibanOptions" 
                     open="(" separator="," close=")">
                  #{x_nibanOption}
                </foreach>
			</if>
	        
			<if test="leadOption != null and leadOption != '' ">
				and E.LEADOPTION = #{leadOption}
            </if>

			<if test="leadOptionLike != null and leadOptionLike != '' ">
				and E.LEADOPTION like #{leadOptionLike}
            </if>

			<if test="leadOptions != null and leadOptions.size() &gt; 0">
			    and E.LEADOPTION IN
                <foreach item="x_leadOption" index="index" collection="leadOptions" 
                     open="(" separator="," close=")">
                  #{x_leadOption}
                </foreach>
			</if>
	        
			<if test="chengbanOption != null and chengbanOption != '' ">
				and E.CHENGBANOPTION = #{chengbanOption}
            </if>

			<if test="chengbanOptionLike != null and chengbanOptionLike != '' ">
				and E.CHENGBANOPTION like #{chengbanOptionLike}
            </if>

			<if test="chengbanOptions != null and chengbanOptions.size() &gt; 0">
			    and E.CHENGBANOPTION IN
                <foreach item="x_chengbanOption" index="index" collection="chengbanOptions" 
                     open="(" separator="," close=")">
                  #{x_chengbanOption}
                </foreach>
			</if>
	        
			<if test="remark != null and remark != '' ">
				and E.REMARK = #{remark}
            </if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.REMARK like #{remarkLike}
            </if>

			<if test="remarks != null and remarks.size() &gt; 0">
			    and E.REMARK IN
                <foreach item="x_remark" index="index" collection="remarks" 
                     open="(" separator="," close=")">
                  #{x_remark}
                </foreach>
			</if>

			<if test="status != null">
				and E.STATUS = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
			    and E.STATUS IN
                <foreach item="x_status" index="index" collection="statuss" 
                     open="(" separator="," close=")">
                  #{x_status}
                </foreach>
			</if>
      

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE &gt;= #{createDateGreaterThanOrEqual}
            </if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE &lt;= #{createDateLessThanOrEqual}
            </if>


			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE &gt;= #{updateDateGreaterThanOrEqual}
            </if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE &lt;= #{updateDateLessThanOrEqual}
            </if>

	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>
	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>