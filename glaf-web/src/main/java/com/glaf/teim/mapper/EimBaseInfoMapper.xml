<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.teim.mapper.EimBaseInfoMapper">

 	<resultMap id="eimBaseInfoResultMap"	type="com.glaf.teim.domain.EimBaseInfo">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="name" column="NAME_" jdbcType="VARCHAR"/>
        <result property="ip" column="IP_" jdbcType="VARCHAR"/>
        <result property="host" column="HOST_" jdbcType="VARCHAR"/>
        <result property="secret" column="SECRET_" jdbcType="VARCHAR"/>
        <result property="paasId" column="PAASID_" jdbcType="VARCHAR"/>
        <result property="createBy" column="CREATEBY_" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR"/>
        <result property="updateTime" column="UPDATETIME_" jdbcType="TIMESTAMP"/>
        <result property="deleteFlag" column="DELETE_FLAG_" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertEimBaseInfo" parameterType="com.glaf.teim.domain.EimBaseInfo">
		insert into EIM_BASEINFO 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
		    <if test="name != null">
				,NAME_ 
			</if>
			<if test="ip != null">
				,IP_ 
			</if>
			<if test="host != null">
				,HOST_ 
			</if>
			<if test="secret != null">
				,SECRET_ 
			</if>
			<if test="paasId != null">
				,PAASID_ 
			</if>
			<if test="createBy != null">
				,CREATEBY_ 
			</if>
			<if test="createTime != null">
				,CREATETIME_ 
			</if>
			<if test="updateBy != null">
				,UPDATEBY_ 
			</if>
			<if test="updateTime != null">
				,UPDATETIME_ 
			</if>
			<if test="deleteFlag != null">
			    ,DELETE_FLAG_
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="ip != null">
				,#{ip, jdbcType=VARCHAR}
			</if>
			<if test="host != null">
				,#{host, jdbcType=VARCHAR}
			</if>
			<if test="secret != null">
				,#{secret, jdbcType=VARCHAR}
			</if>
			<if test="paasId != null">
				,#{paasId, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateTime != null">
				,#{updateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="deleteFlag != null">
			   ,#{deleteFlag, jdbcType=INTEGER}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateEimBaseInfo" parameterType="com.glaf.teim.domain.EimBaseInfo">
		update EIM_BASEINFO
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="ip != null">
				IP_ = #{ip, jdbcType=VARCHAR},
			</if>
			<if test="host != null">
				HOST_ = #{host, jdbcType=VARCHAR},
			</if>
			<if test="secret != null">
				SECRET_ = #{secret, jdbcType=VARCHAR},
			</if>
			<if test="paasId != null">
				PAASID_ = #{paasId, jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				CREATEBY_ = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME_ = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATETIME_ = #{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
			   DELETE_FLAG_ = #{deleteFlag, jdbcType=INTEGER}
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteEimBaseInfoById" parameterType="string"> 
        delete from EIM_BASEINFO
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteEimBaseInfos" parameterType="com.glaf.teim.query.EimBaseInfoQuery">
		delete from EIM_BASEINFO
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getEimBaseInfoById" parameterType="string" resultMap="eimBaseInfoResultMap">
		select * from EIM_BASEINFO where ID_ = #{id}
	</select>

    <select id="getAllEimBaseInfo" 
		resultType="map">
		select ID_,NAME_ from EIM_BASEINFO
	</select>
	
	<select id="getEimBaseInfos" 
	    parameterType="com.glaf.teim.query.EimBaseInfoQuery"
		resultMap="eimBaseInfoResultMap">
		select distinct E.*
		<include refid="selectEimBaseInfosSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getEimBaseInfoCount" 
	    parameterType="com.glaf.teim.query.EimBaseInfoQuery"
		resultType="int">
		select count(*)
		<include refid="selectEimBaseInfosSql" />
	</select>


	<sql id="selectEimBaseInfosSql">

		from EIM_BASEINFO E
		
		<where>
		       1 = 1  
			 <if test="name != null and name != '' ">
				and E.NAME_ = #{name}
            </if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
            </if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME_ IN
                <foreach item="x_name" index="index" collection="names" 
                     open="(" separator="," close=")">
                  #{x_ip}
                </foreach>
			</if>
	        
			<if test="ip != null and ip != '' ">
				and E.IP_ = #{ip}
            </if>

			<if test="ipLike != null and ipLike != '' ">
				and E.IP_ like #{ipLike}
            </if>

			<if test="ips != null and ips.size() &gt; 0">
			    and E.IP_ IN
                <foreach item="x_ip" index="index" collection="ips" 
                     open="(" separator="," close=")">
                  #{x_ip}
                </foreach>
			</if>
	        
			<if test="host != null and host != '' ">
				and E.HOST_ = #{host}
            </if>

			<if test="hostLike != null and hostLike != '' ">
				and E.HOST_ like #{hostLike}
            </if>

			<if test="hosts != null and hosts.size() &gt; 0">
			    and E.HOST_ IN
                <foreach item="x_host" index="index" collection="hosts" 
                     open="(" separator="," close=")">
                  #{x_host}
                </foreach>
			</if>
	        
			<if test="secret != null and secret != '' ">
				and E.SECRET_ = #{secret}
            </if>

			<if test="secretLike != null and secretLike != '' ">
				and E.SECRET_ like #{secretLike}
            </if>

			<if test="secrets != null and secrets.size() &gt; 0">
			    and E.SECRET_ IN
                <foreach item="x_secret" index="index" collection="secrets" 
                     open="(" separator="," close=")">
                  #{x_secret}
                </foreach>
			</if>
	        
			<if test="paasId != null and paasId != '' ">
				and E.PAASID_ = #{paasId}
            </if>

			<if test="paasIdLike != null and paasIdLike != '' ">
				and E.PAASID_ like #{paasIdLike}
            </if>

			<if test="paasIds != null and paasIds.size() &gt; 0">
			    and E.PAASID_ IN
                <foreach item="x_paasId" index="index" collection="paasIds" 
                     open="(" separator="," close=")">
                  #{x_paasId}
                </foreach>
			</if>
	        
			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.CREATEBY_ like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
			    and E.CREATEBY_ IN
                <foreach item="x_createBy" index="index" collection="createBys" 
                     open="(" separator="," close=")">
                  #{x_createBy}
                </foreach>
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
            </if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
            </if>

	        
			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.UPDATEBY_ like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
			    and E.UPDATEBY_ IN
                <foreach item="x_updateBy" index="index" collection="updateBys" 
                     open="(" separator="," close=")">
                  #{x_updateBy}
                </foreach>
			</if>

			<if test="updateTimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updateTimeGreaterThanOrEqual}
            </if>

			<if test="updateTimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updateTimeLessThanOrEqual}
            </if>

            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>