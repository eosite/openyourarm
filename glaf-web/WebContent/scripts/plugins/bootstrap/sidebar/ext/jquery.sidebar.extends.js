! function($) {	var plugin = 'sidebarExt';	var Build = function(target, state) {		this.target = target;		this.state = state;		this.options = state.options;		this._init();	};	$.parser.plugins.push(plugin);	$.fnInit(plugin, function(target) {		var state = $.data(target, plugin + '.options');		var columns = $(target).data("columns");		if(columns&&columns.length>0){			state.options.columns = eval('('+columns+')');		}		var p = new Build(target, state);		$.data(target, plugin, p);	});	$.fn[plugin].defaults = {		visible: 'false',		cartoon: 'leftPlace',	//动画，leftSlide,rightSlide,upDownSlide		delayTime: '300',	//滑动时间		distance: '0',		top: '0',		sidebarClick: 'false',	};	$.fn[plugin].methods = {		_init: function() {			var that = this;			var options = that.options;			var $this = that.getOject.call(that);			var $thats = that.getMainOject.call(that);			var $con = that.getOje.call(that);			var $thates = that.getObjectCom.call(that);			var width = $this.outerWidth();			var widths = $thats.outerWidth();			var widthes = $thates.outerWidth(); 			var rights = widths -widthes;			var distance = parseInt(that.options.distance);			var top = parseInt(that.options.top);			that.width = width;			that.displayFlag = true;						$this.css("position","fixed");			$this.css("top",top);			$thats.css('color','transparent');			$thats.css('top','45%');			var widthedd = $this.outerWidth();			 var opp = 0 - widthedd;			if(options.sidebarClick == "false"){			if( options.cartoon == 'leftPlace' || options.cartoon == 'rightPlace'){				$this.css("display",'none');				if(options.cartoon == 'leftPlace'){					that.hideDistance = distance - width + 1;					that.showDistance = 0;					var withed=0-widths;					$this.css("left",opp);					$this.addClass("left");					$thats.removeClass("imgres");					$thats.addClass("imgres");					$(that.target).find(".imgres").css("position","absolute");					$(that.target).find(".imgres").css("right", withed + "px");					var b=$(that.target).find(".imgres").css("borderLeftWidth");					var c=0-parseInt(b);					$(that.target).find(".imsive").css("left",  c + "px");					$(that.target).find(".editHandle").css("position","absolute");									}else if(options.cartoon == 'rightPlace'){									that.showDistance = 0;					that.hideDistance = distance - width + 2;					$this.css("right",opp);					$this.addClass("right");					$thats.removeClass("imgres");					$thats.addClass("editHandle");					var op =$(that.target).find(".editHandle").css("border-left-width");					var f = $(that.target).find(".imsive").css("border-left-width");					var c = 0-parseInt(op);					var z =parseInt(op) -parseInt(f);					//var p =$(that.target).find(".editHandle").css("border-left");					//var d = $(that.target).find(".imsive").css("border-left");					var editWidth = $(that.target).find(".editHandle").css("borderLeftWidth");					var editSoild = $(that.target).find(".editHandle").css("borderLeftStyle");					var editColor = $(that.target).find(".editHandle").css("borderLeftColor");					var imsWidth = $(that.target).find(".imsive").css("borderLeftWidth");					var imsSoild = $(that.target).find(".imsive").css("borderLeftStyle");					var imsColor = $(that.target).find(".imsive").css("borderLeftColor");															$(that.target).find(".editHandle").css("border-left", "0px");					$(that.target).find(".imsive").css("border-left", "0px");										//$(that.target).find(".editHandle").css("border-right", p);					//$(that.target).find(".imsive").css("border-right", d);										$(that.target).find(".editHandle").css("borderRightWidth", editWidth);					$(that.target).find(".editHandle").css("borderRightStyle", editSoild);					$(that.target).find(".editHandle").css("borderRightColor", editColor);					$(that.target).find(".imsive").css("borderRightWidth", imsWidth);					$(that.target).find(".imsive").css("borderRightStyle", imsSoild);					$(that.target).find(".imsive").css("borderRightColor", imsColor);										$(that.target).find(".editHandle").css("left", c);					$(that.target).find(".imsive").css("left", z);					$(that.target).find(".imgres").css("position","absolute");					$(that.target).find(".editHandle").css("position","absolute");				}				//设置css3变化时间				$this.css("transition","all 700ms ease");				$this.css("transition-duration",options.delayTime + 'ms');				$this.css("display",'block');				if((options.visible == 'false')){					that.displayFlag = false;					$this.css("transform",'translate3d('+this.hideDistance+'px, 0px, 0px)');					$this.css("left",that.hideDistance);				}			}else if(options.visible == 'false'){				that.displayFlag = false;				$this.css("display","none");			 }						}else if(options.sidebarClick == "true"){				if( options.cartoon == 'leftPlace' || options.cartoon == 'rightPlace'){					$this.css("display",'none');					if(options.cartoon == 'leftPlace'){						that.hideDistance = distance - width + 1;						that.showDistance = 0;						that.displayFlag = false;						$this.css("left",opp);						var withed=0-widths;						$thats.removeClass("imgres");						$thats.addClass("imgres");						$(that.target).find(".imgres").css("position","absolute");						$(that.target).find(".imgres").css("right", withed + "px");						var b=$(that.target).find(".imgres").css("borderLeftWidth");						var c=0-parseInt(b);						var d = $(that.target).find(".imsive").css("borderLeft");						$(that.target).find(".imsive").css("left",  c + "px");						$thats.click(function(){														if($this.css("left")=="0px"){								if(options.bubbling == "true"){									$(that.target).find('body').off('click.'+plugin);								}								$this.css("left",opp +"px");								$(that.target).find(".imsive").css("borderRight", "0px");								$(that.target).find(".imsive").css("borderLeft", d);								$(that.target).find(".editHandle").css("position","absolute");							}else{								if(options.bubbling == "true"){									that.bubbingSidebar();								}								$this.css("left","0px");								$(that.target).find(".imsive").css("borderLeft", d);								$(that.target).find(".editHandle").css("position","absolute");								$(that.target).find(".imsive").css("borderLeft", "0px");								$(that.target).find(".imsive").css("borderRight", d);							}						});						$con.click(function(event){							 event = event || window.event;							 if(options.bubbling == "true"){								 event.stopPropagation();							 }						});					}else if(options.cartoon == 'rightPlace'){						that.showDistance = 0;						that.hideDistance = distance - width + 1;						that.displayFlag = false;						//默认是否展开						var b=$(that.target).find(".imgres").css("borderLeftWidth");						var c=0-parseInt(b);						$this.css("right",opp);						$thats.removeClass("imgres");						$thats.addClass("editHandle");						$(that.target).find(".editHandle").css("left",  c + "px");						$(that.target).find(".editHandle").css("position","absolute");						var op =$(that.target).find(".editHandle").css("borderLeftWidth");						var f = $(that.target).find(".imsive").css("borderLeftWidth");						var c = 0-parseInt(op);						var z =parseInt(op) -parseInt(f);						$(that.target).find(".editHandle").css("left",c+"px")						$(that.target).find(".imsive").css("left",  z + "px");						//var p =$(that.target).find(".editHandle").css("borderLeft");						var editWidth = $(that.target).find(".editHandle").css("borderLeftWidth");						var editSoild = $(that.target).find(".editHandle").css("borderLeftStyle");						var editColor = $(that.target).find(".editHandle").css("borderLeftColor");						//var d = $(that.target).find(".imsive").css("borderLeft");						var imsWidth = $(that.target).find(".imsive").css("borderLeftWidth");						var imsSoild = $(that.target).find(".imsive").css("borderLeftStyle");						var imsColor = $(that.target).find(".imsive").css("borderLeftColor");												$(that.target).find(".editHandle").css("borderLeft", "0px");						$(that.target).find(".imsive").css("borderLeft", "0px");						//$(that.target).find(".editHandle").css("borderRigh", p);						$(that.target).find(".editHandle").css("borderRightWidth", editWidth);						$(that.target).find(".editHandle").css("borderRightStyle", editSoild);						$(that.target).find(".editHandle").css("borderRightColor", editColor);						//$(that.target).find(".imsive").css("borderRight", d);						$(that.target).find(".imsive").css("borderRightWidth", imsWidth);						$(that.target).find(".imsive").css("borderRightStyle", imsSoild);						$(that.target).find(".imsive").css("borderRightColor", imsColor);						$thats.click(function(){							if($this.css("right") == "0px"){								if(options.bubbling == "true"){									$(that.target).find('body').off('click.'+plugin);								 }																		$this.css("right",opp+ "px");									$(that.target).find(".imsive").css("borderLeft", "0px");									//$(that.target).find(".imsive").css("borderRight", d);									$(that.target).find(".imsive").css("borderRightWidth", imsWidth);									$(that.target).find(".imsive").css("borderRightStyle", imsSoild);									$(that.target).find(".imsive").css("borderRightColor", imsColor);															}else{																if(options.bubbling == "true"){									$(that.target).find('body').on('click.'+plugin,function(event){										$this.css("right",opp+ "px");										$(that.target).find(".imsive").css("borderLeft", "0px");										$(that.target).find(".imsive").css("borderRight", d);										$(that.target).find('body').off('click.'+plugin);									});								 }								$this.css("right","0px");								$(that.target).find(".imsive").css("borderRight", d);								$(that.target).find(".editHandle").css("position","absolute");								$(that.target).find(".imsive").css("borderRight", "0px");								//$(that.target).find(".imsive").css("borderLeft", d);								$(that.target).find(".imsive").css("borderRightWidth", imsWidth);								$(that.target).find(".imsive").css("borderRightStyle", imsSoild);								$(that.target).find(".imsive").css("borderRightColor", imsColor);															}						});												$con.click(function(event){							 event = event || window.event;							 if(options.bubbling == "true"){								 event.stopPropagation();							 }						});					}					//设置css3变化时间					$this.css("transition","all 700ms ease");					$this.css("transition-duration",options.delayTime + 'ms');					$this.css("display",'block');				}else if(options.visible == 'false'){					that.displayFlag = false;					$this.css("display","none");				 }			}		},						bubbingSidebar:function(){			var that=this;			var $this = that.getOject.call(that);			var widthedd = $this.outerWidth();			 var opp = 0 - widthedd;			 var d = $(that.target).find(".imsive").css("borderLeft");			$(that.target).find('body').on('click.'+plugin,function(event){				$this.css("left",opp +"px");				$(that.target).find(".imsive").css("borderRight", "0px");				$(that.target).find(".imsive").css("borderLeft", d);				$(that.target).find(".editHandle").css("position","absolute");				$(that.target).find('body').off('click.'+plugin);			});		},										showSidebar: function(){			//获取配置信息			var options = this.options;			var that=this;			var distance = parseInt(options.distance);			var $this = that.getOject.call(that);			var $thats = that.getMOject.call(that);			var $con = that.getOje.call(that);			var $thatso = that.getMainOject.call(that);			var $thates = that.getObjectCom.call(that);			var width = $this.outerWidth();			var widths = $thats.outerWidth();			var widthso = $thatso.outerWidth();			var widthes = $thates.outerWidth(); 			var rights = widths -widthes;			var time = parseInt(this.options.delayTime);			if(options.cartoon == 'leftPlace'){					//左滑动时，left隐藏坐标，和显示坐标					that.hideDistance = distance - width + 1;					that.showDistance = 0;					$this.css("left",that.hideDistance);					var withed=0-$thats.outerWidth();					$thats.removeClass("imgres");					$thats.addClass("imgres");					var wo =0-widthso;					var to=widthso - widthes;					$(that.target).find(".imgres").css("right",wo+"px");					$(that.target).find(".imgres").css("position","absolute");					var b=$(that.target).find(".imgres").css("borderLeftWidth");					var c=0-parseInt(b);					$(that.target).find(".imsive").css("left",  c + "px");						$this.css("left","0px");						var d = $(that.target).find(".imsive").css("borderLeft");						$(that.target).find(".imsive").css("borderLeft", "0px");						if(d[0]==0){							var oq = $(".imsive").css("borderRight");							$(that.target).find(".imsive").css("borderRight", oq);						}else{							$(that.target).find(".imsive").css("borderRight", d);						}			}else if(options.cartoon == 'rightPlace'){				that.showDistance = 0;				that.hideDistance = distance - width + 1;				$thats.removeClass("imgres");				var wo =0-widths;				var to=widths - widthes;				$(that.target).find(".editHandle").css("left",wo+"px")				$(that.target).find(".imgres").css("position","absolute");				$(that.target).find(".editHandle").css("position","absolute");				var d = $(that.target).find(".imsive").css("borderRight");					$this.css("right","0px");					$(that.target).find(".imsive").css("borderRight", "0px");					if(d[0]==0){						var oq = $(that.target).find(".imsive").css("borderLeft");						$(that.target).find(".imsive").css("borderLeft", oq);					}else{						$(that.target).find(".imsive").css("borderLeft", d);					}							}else{				$this.show(time);			}			this.displayFlag = true;		},				hideSidebar: function(){			//获取配置信息			var options = this.options;			var that=this;			//获取对象			var distance = parseInt(options.distance);			var $this = that.getOject.call(that);			var $thats = that.getMOject.call(that);			var $thatso = that.getMainOject.call(that);			var $thates = that.getObjectCom.call(that);			var width = $this.outerWidth();			var widths = $thats.outerWidth();			var widthso = $thatso.outerWidth();			var widthes = $thates.outerWidth(); 			var rights = widths -widthes;			var time = parseInt(this.options.delayTime);			 if(options.cartoon == 'leftPlace'){					//左滑动时，left隐藏坐标，和显示坐标					that.hideDistance = distance - width + 1;					that.showDistance = 0;					var withed=0-$thats.outerWidth();					$this.css("left",that.hideDistance);					$thats.addClass("imgres");					var wo =0-widthso;					var to=widthso - widthes;					$(that.target).find(".imgres").css("right",wo+"px");					var b=$(that.target).find(".imgres").css("borderLeftWidth");					var c=0-parseInt(b);					$(that.target).find(".imsive").css("left",  c + "px");					//var d = $(that.target).find(".imsive").css("borderRight");					var imsWidth = $(that.target).find(".imsive").css("borderRightWidth");					var imsSoild = $(that.target).find(".imsive").css("borderRightStyle");					var imsColor = $(that.target).find(".imsive").css("borderRightColor");										$(that.target).find(".imsive").css("borderRight", "0px");					if(d[0]==0){						var oq = $(that.target).find(".imsive").css("borderLeft");												$(that.target).find(".imsive").css("borderLeft", oq);					}else{						//$(that.target).find(".imsive").css("borderLeft", d);						$(that.target).find(".imsive").css("borderLeftWidth", imsWidth);						$(that.target).find(".imsive").css("borderLeftStyle", imsSoild);						$(that.target).find(".imsive").css("borderLeftColor", imsColor);					}					$(that.target).find(".imgres").css("position","absolute");					$(that.target).find(".editHandle").css("position","absolute");			}else if(options.cartoon == 'rightPlace'){				that.showDistance = 0;				that.hideDistance = distance - width + 1;				$(that.target).find(".imgres").css("position","");				//右滑动时，left隐藏坐标，和显示坐标					if($this.css("right") == "0px"){						$this.css("right",that.hideDistance + "px");						//$this.find("img").attr("src",contextPath + "/images/component/editHandleIn.png").show();						var wo =0-widths;						var to=widths - widthes;						$(that.target).find(".editHandle").css("left",wo+"px")						$(that.target).find(".imsive").css("left",  to + "px");						$(that.target).find(".editHandle").css("position","absolute");						//var p =$(that.target).find(".editHandle").css("borderLeft");						//var d = $(that.target).find(".imsive").css("borderLeft");						var imsWidth = $(that.target).find(".imsive").css("borderLeftWidth");						var imsSoild = $(that.target).find(".imsive").css("borderLeftStyle");						var imsColor = $(that.target).find(".imsive").css("borderLeftColor");												$(that.target).find(".editHandle").css("borderLeft", "0px");						$(that.target).find(".imsive").css("borderLeft", "0px");						//$(that.target).find(".imsive").css("borderRight", d);						$(that.target).find(".imsive").css("borderRightWidth", imsWidth);						$(that.target).find(".imsive").css("borderRightStyle", imsSoild);						$(that.target).find(".imsive").css("borderRightColor", imsColor);											}			}else{				$this.show(time);			}			this.displayFlag = false;		},		display: function(){			if(this.displayFlag){				this.hideSidebar();			}else{				this.showSidebar();			}		},		getOject: function() {			return $(this.target).find("div:first");		},		getOje: function() {			return $(this.target).find($(".containerComp"));		},		getMainOject: function() {			return $(this.target).find($(".imgres"));		},		getMOject: function() {			return $(this.target).find($(".editHandle"));		},		getObjectCom: function() {			return $(this.target).find($(".imsive"));		},	}	Build.prototype = $.extend(true, {}, $.fn[plugin].methods, {		constructor : Build	});}(jQuery);