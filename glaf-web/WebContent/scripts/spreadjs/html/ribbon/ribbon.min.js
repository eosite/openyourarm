var GcSpread;
(function (n) {
	(function (t) {
		(function (i) {
			(function (r) {
				"use strict";
				function gu() {
					app.isNative ? app.getLicenseStatus() === LicenseStatus.Valid ? $(".only-for-no-licensed").remove() : app.getLicenseStatus() !== LicenseStatus.Trial && ($(".only-for-licensed").prop("disabled", "disabled"), $(".only-for-licensed").css("-webkit-filter", "grayscale(100%)"), $(".only-for-licensed").off("click")) : ($(".only-for-native").remove(), $(".only-for-no-licensed").remove());
					$(".quick-access-bar").on("click", "[data-action]", function (n) {
						var r = $(n.currentTarget),
						t = r.data("action"),
						u = r.data("actionArgs");
						t === "reset" ? i.actions.reset() : i.actions.doAction(t, i.wrapper.spread, u)
					});
					ri()
				}
				function uf() {
					$(".ribbon-bar").gcuiribbon({
						click : function (e, o) {
							var h = i.wrapper.spread,
							p = h.getActiveSheet(),
							st,
							vt,
							at,
							ft,
							ht,
							b,
							w,
							d,
							tu,
							ct,
							wr,
							l,
							pt,
							br,
							y,
							ot,
							et;
							switch (o.name) {
							case "font-family":
								i.actions.doAction("setFontFamily", h, $("#" + o.commandName).data("font"));
								break;
							case "font-size":
								i.actions.doAction("setFontSize", h, $("#" + o.commandName).text() + "pt")
							}
							switch (o.commandName) {
							case "copy":
								i.util.isSlicerSelected(p) ? i.actions.doAction("slicerCopy", h) : i.actions.doAction("copy", h);
								break;
							case "cut":
								i.util.isSlicerSelected(p) ? i.actions.doAction("slicerCut", h) : i.actions.doAction("cut", h);
								break;
							case "paste-all":
								i.actions.doAction("paste", h, 0);
								break;
							case "paste-formulas":
								i.actions.doAction("paste", i.wrapper.spread, 3);
								break;
							case "paste-values":
								i.actions.doAction("paste", i.wrapper.spread, 1);
								break;
							case "paste-formatting":
								i.actions.doAction("paste", i.wrapper.spread, 2);
								break;
							case "font-weight":
								i.actions.doAction("setFontWeight", h, $("#" + o.commandName).prop("checked") ? "bold" : "normal");
								break;
							case "font-italic":
								i.actions.doAction("setFontStyle", h, $("#" + o.commandName).prop("checked") ? "italic" : "normal");
								break;
							case "font-underline":
								i.actions.doAction("setUnderline", h, $("#" + o.commandName).prop("checked"));
								break;
							case "increase-fontsize":
								st = ef(),
								st && i.actions.doAction("setFontSize", h, st + "pt");
								break;
							case "decrease-fontsize":
								st = nf(),
								st && i.actions.doAction("setFontSize", h, st + "pt");
								break;
							case "bottom-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										bottom : !0
									}
								});
								break;
							case "top-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										top : !0
									}
								});
								break;
							case "left-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										left : !0
									}
								});
								break;
							case "right-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										right : !0
									}
								});
								break;
							case "no-border":
								i.actions.doAction("setBorder", h, {
									lineborder : null,
									options : {
										all : !0
									}
								});
								break;
							case "all-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										all : !0
									}
								});
								break;
							case "outside-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										outline : !0
									}
								});
								break;
							case "thickbox-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 5),
									options : {
										outline : !0
									}
								});
								break;
							case "bottom-double-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 6),
									options : {
										bottom : !0
									}
								});
								break;
							case "thick-bottom-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 5),
									options : {
										bottom : !0
									}
								});
								break;
							case "top-bottom-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										bottom : !0,
										top : !0
									}
								});
								break;
							case "top-thick-bottom-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										top : !0
									}
								}),
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 5),
									options : {
										bottom : !0
									}
								});
								break;
							case "top-double-bottom-border":
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 1),
									options : {
										top : !0
									}
								}),
								i.actions.doAction("setBorder", h, {
									lineborder : new t.LineBorder("black", 6),
									options : {
										bottom : !0
									}
								});
								break;
							case "more-border":
								c === undefined && (c = new i.FormatDialog),
								c.open("border");
								break;
							case "backcolor":
								vt || ($("#backcolor-picker").colorpicker({
										valueChanged : function (n, t) {
											t.name ? i.actions.doAction("setBackColor", i.wrapper.spread, t.name) : i.actions.doAction("setBackColor", i.wrapper.spread, t.color)
										},
										choosedColor : function (n, t) {
											vt.gcuipopup("hide")
										},
										openColorDialog : function () {
											vt.gcuipopup("hide")
										}
									}), vt = $("#backcolor-popup").gcuipopup({
											autoHide : !0,
											position : {
												of : $("#backcolor-button"),
												my : "left top",
												at : "left bottom"
											},
											showing : function (n, t) {
												$("#backcolor-picker").colorpicker("option", "themeColors", i.wrapper.getThemeColors())
											}
										})),
								vt.gcuipopup("show");
								break;
							case "forecolor":
								at || ($("#forecolor-picker").colorpicker({
										valueChanged : function (n, t) {
											t.name ? i.actions.doAction("setForeColor", i.wrapper.spread, t.name) : i.actions.doAction("setForeColor", i.wrapper.spread, t.color)
										},
										choosedColor : function (n, t) {
											at.gcuipopup("hide")
										},
										openColorDialog : function () {
											at.gcuipopup("hide")
										}
									}), at = $("#forecolor-popup").gcuipopup({
											autoHide : !0,
											position : {
												of : $("#forecolor-button"),
												my : "left top",
												at : "left bottom"
											},
											showing : function (n, t) {
												$("#forecolor-picker").colorpicker("option", "themeColors", i.wrapper.getThemeColors())
											}
										})),
								at.gcuipopup("show");
								break;
							case "top-align":
								i.actions.doAction("setVAlign", h, 0);
								break;
							case "middle-align":
								i.actions.doAction("setVAlign", h, 1);
								break;
							case "bottom-align":
								i.actions.doAction("setVAlign", h, 2);
								break;
							case "left-align":
								i.actions.doAction("setHAlign", h, 0);
								break;
							case "center-align":
								i.actions.doAction("setHAlign", h, 1);
								break;
							case "right-align":
								i.actions.doAction("setHAlign", h, 2);
								break;
							case "increase-indent":
								i.actions.doAction("setIndent", h, 1);
								break;
							case "decrease-indent":
								i.actions.doAction("setIndent", h, -1);
								break;
							case "wrap-text":
								i.actions.doAction("setWordWrap", h, $("#wrap-text").prop("checked"));
								break;
							case "merge-center":
								$("#merge-center").prop("checked") ? i.actions.doAction("mergeCenter", h) : i.actions.doAction("unmergeCells", h),
								setTimeout(function () {
									lt()
								}, 0);
								break;
							case "merge-center-button":
								i.actions.doAction("mergeCenter", h);
								break;
							case "merge-across":
								i.actions.doAction("mergeAcross", h);
								break;
							case "merge-cells":
								i.actions.doAction("mergeCells", h);
								break;
							case "unmerge-cells":
								i.actions.doAction("unmergeCells", h);
								break;
							case "format-general":
								i.actions.doAction("setFormatter", h, null);
								break;
							case "format-number":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Number.format);
								break;
							case "format-currency":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Currency.format);
								break;
							case "format-accouting":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Accounting.format);
								break;
							case "format-shortdate":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.ShortDate.format);
								break;
							case "format-longdate":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.LongDate.format);
								break;
							case "format-time":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Time.format);
								break;
							case "format-percentage":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Percentage.format);
								break;
							case "format-fraction":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Fraction.format);
								break;
							case "format-scientific":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Scientific.format);
								break;
							case "format-text":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Text.format);
								break;
							case "format-comma":
								i.actions.doAction("setFormatter", h, i.res.commonFormats.Comma.format);
								break;
							case "format-more":
								c === undefined && (c = new i.FormatDialog),
								c.open("number");
								break;
							case "increase-decimal":
								i.actions.doAction("increaseDecimal", h);
								break;
							case "decrease-decimal":
								i.actions.doAction("decreaseDecimal", h);
								break;
							case "button-celltype":
								fr === undefined && (fr = new i.ButtonCellTypeDialog),
								fr.open();
								break;
							case "checkbox-celltype":
								ur === undefined && (ur = new i.CheckBoxCellTypeDialog),
								ur.open();
								break;
							case "combobox-celltype":
								er === undefined && (er = new i.ComboBoxCellTypeDialog),
								er.open();
								break;
							case "hyperlink-celltype":
								sr === undefined && (sr = new i.HyperLinkCellTypeDialog),
								sr.open();
								break;
							case "clear-celltype":
								i.actions.doAction("clearCellType", h);
								break;
							case "conditional-format":
								di || (di = $("#condition-format-popup").gcuipopup({
											autoHide : !0,
											position : {
												of : $("#condition-format"),
												my : "left top",
												at : "left bottom"
											},
											collision : "fit fit",
											showing : function (n, t) {
												$("#condition-format-popup-menu").removeClass("hidden")
											},
											hiding : function () {
												return n()
											}
										})),
								di.gcuipopup("show");
								break;
							case "insert-cells":
								b = i.spreadActions.getSelectionType(h);
								switch (b) {
								case 0:
									i.MessageBox.show(i.res.insertCellInSheet, i.res.title, 2);
									break;
								case 2:
									i.spreadActions.insertColumns(h);
									break;
								case 1:
									i.spreadActions.insertRows(h);
									break;
								case 4:
									i.MessageBox.show(i.res.insertCellInMixtureRange, i.res.title, 2);
									break;
								case 3:
									vi === undefined && (vi = new i.InsertCellsDialog),
									vi.open();
									break;
								default:
									break
								}
								break;
							case "insert-rows":
								i.actions.doAction("insertRows", h);
								break;
							case "insert-columns":
								i.actions.doAction("insertColumns", h);
								break;
							case "insert-sheet":
								i.actions.doAction("insertSheet", h);
								break;
							case "delete-cells":
								b = i.spreadActions.getSelectionType(h);
								switch (b) {
								case 0:
									this._sheet.clear(0, 0, this._sheet.getRowCount(), this._sheet.getColumnCount(), 3, 51);
									break;
								case 2:
									i.spreadActions.deleteColumns(h);
									break;
								case 1:
									i.spreadActions.deleteRows(h);
									break;
								case 4:
									i.MessageBox.show(i.res.insertCellInMixtureRange, i.res.title, 2);
									break;
								case 3:
									pi === undefined && (pi = new i.DeleteCellsDialog),
									pi.open();
									break;
								default:
									break
								}
								break;
							case "delete-rows":
								i.actions.doAction("deleteRows", h);
								break;
							case "delete-columns":
								i.actions.doAction("deleteColumns", h);
								break;
							case "delete-sheet":
								i.actions.doAction("deleteSheet", h);
								break;
							case "set-rowheight":
								ki === undefined && (ki = new i.RowHeightDialog),
								ki.open();
								break;
							case "set-columnwidth":
								nr === undefined && (nr = new i.ColumnWidthDialog),
								nr.open();
								break;
							case "autofit-rowheight":
								i.actions.doAction("autofitRows", h);
								break;
							case "default-rowheight":
								ir === undefined && (ir = new i.StandardRowHeightDialog),
								ir.open();
								break;
							case "hide-rows":
								i.actions.doAction("hideRows", h);
								break;
							case "unhide-rows":
								i.actions.doAction("unHideRows", h);
								break;
							case "set-columnwidth":
								i.actions.doAction("setColumnsWidth", h);
								break;
							case "autofit-columnwidth":
								i.actions.doAction("autofitColumns", h);
								break;
							case "default-columnwidth":
								tr === undefined && (tr = new i.StandardColumnWidthDialog),
								tr.open();
								break;
							case "hide-columns":
								i.actions.doAction("hideColumns", h);
								break;
							case "unhide-columns":
								i.actions.doAction("unHideColumns", h);
								break;
							case "protect-sheet":
								oi || (oi = new i.ProtectionOptionDialog),
								oi.open();
								break;
							case "unprotect-sheet":
								i.actions.doAction("protectSheet", h, !1);
								break;
							case "lock-cells":
								i.actions.doAction("LockCells", h, !0);
								break;
							case "unlock-cells":
								i.actions.doAction("LockCells", h, !1);
								break;
							case "auto-sum":
								i.actions.doAction("setAutoFormula", h, "Sum");
								break;
							case "auto-average":
								i.actions.doAction("setAutoFormula", h, "Average");
								break;
							case "auto-count":
								i.actions.doAction("setAutoFormula", h, "Count");
								break;
							case "auto-max":
								i.actions.doAction("setAutoFormula", h, "Max");
								break;
							case "auto-min":
								i.actions.doAction("setAutoFormula", h, "Min");
								break;
							case "fill-down":
								i.actions.doAction("autoFillByDirection", h, 3);
								break;
							case "fill-right":
								i.actions.doAction("autoFillByDirection", h, 1);
								break;
							case "fill-up":
								i.actions.doAction("autoFillByDirection", h, 2);
								break;
							case "fill-left":
								i.actions.doAction("autoFillByDirection", h, 0);
								break;
							case "fill-series":
								yi || (yi = new i.FillDialog),
								yi.open();
								break;
							case "clear-all":
								i.actions.doAction("clearAll", h);
								break;
							case "clear-format":
								i.actions.doAction("clearFormat", h);
								break;
							case "clear-content":
								i.actions.doAction("clearContent", h);
								break;
							case "clear-comments":
								i.actions.doAction("clearComments", h);
								break;
							case "sort-AZ":
								i.util.isSlicerSelected(p) ? i.actions.doAction("sortSlicerItems", h, 1) : i.actions.doAction("sortRange", h, !0);
								break;
							case "sort-ZA":
								i.util.isSlicerSelected(p) ? i.actions.doAction("sortSlicerItems", h, 2) : i.actions.doAction("sortRange", h, !1);
								break;
							case "custom-sort":
								cr || (cr = new i.SortDialog),
								cr.open();
								break;
							case "set-filter":
								i.actions.doAction("setRowFilter", h, !0);
								break;
							case "clear-filter":
								i.actions.doAction("clearRowFilter", h);
								break;
							case "reapply-filter":
								i.actions.doAction("reApplyRowFilter", h);
								break;
							case "insert-function":
								ar || (ar = new i.InsertFunctionDialog),
								ar.open();
								break;
							case "calculate-auto":
								i.actions.doAction("autoCalculate", h, !0);
								break;
							case "calculate-manual":
								i.actions.doAction("autoCalculate", h, !1);
								break;
							case "calculate-now":
								i.actions.doAction("calculateNow", h);
								break;
							case "group":
								ft = h.getActiveSheet(),
								ht = ft.getSelections();
								if (ht.length > 1) {
									i.MessageBox.show(i.res.NotExecInMultiRanges, i.res.title, 2);
									return
								}
								b = i.spreadActions.getSelectionType(h),
								w = ht[0];
								if (b == 1) {
									d = new t.UndoRedo.RowGroupUndoAction(ft, {
											index : w.row,
											count : w.rowCount
										}),
									h.doCommand(d);
									break
								} else if (b == 2) {
									d = new t.UndoRedo.ColumnGroupUndoAction(ft, {
											index : w.col,
											count : w.colCount
										}),
									h.doCommand(d);
									break
								} else {
									bi === undefined && (bi = new i.GroupDialog),
									bi.open();
									break
								}
							case "ungroup":
								ft = h.getActiveSheet(),
								ht = ft.getSelections();
								if (ht.length > 1) {
									i.MessageBox.show(i.res.NotExecInMultiRanges, i.res.title, 2);
									return
								}
								b = i.spreadActions.getSelectionType(h),
								w = ht[0],
								b == 1 ? (d = new t.UndoRedo.RowUngroupUndoAction(ft, {
											index : w.row,
											count : w.rowCount
										}), h.doCommand(d)) : b == 2 ? (d = new t.UndoRedo.ColumnUngroupUndoAction(ft, {
											index : w.col,
											count : w.colCount
										}), h.doCommand(d)) : (wi === undefined && (wi = new i.UnGroupDialog), wi.open());
								break;
							case "template-design-mode":
								var ru = h.getActiveSheet(),
								kr = $("#template-design-mode"),
								uu = kr.find("span.ui-button-text"),
								pr = kr.data("checked");
								pr = !pr,
								pr ? (hf(), uu.addClass("template-design-mode-checked"), gi(), tu = $(".design-mode-panel"), tu.sliderpanel("open")) : dr(),
								kr.data("checked", pr),
								ru.repaint();
								break;
							case "clearBindingPath":
								bf();
								break;
							case "loadSchema":
								wf();
								break;
							case "saveSchema":
								pf();
								break;
							case "show-detail":
								i.actions.doAction("expandGroup", h);
								break;
							case "hide-detail":
								i.actions.doAction("collapseGroup", h);
								break;
							case "group-direction":
								or || (or = new i.GroupDirectionDialog),
								or.open();
								break;
							case "showhide-rowheader":
								f("showhide-rowheader"),
								i.actions.doAction("showHideRowHeader", h);
								break;
							case "showhide-columnheader":
								f("showhide-columnheader"),
								i.actions.doAction("showHideColumnHeader", h);
								break;
							case "showhide-vgridline":
								f("showhide-vgridline"),
								i.actions.doAction("showHideVGridLine", h);
								break;
							case "showhide-hgridline":
								f("showhide-hgridline"),
								i.actions.doAction("showHideHGridLine", h);
								break;
							case "showhide-tabstrip":
								f("showhide-tabstrip"),
								i.actions.doAction("showHideTabStrip", h);
								break;
							case "showhide-newtab":
								f("showhide-newtab"),
								i.actions.doAction("showHideNewTab", h);
								break;
							case "zoom":
								ai || (ai = new i.ZoomDialog),
								ai.open();
								break;
							case "zoom-default":
								i.actions.doAction("zoomDefault", h),
								setTimeout(function () {
									k()
								}, 0);
								break;
							case "zoom-selection":
								i.actions.doAction("zoomSelection", h),
								setTimeout(function () {
									k()
								}, 0);
								break;
							case "freeze-panes":
								i.actions.doAction("freeze", h, {
									row : h.getActiveSheet().getActiveRowIndex(),
									col : h.getActiveSheet().getActiveColumnIndex()
								});
								break;
							case "freeze-toprow":
								i.actions.doAction("freeze", h, {
									row : 1,
									col : 0,
									trailingRow : 0,
									trailingCol : 0
								});
								break;
							case "freeze-firstcolumn":
								i.actions.doAction("freeze", h, {
									row : 0,
									col : 1,
									trailingRow : 0,
									trailingCol : 0
								});
								break;
							case "freeze-bottomrow":
								i.actions.doAction("freeze", h, {
									row : 0,
									col : 0,
									trailingRow : 1,
									trailingCol : 0
								});
								break;
							case "freeze-lastcolumn":
								i.actions.doAction("freeze", h, {
									row : 0,
									col : 0,
									trailingRow : 0,
									trailingCol : 1
								});
								break;
							case "unfreeze-panes":
								i.actions.doAction("unfreeze", h);
								break;
							case "fontgroup":
								c === undefined && (c = new i.FormatDialog),
								c.open("font");
								break;
							case "aligngroup":
								c === undefined && (c = new i.FormatDialog),
								c.open("alignment");
								break;
							case "numbergroup":
								c === undefined && (c = new i.FormatDialog),
								c.open("number");
								break;
							case "find":
								rr === undefined && (rr = new i.FindDialog),
								rr.open();
								break;
							case "goto":
								hr === undefined && (hr = new i.GoToDialog),
								hr.open();
								break;
							case "spark-line":
								u || (u = new i.InsertSparkLineDialog),
								u.open(0);
								break;
							case "spark-column":
								u || (u = new i.InsertSparkLineDialog),
								u.open(1);
								break;
							case "spark-winloss":
								u || (u = new i.InsertSparkLineDialog),
								u.open(2);
								break;
							case "spark-pie":
								u || (u = new i.InsertSparkLineDialog),
								u.open(0, !0);
								break;
							case "spark-area":
								u || (u = new i.InsertSparkLineDialog),
								u.open(1, !0);
								break;
							case "spark-scatter":
								u || (u = new i.InsertSparkLineDialog),
								u.open(2, !0);
								break;
							case "spark-bullet":
								rt || (rt = new i.BulletSparklineDialog),
								rt.open();
								break;
							case "spark-spread":
								u || (u = new i.InsertSparkLineDialog),
								u.open(5, !0);
								break;
							case "spark-stacked":
								u || (u = new i.InsertSparkLineDialog),
								u.open(6, !0);
								break;
							case "spark-hbar":
								it || (it = new i.HbarSparklineDialog),
								it.open();
								break;
							case "spark-vbar":
								ut || (ut = new i.VbarSparklineDialog),
								ut.open();
								break;
							case "spark-variance":
								tt || (tt = new i.VariSparklineDialog),
								tt.open();
								break;
							case "spark-boxplot":
								u || (u = new i.InsertSparkLineDialog),
								u.open(10, !0);
								break;
							case "spark-cascade":
								u || (u = new i.InsertSparkLineDialog),
								u.open(11, !0);
								break;
							case "spark-pareto":
								u || (u = new i.InsertSparkLineDialog),
								u.open(12, !0);
								break;
							case "name-manager":
								lr || (lr = new i.NameManagerDialog),
								lr.open();
								break;
							case "spread-setting-general":
								g || (g = new i.SpreadSettingDialog),
								g.open("general");
								break;
							case "spread-setting-scrollbar":
								g || (g = new i.SpreadSettingDialog),
								g.open("scrollbar");
								break;
							case "spread-setting-tabstrip":
								g || (g = new i.SpreadSettingDialog),
								g.open("tabstrip");
								break;
							case "sheet-setting-general":
								a || (a = new i.SheetSettingDialog),
								a.open("general");
								break;
							case "sheet-setting-gridline":
								a || (a = new i.SheetSettingDialog),
								a.open("gridline");
								break;
							case "sheet-setting-calculation":
								a || (a = new i.SheetSettingDialog),
								a.open("calculation");
								break;
							case "sheet-setting-headers":
								a || (a = new i.SheetSettingDialog),
								a.open("headers");
								break;
							case "data-validation":
								yr || (yr = new i.DataValidationDialog),
								yr.open();
								break;
							case "circle-invalid":
								i.actions.doAction("circleInvalidData", h);
								break;
							case "clear-circle":
								i.actions.doAction("unCircleInvalidData", h);
								break;
							case "insert-table":
								dt || (dt = new i.CreateTableDialog),
								dt.open();
								break;
							case "insert-picture":
								i.actions.doAction("insertPicture", h);
								break;
							case "sparkline-type-line":
								i.actions.doAction("setSparklineType", h, 0);
								break;
							case "sparkline-type-column":
								i.actions.doAction("setSparklineType", h, 1);
								break;
							case "sparkline-type-winloss":
								i.actions.doAction("setSparklineType", h, 2);
								break;
							case "sparkline-high-point":
								f("sparkline-high-point"),
								i.actions.doAction("setSparklineHighPoint", h, s("sparkline-high-point"));
								break;
							case "sparkline-low-point":
								f("sparkline-low-point"),
								i.actions.doAction("setSparklineLowPoint", h, s("sparkline-low-point"));
								break;
							case "sparkline-first-point":
								f("sparkline-first-point"),
								i.actions.doAction("setSparklineFirstPoint", h, s("sparkline-first-point"));
								break;
							case "sparkline-last-point":
								f("sparkline-last-point"),
								i.actions.doAction("setSparklineLastPoint", h, s("sparkline-last-point"));
								break;
							case "sparkline-negative-point":
								f("sparkline-negative-point"),
								i.actions.doAction("setSparklineNegativePoint", h, s("sparkline-negative-point"));
								break;
							case "sparkline-marker-point":
								f("sparkline-marker-point"),
								i.actions.doAction("setSparklineMarkerPoint", h, s("sparkline-marker-point"));
								break;
							case "sparkline-group":
								i.actions.doAction("groupSparkline", h);
								break;
							case "sparkline-ungroup":
								i.actions.doAction("unGroupSparkline", h);
								break;
							case "sparkline-clear":
								i.actions.doAction("clearSparkline", h);
								break;
							case "sparkline-clear-group":
								i.actions.doAction("clearSparklineGroup", h);
								break;
							case "sparkline-color":
								ct || ($("#sparklinecolor-picker").colorpicker({
										valueChanged : function (n, t) {
											t.name ? i.actions.doAction("setSparklineColor", i.wrapper.spread, t.name) : i.actions.doAction("setSparklineColor", i.wrapper.spread, t.color)
										},
										choosedColor : function (n, t) {
											ct.gcuipopup("hide")
										},
										openColorDialog : function () {
											ct.gcuipopup("hide")
										}
									}), ct = $("#sparklinecolor-popup").gcuipopup({
											autoHide : !0,
											position : {
												of : $("#sparkline-color"),
												my : "left top",
												at : "left bottom"
											},
											showing : function (n, t) {
												$("#sparklinecolor-picker").colorpicker("option", "themeColors", i.wrapper.getThemeColors())
											}
										})),
								ct.gcuipopup("show");
								break;
							case "sparkline-marker-color":
								ti || (ti = new i.SparklineMarkerColorDialog),
								ti.open();
								break;
							case "sparkline-weight-dot25":
								i.actions.doAction("setSparklineWeight", h, .25);
								break;
							case "sparkline-weight-dot5":
								i.actions.doAction("setSparklineWeight", h, .5);
								break;
							case "sparkline-weight-dot75":
								i.actions.doAction("setSparklineWeight", h, .75);
								break;
							case "sparkline-weight-1":
								i.actions.doAction("setSparklineWeight", h, 1);
								break;
							case "sparkline-weight-1dot5":
								i.actions.doAction("setSparklineWeight", h, 1.5);
								break;
							case "sparkline-weight-2dot25":
								i.actions.doAction("setSparklineWeight", h, 2.25);
								break;
							case "sparkline-weight-3":
								i.actions.doAction("setSparklineWeight", h, 3);
								break;
							case "sparkline-weight-4dot5":
								i.actions.doAction("setSparklineWeight", h, 4.5);
								break;
							case "sparkline-weight-6":
								i.actions.doAction("setSparklineWeight", h, 6);
								break;
							case "sparkline-weight-custom":
								gt || (gt = new i.SparklineWeightDialog),
								gt.open();
								break;
							case "resize-table":
								kt || (kt = new i.ResizeTableDialog),
								kt.open();
								break;
							case "table-header-row":
								f("table-header-row"),
								i.actions.doAction("setTableHeaderRow", h, s("table-header-row"));
								break;
							case "table-total-row":
								f("table-total-row"),
								i.actions.doAction("setTableTotalRow", h, s("table-total-row"));
								break;
							case "table-banded-rows":
								f("table-banded-rows"),
								i.actions.doAction("setTableBandedRows", h, s("table-banded-rows"));
								break;
							case "table-first-column":
								f("table-first-column"),
								i.actions.doAction("setTableFirstColumn", h, s("table-first-column"));
								break;
							case "table-last-column":
								f("table-last-column"),
								i.actions.doAction("setTableLastColumn", h, s("table-last-column"));
								break;
							case "table-banded-columns":
								f("table-banded-columns"),
								i.actions.doAction("setTableBandedColumns", h, s("table-banded-columns"));
								break;
							case "table-filter-button":
								f("table-filter-button"),
								i.actions.doAction("setTableFilterButton", h, s("table-filter-button"));
								break;
							case "table-styles":
								nt || (vr(), nt = $("#format-table-popup").gcuipopup({
											autoHide : !0,
											showing : function (n, t) {
												$("#format-table-popup span.container-span").removeClass("table-format-item-selected"),
												si && $("#format-table-popup span.table-format-preview." + si).parent().addClass("table-format-item-selected"),
												$("#format-table-popup").removeClass("hidden")
											}
										}));
								for (y in i.FormatTableDialog.customTableStyle)
									y ? (ot = y.substring(0, y.indexOf("-")), $(".custom-format-table").css("display", "block"), et = "table-format-" + ot, $("." + et).css("display", "inline-block")) : $(".custom-format-table").css("display", "none");
								nt.gcuipopup({
									position : {
										of : $("#table-styles-button"),
										my : "left top",
										at : "right top"
									}
								}),
								nt.gcuipopup("show");
								break;
							case "format-table":
								nt || (vr(), nt = $("#format-table-popup").gcuipopup({
											autoHide : !0,
											position : {
												of : $("#format-table-button"),
												my : "left top",
												at : "left bottom"
											},
											showing : function (n, t) {}

										})),
								wr = 1;
								for (y in i.FormatTableDialog.customTableStyle)
									y ? (ot = y.substring(0, y.indexOf("-")), $(".custom-format-table").css("display", "block"), et = "table-format-" + ot, $("." + et).css("display", "inline-block"), kf(y, wr), wr++) : $(".custom-format-table").css("display", "none");
								nt.gcuipopup({
									position : {
										of : $("#format-table-button"),
										my : "left top",
										at : "left bottom"
									}
								}),
								nt.gcuipopup("show");
								break;
							case "cell-styles":
								bt || (bt = $("#cell-styles-popup").gcuipopup({
											autoHide : !0,
											position : {
												of : $("#cell-styles-button"),
												my : "left top",
												at : "left bottom"
											},
											showing : function (n, t) {
												$("#cell-styles-popup").removeClass("hidden")
											}
										})),
								hu(),
								bt.gcuipopup("show");
								break;
							case "formulaSparkline-setting":
								var iu = p.getActiveRowIndex(),
								nu = p.getActiveColumnIndex(),
								gr = i.util.parseFormulaSparkline(iu, nu);
								if (!gr)
									break;
								l = i.wrapper.spread.getSparklineEx(gr.getFunctionName()),
								pt = {
									row : iu,
									col : nu
								},
								l && (l instanceof t.PieSparkline ? (wt || (wt = new i.PieSparklineDialog), wt.open(pt)) : l instanceof t.AreaSparkline ? (ii || (ii = new i.AreaSparklineDialog), ii.open(pt)) : l instanceof t.ScatterSparkline ? (li || (li = new i.ScatterSparklineDialog), li.open(pt)) : l instanceof t.CompatibleSparkline ? (ci || (ci = new i.CompatibleSparklineDialog), ci.open(pt)) : l instanceof t.BulletSparkline ? (rt || (rt = new i.BulletSparklineDialog), rt.open()) : l instanceof t.SpreadSparkline ? (ui || (ui = new i.SpreadSparklineDialog), ui.open()) : l instanceof t.StackedSparkline ? (ri || (ri = new i.StackedSparklineDialog), ri.open()) : l instanceof t.HBarSparkline ? (it || (it = new i.HbarSparklineDialog), it.open()) : l instanceof t.VBarSparkline ? (ut || (ut = new i.VbarSparklineDialog), ut.open()) : l instanceof t.VariSparkline ? (tt || (tt = new i.VariSparklineDialog), tt.open()) : l instanceof t.BoxPlotSparkline ? (ei || (ei = new i.BoxPlotSparklineDialog), ei.open()) : l instanceof t.CascadeSparkline ? (ni || (ni = new i.CascadeSparklineDialog), ni.open()) : l instanceof t.ParetoSparkline && (fi || (fi = new i.ParetoSparklineDialog), fi.open()));
								break;
							case "auto-generate-label":
								f("auto-generate-label"),
								v = !v;
								break;
							case "insert-slicer":
								br = p.findTable(p.getActiveRowIndex(), p.getActiveColumnIndex()),
								br && (hi || (hi = new i.InsertSlicerDialog), hi.open(br));
								break;
							case "slicer-styles":
								yt || (du(), yt = $("#format-slicer-popup").gcuipopup({
											autoHide : !0,
											showing : function (n, t) {
												$("#format-slicer-popup span.container-span").removeClass("slicer-format-item-selected");
												var u = i.util.getSelectedSlicers(p),
												r = u && u[0] && u[0].style() && u[0].style().name().toLowerCase() || "";
												r && (r = r.substr("slicerstyle".length), $("#format-slicer-popup span.slicer-format-" + r).parent().addClass("slicer-format-item-selected")),
												$("#format-slicer-popup").removeClass("hidden")
											}
										}));
								for (y in i.SlicerStyleDialog.customSlicerStyle)
									y ? (ot = y.substring(0, y.indexOf("-")), $(".custom-format-slicer").css("display", "block"), et = "slicer-format-" + ot, $("." + et).css("display", "inline-block")) : $(".custom-format-slicer").css("display", "none");
								yt.gcuipopup({
									position : {
										of : $("#slicer-styles-button"),
										my : "left top",
										at : "left bottom"
									}
								}),
								yt.gcuipopup("show");
								break;
							case "slicer-setting":
								r.slicerSettingDialog || (r.slicerSettingDialog = new i.SlicerSettingDialog),
								i.util.isSlicerSelected(p) && r.slicerSettingDialog.open();
								break
							}
							switch (o.commandName) {
							case "paste-all":
							case "paste-formulas":
							case "paste-values":
							case "paste-formatting":
								setTimeout(function () {
									$("#paste-options").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-paste"),
									$("#paste-options").find(".ui-button-text").text(i.res.ribbon.home.paste).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "freeze-panes":
							case "freeze-toprow":
							case "freeze-firstcolumn":
							case "freeze-bottomrow":
							case "freeze-lastcolumn":
								setTimeout(function () {
									$("#freeze-panes").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-freeze"),
									$("#freeze-panes").find(".ui-button-text").html(i.res.ribbon.view.freezePane).append('<span class="ui-custom-triangle"></span>')
								}, 0);
								break;
							case "format-more":
								setTimeout(function () {
									$("#number-format").find(".ui-button-text").text(i.res.ribbon.home.general)
								}, 0);
								break;
							case "set-rowheight":
							case "set-columnwidth":
							case "autofit-rowheight":
							case "default-rowheight":
							case "hide-rows":
							case "unhide-rows":
							case "set-columnwidth":
							case "autofit-columnwidth":
							case "default-columnwidth":
							case "hide-columns":
							case "unhide-columns":
							case "protect-sheet":
							case "unprotect-sheet":
							case "lock-cells":
							case "unlock-cells":
								setTimeout(function () {
									$("#format-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-format"),
									$("#format-row-column").find(".ui-button-text").text(i.res.ribbon.home.format).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "find":
							case "goto":
								setTimeout(function () {
									$("#find-goto").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-find"),
									$("#find-goto").find(".ui-button-text").text(i.res.ribbon.home.find).append('<span class="ui-custom-triangle"></span>')
								}, 0);
								break;
							case "sort-AZ":
							case "sort-ZA":
							case "custom-sort":
							case "set-filter":
							case "clear-filter":
							case "reapply-filter":
								setTimeout(function () {
									$("#sort-filter").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-sortfilter"),
									$("#sort-filter").find(".ui-button-text").html(i.res.ribbon.home.sortFilter).append('<span class="ui-custom-triangle"></span>')
								}, 0);
								break;
							case "insert-cells":
							case "insert-rows":
							case "insert-columns":
							case "insert-sheet":
								setTimeout(function () {
									$("#insert-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-insert"),
									$("#insert-row-column").find(".ui-button-text").text(i.res.ribbon.home.insert).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "delete-cells":
							case "delete-rows":
							case "delete-columns":
							case "delete-sheet":
								setTimeout(function () {
									$("#delete-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-delete"),
									$("#delete-row-column").find(".ui-button-text").text(i.res.ribbon.home.Delete).append('<span class="ui-custom-triangle2"></span>')
								}, 0);
								break;
							case "sparkline-weight-dot25":
							case "sparkline-weight-dot5":
							case "sparkline-weight-dot75":
							case "sparkline-weight-1":
							case "sparkline-weight-1dot5":
							case "sparkline-weight-2dot25":
							case "sparkline-weight-3":
							case "sparkline-weight-4dot5":
							case "sparkline-weight-6":
							case "sparkline-weight-custom":
								setTimeout(function () {
									$("#sparkline-weight").find(".ui-button-text").text(i.res.ribbon.sparkLineDesign.sparklineWeight)
								}, 0);
								break;
							case "bottom-border":
							case "top-border":
							case "left-border":
							case "right-border":
							case "no-border":
							case "all-border":
							case "outside-border":
							case "thickbox-border":
							case "bottom-double-border":
							case "thick-bottom-border":
							case "top-bottom-border":
							case "top-thick-bottom-border":
							case "top-double-bottom-border":
							case "more-border":
								setTimeout(function () {
									$("#borders").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-bottomborder")
								}, 0);
								break
							}
							switch (o.commandName) {
							case "protect-sheet":
								$(".ribbon-bar").find("#protect-sheet").addClass("hidden"),
								$(".ribbon-bar").find("#unprotect-sheet").removeClass("hidden");
								break;
							case "unprotect-sheet":
								$(".ribbon-bar").find("#protect-sheet").removeClass("hidden"),
								$(".ribbon-bar").find("#unprotect-sheet").addClass("hidden");
								break;
							case "lock-cells":
								$(".ribbon-bar").find("#lock-cells").addClass("hidden"),
								$(".ribbon-bar").find("#unlock-cells").removeClass("hidden");
								break;
							case "unlock-cells":
								$(".ribbon-bar").find("#lock-cells").removeClass("hidden"),
								$(".ribbon-bar").find("#unlock-cells").addClass("hidden");
								break
							}
						}
					});
					var l = function (n, t) {
						var i = n.find("ul");
						return n.gcuipopup({
							autoHide : !0,
							position : {
								of : t,
								my : "left top",
								at : "right top"
							},
							collision : "fit fit",
							showing : function (n, t) {
								i.removeClass("hidden")
							}
						})
					},
					p = function (n, t, i) {
						var u,
						r;
						for (b && br(b), u = 0; u < h.length; u++)
							clearTimeout(h[u]);
						h = [],
						i === undefined ? (r = setTimeout(function () {
									n.gcuipopup("show"),
									h.splice(h.indexOf(r), 1),
									b = n
								}, 0), h.push(r)) : (r = setTimeout(function () {
									n.gcuipopup("show"),
									h.splice(h.indexOf(r), 1),
									b = n
								}, i), h.push(r))
					},
					br = function (n, t) {
						var i;
						t === undefined ? (i = setTimeout(function () {
									n.children("ul").addClass("hidden"),
									d.splice(d.indexOf(i), 1),
									b = undefined
								}, 0), d.push(i)) : (i = setTimeout(function () {
									n.children("ul").addClass("hidden"),
									d.splice(d.indexOf(i), 1),
									b = undefined
								}, t), d.push(i))
					},
					h = [],
					d = [],
					b;
					$("#condition-format-popup button").on("mouseenter", function (n) {
						var t = n.currentTarget,
						r = $(t).children("span.ui-button-text-big"),
						i,
						u;
						r.length === 0 && (r = $(t).children("span.ui-button-text-small"), r.length === 0 && (r = $(t).children("span.icon-button-container"))),
						$(r).addClass("ui-state-hover"),
						i = 200;
						switch (t.name) {
						case "highlight-cells-rules":
							st || (st = l($("#highlight-cells-rules-popup"), $(t))),
							p(st, $(t), i);
							break;
						case "top-bottom-rules":
							vt || (vt = l($("#top-bottom-rules-popup"), $(t))),
							p(vt, $(t), i);
							break;
						case "data-bars":
							ct || (ct = l($("#data-bars-popup"), $(t))),
							p(ct, $(t), i);
							break;
						case "color-scales":
							et || (et = l($("#color-scales-popup"), $(t))),
							p(et, $(t), i);
							break;
						case "icon-sets":
							at || (at = l($("#icon-sets-popup"), $(t))),
							p(at, $(t), i);
							break;
						case "clear-rules":
							ft || (ft = l($("#clear-rules-popup"), $(t))),
							p(ft, $(t), i);
							break;
						case "new-rule":
						case "manage-rules":
							for (u = 0; u < h.length; u++)
								clearTimeout(h[u]);
							h = [],
							b && br(b);
							break;
						default:
						}
					});
					$("#condition-format-popup button").on("mouseleave", function (n) {
						var i = n.currentTarget,
						t = $(i).children("span.ui-button-text-big");
						t.length === 0 && (t = $(i).children("span.ui-button-text-small"), t.length === 0 && (t = $(i).children("span.icon-button-container"))),
						$(t).removeClass("ui-state-hover")
					});
					var n = function () {
						for (var n = 0; n < d.length; n++)
							clearTimeout(d[n]);
						for (d = [], n = 0; n < h.length; n++)
							clearTimeout(h[n]);
						h = [],
						b && (b.children("ul").addClass("hidden"), b = undefined),
						$("#condition-format-popup").children("ul").addClass("hidden")
					},
					w = function (n, r) {
						var e = new t.DataBarRule(5, "(Automatic)", 7, "(Automatic)", n),
						s = i.wrapper.spread.getActiveSheet(),
						h = s.getSelections(),
						u,
						f,
						o;
						for (e.ranges = h, e.gradient(r), u = s.getConditionalFormats(), f = u.count() - 1; f >= 0; f--) {
							o = u.getRule(f);
							if (o instanceof t.DataBarRule)
								if (JSON.stringify(o.ranges) === JSON.stringify(e.ranges)) {
									u.removeRule(o);
									break
								}
						}
						i.actions.doAction("addRule", i.wrapper.spread, e)
					},
					y = function (n, r, u) {
						var f,
						p = 2,
						v = "(Highest Value)",
						y = n,
						w = 1,
						l = "(Lowest Value)",
						c = r,
						h,
						a,
						o,
						s,
						e;
						if (u) {
							var d = 4,
							b = "50",
							k = r;
							c = u,
							f = new t.ThreeScaleRule(w, l, c, d, b, k, p, v, y)
						} else
							f = new t.TwoScaleRule(w, l, c, p, v, y);
						for (h = i.wrapper.spread.getActiveSheet(), a = h.getSelections(), f.ranges = a, o = h.getConditionalFormats(), s = o.count() - 1; s >= 0; s--) {
							e = o.getRule(s);
							if (e instanceof t.ThreeScaleRule && f instanceof t.ThreeScaleRule || e instanceof t.TwoScaleRule && f instanceof t.TwoScaleRule)
								if (JSON.stringify(e.ranges) === JSON.stringify(f.ranges)) {
									o.removeRule(e);
									break
								}
						}
						i.actions.doAction("addRule", i.wrapper.spread, f)
					},
					o = function (n) {
						var e = new t.IconSetRule(n),
						o = i.wrapper.spread.getActiveSheet(),
						s = o.getSelections(),
						r,
						u,
						f;
						for (e.ranges = s, r = o.getConditionalFormats(), u = r.count() - 1; u >= 0; u--) {
							f = r.getRule(u);
							if (f instanceof t.IconSetRule)
								if (JSON.stringify(f.ranges) === JSON.stringify(e.ranges)) {
									r.removeRule(f);
									break
								}
						}
						i.actions.doAction("addRule", i.wrapper.spread, e)
					};
					$("#condition-format-popup button").on("click", function (t) {
						var r = t.currentTarget;
						switch (r.name) {
						case "highlight-cells-rules":
							st || (st = l($("#highlight-cells-rules-popup"), $(r))),
							p(st, $(r));
							break;
						case "top-bottom-rules":
							vt || (vt = l($("#top-bottom-rules-popup"), $(r))),
							p(vt, $(r));
							break;
						case "data-bars":
							ct || (ct = l($("#data-bars-popup"), $(r))),
							p(ct, $(r));
							break;
						case "color-scales":
							et || (et = l($("#color-scales-popup"), $(r))),
							p(et, $(r));
							break;
						case "icon-sets":
							at || (at = l($("#icon-sets-popup"), $(r))),
							p(at, $(r));
							break;
						case "clear-rules":
							ft || (ft = l($("#clear-rules-popup"), $(r))),
							p(ft, $(r));
							break;
						case "new-rule":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function (n, t) {
									e = null
								})
							}
							e.open(0, !0, 0),
							n();
							break;
						case "manage-rules":
							iu.open(),
							n();
							break;
						case "highlight-cells-rules-greater-than":
							pt.open(0),
							n();
							break;
						case "highlight-cells-rules-less-than":
							pt.open(1),
							n();
							break;
						case "highlight-cells-rules-between":
							pt.open(2),
							n();
							break;
						case "highlight-cells-rules-equal-to":
							pt.open(3),
							n();
							break;
						case "highlight-cells-rules-text-contains":
							ru.open(),
							n();
							break;
						case "highlight-cells-rules-a-date-occurring":
							nu.open(),
							n();
							break;
						case "highlight-cells-rules-duplicate-values":
							tu.open(),
							n();
							break;
						case "highlight-cells-rules-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function (n, t) {
									e = null
								})
							}
							e.open(1, !0, undefined, undefined, undefined, 4),
							n();
							break;
						case "top-bottom-rules-top-10-items":
							kr.open(4),
							n();
							break;
						case "top-bottom-rules-bottom-10-items":
							kr.open(5),
							n();
							break;
						case "top-bottom-rules-above-average":
							gr.open(6),
							n();
							break;
						case "top-bottom-rules-below-average":
							gr.open(7),
							n();
							break;
						case "top-bottom-rules-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function (n, t) {
									e = null
								})
							}
							e.open(2, !0),
							n();
							break;
						case "gradient-fill-blue-data-bar":
							w("blue", !0),
							n();
							break;
						case "gradient-fill-green-data-bar":
							w("green", !0),
							n();
							break;
						case "gradient-fill-red-data-bar":
							w("red", !0),
							n();
							break;
						case "gradient-fill-orange-data-bar":
							w("orange", !0),
							n();
							break;
						case "gradient-fill-lightblue-data-bar":
							w("lightblue", !0),
							n();
							break;
						case "gradient-fill-purple-data-bar":
							w("purple", !0),
							n();
							break;
						case "solid-fill-blue-data-bar":
							w("blue", !1),
							n();
							break;
						case "solid-fill-green-data-bar":
							w("green", !1),
							n();
							break;
						case "solid-fill-red-data-bar":
							w("red", !1),
							n();
							break;
						case "solid-fill-orange-data-bar":
							w("orange", !1),
							n();
							break;
						case "solid-fill-lightblue-data-bar":
							w("lightblue", !1),
							n();
							break;
						case "solid-fill-purple-data-bar":
							w("purple", !1),
							n();
							break;
						case "data-bars-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function (n, t) {
									e = null
								})
							}
							e.open(0, !0, 2),
							n();
							break;
						case "gyr-color-scale":
							y("green", "yellow", "red"),
							n();
							break;
						case "ryg-color-scale":
							y("red", "yellow", "green"),
							n();
							break;
						case "gwr-color-scale":
							y("green", "white", "red"),
							n();
							break;
						case "rwg-color-scale":
							y("red", "white", "green"),
							n();
							break;
						case "bwr-color-scale":
							y("blue", "white", "red"),
							n();
							break;
						case "rwb-color-scale":
							y("red", "white", "blue"),
							n();
							break;
						case "wr-color-scale":
							y("white", "red"),
							n();
							break;
						case "rw-color-scale":
							y("red", "white"),
							n();
							break;
						case "gw-color-scale":
							y("green", "white"),
							n();
							break;
						case "wg-color-scale":
							y("white", "green"),
							n();
							break;
						case "gy-color-scale":
							y("green", "yellow"),
							n();
							break;
						case "yg-color-scale":
							y("yellow", "green"),
							n();
							break;
						case "color-scales-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function (n, t) {
									e = null
								})
							}
							e.open(0, !0, 0),
							n();
							break;
						case "3-arrows-icon-set":
							o(0),
							n();
							break;
						case "3-arrows-gray-icon-set":
							o(1),
							n();
							break;
						case "3-triangles-icon-set":
							o(2),
							n();
							break;
						case "3-traffic-lights-unrimmed-icon-set":
							o(5),
							n();
							break;
						case "3-traffic-lights-rimmed-icon-set":
							o(6),
							n();
							break;
						case "3-signs-icon-set":
							o(7),
							n();
							break;
						case "3-symbols-circled-icon-set":
							o(8),
							n();
							break;
						case "3-symbols-uncircled-icon-set":
							o(9),
							n();
							break;
						case "3-flags-icon-set":
							o(4),
							n();
							break;
						case "3-stars-icon-set":
							o(3),
							n();
							break;
						case "4-arrows-gray-icon-set":
							o(11),
							n();
							break;
						case "4-arrows-icon-set":
							o(10),
							n();
							break;
						case "4-traffic-lights-icon-set":
							o(14),
							n();
							break;
						case "red-to-black-icon-set":
							o(12),
							n();
							break;
						case "4-ratings-icon-set":
							o(13),
							n();
							break;
						case "5-arrows-gray-icon-set":
							o(16),
							n();
							break;
						case "5-arrows-icon-set":
							o(15),
							n();
							break;
						case "5-quarters-icon-set":
							o(18),
							n();
							break;
						case "5-ratings-icon-set":
							o(17),
							n();
							break;
						case "5-boxes-icon-set":
							o(19),
							n();
							break;
						case "icon-sets-more-rules":
							if (!e) {
								e = new i.NewFormattingRuleDialog;
								$(e).on("dialogClose", function (n, t) {
									e = null
								})
							}
							e.open(0, !0, 3),
							n();
							break;
						case "clear-rules-from-cells":
							i.actions.doAction("clearRule", i.wrapper.spread, !1),
							i.actions.isFileModified = !0,
							n();
							break;
						case "clear-rules-from-sheet":
							i.actions.doAction("clearRule", i.wrapper.spread, !0),
							i.actions.isFileModified = !0,
							n();
							break;
						default:
						}
					});
					$(document).on("click", function (t) {
						if ($("#condition-format-popup").height() === 0 || !$("#condition-format-popup").is(":visible"))
							return;
						var i = t.target;
						$.contains($("#condition-format-popup")[0], i) === !1 && n()
					});
					var uu,
					eu,
					fu,
					di,
					st,
					vt,
					ct,
					et,
					at,
					ft,
					ki,
					nr,
					ir,
					tr,
					c,
					yi,
					vi,
					pi,
					bi,
					wi,
					rr,
					cr,
					g,
					a,
					hr,
					lr,
					yr,
					ar,
					fr,
					ur,
					er,
					sr,
					or,
					ai,
					u,
					gt,
					ti,
					nt,
					dt,
					kt,
					bt,
					wt,
					ii,
					li,
					ci,
					rt,
					ui,
					ri,
					it,
					ut,
					tt,
					ei,
					ni,
					fi,
					e,
					oi,
					hi,
					yt,
					pt = new i.CellValueRuleFormatDialog,
					ru = new i.TextRuleFormatDialog,
					nu = new i.DateOccurringFormatDialog,
					tu = new i.DuplicateValuesFormatDialog,
					kr = new i.Top10RuleFormatDialog,
					gr = new i.AverageRuleFormatDialog,
					iu = new i.FormatRulesManagerDialog;
					tf(),
					wr(),
					ht(),
					pr(),
					ot()
				}
				function f(n) {
					$("#" + n).find(".ui-icon").toggleClass("gcui-ribbon-checked").toggleClass("gcui-ribbon-unchecked")
				}
				function s(n) {
					return $("#" + n).find(".ui-icon").hasClass("gcui-ribbon-checked")
				}
				function o(n, t) {
					var i = $("#" + n).find(".ui-icon").removeClass("gcui-ribbon-checked").removeClass("gcui-ribbon-unchecked");
					t ? i.addClass("gcui-ribbon-checked") : i.addClass("gcui-ribbon-unchecked")
				}
				function ef() {
					var t = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72],
					i = $("#font-size").find(".ui-button-text"),
					r = Number(i.text()),
					n;
					if (r >= t[t.length - 1])
						return;
					for (n = 0; n < t.length; n++) {
						if (r < t[n])
							return i.text(t[n]), t[n];
						if (r == t[n])
							return i.text(t[n + 1]), t[n + 1]
					}
				}
				function nf() {
					var t = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72],
					i = $("#font-size").find(".ui-button-text"),
					r = Number(i.text()),
					n;
					if (r <= t[0])
						return;
					for (n = t.length - 1; n > 0; n--) {
						if (r > t[n])
							return i.text(t[n]), t[n];
						if (r == t[n])
							return i.text(t[n - 1]), t[n - 1]
					}
				}
				function tf() {
					$("#font-family").addClass("gcui-ribbon-fontfamily"),
					$("#font-size").addClass("gcui-ribbon-fontsize"),
					$("#number-format").addClass("gcui-ribbon-number"),
					$("#paste-options").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-paste"),
					$("#paste-options").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'),
					$("#freeze-panes").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-freeze"),
					$("#freeze-panes").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'),
					$("#find-goto").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-find"),
					$("#find-goto").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'),
					$("#sort-filter").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-sortfilter"),
					$("#sort-filter").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'),
					$("#condition-format").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-conditionalformat"),
					$("#insert-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-insert"),
					$("#insert-row-column").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'),
					$("#delete-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-delete"),
					$("#delete-row-column").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'),
					$("#format-row-column").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-format"),
					$("#format-row-column").find(".ui-button-text").append('<span class="ui-custom-triangle2"></span>'),
					$("#calculate-option").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-calculateoption"),
					$("#calculate-option").find(".ui-button-text").append('<span class="ui-custom-triangle"></span>'),
					$("#borders").find(".ui-icon").removeClass().addClass("ui-button-icon-primary ui-icon gcui-ribbon-bottomborder"),
					$("#borders").find(".ui-button-text").text("borders"),
					$(".gcui-ribbon-bigbutton").each(function (n, t) {
						var i = $(t);
						i.data("button-size") ? i.width(i.data("button-size")) : i.width(i.width() + 6)
					}),
					$("#showhide-vgridline").parents(".gcui-ribbon-list").addClass("gcui-ribbon-marginright"),
					$("#showhide-columnheader").parents(".gcui-ribbon-list").addClass("gcui-ribbon-marginright")
				}
				function wr() {
					$("a[href='#sparklineTab']").is(":visible") && $(".ribbon-bar").gcuiribbon("setTabPageVisible", "sparklineTab", !1)
				}
				function ou() {
					$(".ribbon-bar").gcuiribbon("setTabPageVisible", "sparklineTab", !0),
					$(".ribbon-bar").gcuitabs("select", "sparklineTab")
				}
				function su() {
					$(".ribbon-bar").gcuiribbon("setTabPageVisible", "formulaSparklineTab", !0),
					$(".ribbon-bar").gcuitabs("select", "formulaSparklineTab")
				}
				function pr() {
					$("a[href='#formulaSparklineTab']").is(":visible") && $(".ribbon-bar").gcuiribbon("setTabPageVisible", "formulaSparklineTab", !1)
				}
				function ht() {
					$("a[href='#tableTab']").is(":visible") && $(".ribbon-bar").gcuiribbon("setTabPageVisible", "tableTab", !1)
				}
				function au() {
					$(".ribbon-bar").gcuiribbon("setTabPageVisible", "tableTab", !0),
					$(".ribbon-bar").gcuitabs("select", "tableTab")
				}
				function l(n, t) {
					$(n).button("option", "label", t)
				}
				function ri() {
					var n = i.wrapper.spread.undoManager();
					n.canUndo() ? ($(".quick-access-bar").find('[data-action="undo"]').prop("disabled", !1), $(".quick-access-bar").find('[data-action="undo"]').fadeTo("faster", 1)) : ($(".quick-access-bar").find('[data-action="undo"]').prop("disabled", !0), $(".quick-access-bar").find('[data-action="undo"]').fadeTo("faster", .2)),
					n.canRedo() ? ($(".quick-access-bar").find('[data-action="redo"]').prop("disabled", !1), $(".quick-access-bar").find('[data-action="redo"]').fadeTo("faster", 1)) : ($(".quick-access-bar").find('[data-action="redo"]').prop("disabled", !0), $(".quick-access-bar").find('[data-action="redo"]').fadeTo("faster", .2))
				}
				function lt() {
					var f = i.wrapper.spread.getActiveSheet(),
					n = f.getActualStyle(f.getActiveRowIndex(), f.getActiveColumnIndex()),
					e,
					r,
					o,
					u,
					t;
					$(".ribbon-bar").gcuiribbon("setButtonsChecked", {
						"font-weight" : !1,
						"font-italic" : !1,
						"font-underline" : !1
					});
					if (n && n.font) {
						t = i.util.parseFont(n.font),
						t.fontWeight !== "normal" && $(".ribbon-bar").gcuiribbon("setButtonChecked", "font-weight", !0),
						t.fontStyle !== "normal" && $(".ribbon-bar").gcuiribbon("setButtonChecked", "font-italic", !0),
						t.fontSize && l("#font-size", t.fontSize.substring(0, t.fontSize.length - 2));
						if (t.fontFamily) {
							e = t.fontFamily.split(","),
							r = e[0],
							r.match(/^["'].*["']$/) && (r = r.substring(1, r.length - 1)),
							o = new RegExp("^(.*,s*)?[\"']?" + r + "[\"']?s*(,.*)?$");
							for (u in i.res.ribbon.fontFamilies)
								if (o.test(i.res.ribbon.fontFamilies[u].name)) {
									r = i.res.ribbon.fontFamilies[u].text;
									break
								}
							l("#font-family", r)
						}
					} else
						t = i.util.parseFont(i.res.defaultFont), l("#font-size", t.fontSize.substring(0, t.fontSize.length - 2)), l("#font-family", t.fontFamily);
					n && n.textDecoration && n.textDecoration & 1 && $(".ribbon-bar").gcuiribbon("setButtonChecked", "font-underline", !0),
					$(".ribbon-bar").gcuiribbon("setButtonsChecked", {
						"left-align" : !1,
						"center-align" : !1,
						"right-align" : !1
					});
					if (n && n.hAlign !== undefined)
						switch (n.hAlign) {
						case 0:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "left-align", !0);
							break;
						case 1:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "center-align", !0);
							break;
						case 2:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "right-align", !0);
							break
						}
					$(".ribbon-bar").gcuiribbon("setButtonsChecked", {
						"top-align" : !1,
						"middle-align" : !1,
						"bottom-align" : !1
					});
					if (n && n.vAlign !== undefined)
						switch (n.vAlign) {
						case 0:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "top-align", !0);
							break;
						case 1:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "middle-align", !0);
							break;
						case 2:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "bottom-align", !0);
							break
						}
					n && n.wordWrap ? $(".ribbon-bar").gcuiribbon("setButtonChecked", "wrap-text", !0) : $(".ribbon-bar").gcuiribbon("setButtonChecked", "wrap-text", !1)
				}
				function hi() {
					var r = i.wrapper.spread.getActiveSheet(),
					n = r.getActualStyle(r.getActiveRowIndex(), r.getActiveColumnIndex()),
					u,
					t;
					if (n && n.formatter && n.formatter !== "general") {
						for (u in i.res.commonFormats) {
							t = i.res.commonFormats[u];
							if (t.format === n.formatter) {
								l("#number-format", t.label);
								return
							}
						}
						l("#number-format", i.res.customFormat)
					} else
						l("#number-format", i.res.generalFormat)
				}
				function bt() {
					for (var r = i.wrapper.spread.getActiveSheet(), u = r.getSelections(), t, n = 0; n < u.length; n++) {
						t = r.getSpans(u[n]);
						if (t.length > 0) {
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "merge-center", !0);
							return
						}
					}
					$(".ribbon-bar").gcuiribbon("setButtonChecked", "merge-center", !1)
				}
				function oi() {
					var n = i.wrapper.spread.getActiveSheet(),
					e = n.getActiveRowIndex(),
					f = n.getActiveColumnIndex(),
					s,
					u,
					r;
					if (n.getSparkline(n.getActiveRowIndex(), n.getActiveColumnIndex())instanceof t.Sparkline) {
						ou(),
						u = n.getSparkline(n.getActiveRowIndex(), n.getActiveColumnIndex()),
						$(".ribbon-bar").gcuiribbon("setButtonChecked", "sparkline-type-line", !1),
						$(".ribbon-bar").gcuiribbon("setButtonChecked", "sparkline-type-column", !1),
						$(".ribbon-bar").gcuiribbon("setButtonChecked", "sparkline-type-winloss", !1);
						switch (u.sparklineType()) {
						case 0:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "sparkline-type-line", !0);
							break;
						case 1:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "sparkline-type-column", !0);
							break;
						case 2:
							$(".ribbon-bar").gcuiribbon("setButtonChecked", "sparkline-type-winloss", !0);
							break
						}
						r = u.setting(),
						o("sparkline-high-point", r.showHigh()),
						o("sparkline-low-point", r.showLow()),
						o("sparkline-first-point", r.showFirst()),
						o("sparkline-last-point", r.showLast()),
						o("sparkline-negative-point", r.showNegative()),
						o("sparkline-marker-point", r.showMarkers())
					} else (s = i.util.parseFormulaSparkline(e, f)) ? su() : (pr(), wr())
				}
				function b() {
					var r = i.wrapper.spread.getActiveSheet(),
					n,
					u;
					r.findTable(r.getActiveRowIndex(), r.getActiveColumnIndex())instanceof t.SheetTable ? (au(), $(".ribbon-bar").gcuiribbon("setButtonDisabled", "insert-table", !0), n = r.findTable(r.getActiveRowIndex(), r.getActiveColumnIndex()), o("table-header-row", n.showHeader()), o("table-total-row", n.showFooter()), o("table-banded-rows", n.bandRows()), o("table-first-column", n.highlightFirstColumn()), o("table-last-column", n.highlightLastColumn()), o("table-banded-columns", n.bandColumns()), o("table-filter-button", n.filterButtonVisible()), $(".designer-table-name").val(n.name()), u = n.style(), si = u && u.name().toLowerCase() || "") : (ht(), $(".ribbon-bar").gcuiribbon("setButtonDisabled", "insert-table", !1))
				}
				function ii() {
					var n = i.wrapper.spread.getActiveSheet();
					o("showhide-columnheader", n.getColumnHeaderVisible()),
					o("showhide-rowheader", n.getRowHeaderVisible()),
					o("showhide-hgridline", n.getGridlineOptions().showHorizontalGridline),
					o("showhide-vgridline", n.getGridlineOptions().showVerticalGridline),
					o("showhide-tabstrip", i.wrapper.spread.tabStripVisible()),
					o("showhide-newtab", i.wrapper.spread.newTabVisible())
				}
				function ti() {
					var n = i.wrapper.spread.getActiveSheet();
					n.getIsProtected() ? ($(".ribbon-bar").find("#protect-sheet").addClass("hidden"), $(".ribbon-bar").find("#unprotect-sheet").removeClass("hidden")) : ($(".ribbon-bar").find("#protect-sheet").removeClass("hidden"), $(".ribbon-bar").find("#unprotect-sheet").addClass("hidden")),
					n.getCell(n.getActiveRowIndex(), n.getActiveColumnIndex()).locked() ? ($(".ribbon-bar").find("#lock-cells").addClass("hidden"), $(".ribbon-bar").find("#unlock-cells").removeClass("hidden")) : ($(".ribbon-bar").find("#lock-cells").removeClass("hidden"), $(".ribbon-bar").find("#unlock-cells").addClass("hidden"))
				}
				function k() {
					var n = i.wrapper.spread.getActiveSheet();
					$(".statusBar").find(".statusbar-zoom-value").text(Math.round(n.zoom() * 100) + "%")
				}
				function dr() {
					var r = $("#template-design-mode"),
					f = r.find("span.ui-button-text"),
					u = $("#data-binding-setting-indicator"),
					e = $(".designer-data-binding-icon"),
					t = $(".design-mode-panel"),
					n;
					sf(),
					f.removeClass("template-design-mode-checked"),
					u.attr("hidden", "hidden"),
					e.unbind("click.indicator"),
					dt && (n = i.wrapper.spread.getActiveSheet(), n.setDataSource(dt)),
					t.is(":visible") && t.sliderpanel("close"),
					r.data("checked", !1),
					hr()
				}
				function hu() {
					$(".custom-cell-styles-preview").empty(),
					p(i.CellStyleDialog.existedCustomCellStyle, $(".custom-cell-styles-preview"), !0),
					yf()
				}
				function nu() {
					var n = i.wrapper.spread,
					u,
					t,
					f,
					r;
					$(".custom-cell-styles-preview").children().remove(),
					$(".good-bad-style-preview").children().remove(),
					$(".data-model-style-preview").children().remove(),
					$(".titles-headings-preview").children().remove(),
					$(".themed-preview").children().remove(),
					$(".number-format-preview").children().remove(),
					i.CellStyleDialog.existedCustomCellStyle = {},
					i.CellStyleDialog.buildInCellStyle = {};
					var e = lu(n),
					c = of(n),
					s = re(n),
					o = ue(n),
					h = fe(n);
					for (ne(e, c, s, o, h), u = n.getNamedStyles(), t = 0; t < u.length; t++)
						f = u[t].name, f && (r = f.toLowerCase(), r.substr(0, 9) === "__builtin" || i.CellStyleDialog.buildInCellStyle.hasOwnProperty(r) || (i.CellStyleDialog.existedCustomCellStyle[r] = u[t]));
					wt(i.CellStyleDialog.existedCustomCellStyle) && ($(".cell-style-custom-li").addClass("hidden"), $(".custom-cell-styles-preview").parent().addClass("hidden")),
					p(i.res.cellStylesDialog.goodBadAndNeutralContent, $(".good-bad-style-preview"), !1, e),
					p(i.res.cellStylesDialog.dataAndModelContent, $(".data-model-style-preview"), !1, c),
					p(i.res.cellStylesDialog.titlesAndHeadingsContent, $(".titles-headings-preview"), !1, s),
					p(i.res.cellStylesDialog.themedCellStyleContent, $(".themed-preview"), !1, o),
					p(i.res.cellStylesDialog.numberFormatContent, $(".number-format-preview"), !1, h),
					cf()
				}
				function lu(n) {
					for (var f = ["normal", "bad", "good", "neutral"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]),
						r = f[i];
						if (u)
							t[r] = u;
						else
							switch (r) {
							case "normal":
								t.normal = {
									name : "Normal"
								};
								break;
							case "bad":
								t.bad = {
									name : "Bad",
									backColor : "#FFC7CE",
									foreColor : "#9C0006"
								};
								break;
							case "good":
								t.good = {
									name : "Good",
									backColor : "#C6EFCE",
									foreColor : "#006100"
								};
								break;
							case "neutral":
								t.neutral = {
									name : "Neutral",
									backColor : "#FFEB9C",
									foreColor : "#9C6500"
								};
								break;
							default:
								break
							}
					}
					return t
				}
				function of(n) {
					for (var f = ["calculation", "check cell", "explanatory text", "input", "linked cell", "note", "output", "warning text"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]),
						r = f[i];
						if (u)
							t[r] = u;
						else
							switch (r) {
							case "calculation":
								t.calculation = {
									name : "Calculation",
									backColor : "#F2F2F2",
									foreColor : "#FCA957",
									border : "thin solid black",
									font : "bold 13px Arial"
								};
								break;
							case "check cell":
								t["check cell"] = {
									name : "Check Cell",
									backColor : "#A5A5A5",
									foreColor : "#FFFFFF",
									border : "medium double black",
									font : "bold 13px Arial"
								};
								break;
							case "explanatory text":
								t["explanatory text"] = {
									name : "Explanatory Text",
									foreColor : "#7F7F7F",
									font : "italic bold 13px Arial"
								};
								break;
							case "input":
								t.input = {
									name : "Input",
									foreColor : "#3F3F76",
									backColor : "#FFCC99",
									border : "thin solid black",
									font : "bold 13px Arial"
								};
								break;
							case "linked cell":
								t["linked cell"] = {
									name : "Linked Cell",
									foreColor : "#FCA957",
									borderBottom : "medium double #FDD3A9",
									font : "bold 13px Arial"
								};
								break;
							case "note":
								t.note = {
									name : "Note",
									backColor : "#FFFFCC",
									border : "thin solid black",
									font : "13px Arial"
								};
								break;
							case "output":
								t.output = {
									name : "Output",
									backColor : "#F2F2F2",
									border : "thin solid black",
									font : "bold 13px Arial"
								};
								break;
							case "warning text":
								t["warning text"] = {
									name : "Warning Text",
									foreColor : "#FF3030",
									font : "13px Arial"
								};
								break;
							default:
								break
							}
					}
					return t
				}
				function re(n) {
					for (var f = ["heading 1", "heading 2", "heading 3", "heading 4", "title", "total"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]),
						r = f[i];
						if (u)
							t[r] = u;
						else
							switch (r) {
							case "heading 1":
								t["heading 1"] = {
									name : "Heading 1",
									foreColor : "#1F497D",
									font : "bold 17px Arial",
									borderBottom : "medium solid #4F81BD"
								};
								break;
							case "heading 2":
								t["heading 2"] = {
									name : "Heading 2",
									foreColor : "#1F497D",
									font : "bold 15px Arial",
									borderBottom : "medium solid #A4BDDD"
								};
								break;
							case "heading 3":
								t["heading 3"] = {
									name : "Heading 3",
									foreColor : "#1F497D",
									font : "bold 13px Arial",
									borderBottom : "thin solid #93B1D7"
								};
								break;
							case "heading 4":
								t["heading 4"] = {
									name : "Heading 4",
									foreColor : "#1F497D",
									font : "bold 13px Arial"
								};
								break;
							case "title":
								t.title = {
									name : "Title",
									foreColor : "#1F497D",
									font : "bold 17px Century"
								};
								break;
							case "total":
								t.total = {
									name : "Total",
									font : "bold 13px Arial",
									borderTop : "thin solid #1F497D",
									borderBottom : "medium double #1F497D"
								};
								break;
							default:
								break
							}
					}
					return t
				}
				function ue(n) {
					var s = {},
					l = i.res.cellStylesDialog.themedCellStyleContent,
					f = "black",
					r,
					h,
					c,
					u,
					t,
					e,
					o;
					for (r in l)
						h = r.toLowerCase(), c = n.getNamedStyle(r), c ? s[h] = c : (t = r.split("-"), t.length === 1 ? (e = t[0].substr(t[0].length - 1), u = "Accent " + e + " 0", f = "white") : t.length === 2 && (e = t[1].substr(t[1].length - 1), o = 100 - parseInt(t[0]), u = "Accent " + e + " " + o + "%", f = o > 50 ? "black" : "white"), u = i.ColorHelper.parse(u, i.wrapper.spread.getActiveSheet().currentTheme().colors()), s[h] = {
									name : r,
									backColor : u.color,
									foreColor : f
								});
					return s
				}
				function fe(n) {
					for (var f = ["comma", "comma [0]", "currency", "currency [0]", "percent"], t = {}, u, r, i = 0; i < f.length; i++) {
						u = n.getNamedStyle(f[i]),
						r = f[i];
						if (u)
							t[r] = u;
						else
							switch (r) {
							case "comma":
								t.comma = {
									name : "Comma",
									formatter : "_(* #,##0.00_);_(* (#,##0.00);_(*'-'??_);_(@_)"
								};
								break;
							case "comma [0]":
								t["comma [0]"] = {
									name : "Comma [0]",
									formatter : "_(* #,##0_);_(* (#,##0);_(*'-'_);_(@_)"
								};
								break;
							case "currency":
								t.currency = {
									name : "Currency",
									formatter : "_('$'* #,##0.00_);_('$'* (#,##0.00);_('$'*'-'??_);_(@_)"
								};
								break;
							case "currency [0]":
								t["currency [0]"] = {
									name : "Currency [0]",
									formatter : "_('$'* #,##0_);_('$'* (#,##0);_('$'*'-'_);_(@_)"
								};
								break;
							case "percent":
								t.percent = {
									name : "Percent",
									formatter : "0%"
								};
								break;
							default:
								break
							}
					}
					return t
				}
				function ne() {
					for (var e = [], s, u, f, h, n, o, r = 0; r < arguments.length - 0; r++)
						e[r] = arguments[r + 0];
					for (s = e.length, u = 0; u < s; u++) {
						f = e[u];
						for (h in f)
							n = f[h], n instanceof t.Style || te(n), o = n.name.toLowerCase(), i.CellStyleDialog.buildInCellStyle[o] = n
					}
				}
				function te(n) {
					n.borderTop && (n.borderTop = c(n.borderTop)),
					n.borderBottom && (n.borderBottom = c(n.borderBottom)),
					n.borderLeft && (n.borderLeft = c(n.borderLeft)),
					n.borderRight && (n.borderRight = c(n.borderRight)),
					n.border && (n.borderTop = c(n.border), n.borderBottom = c(n.border), n.borderLeft = c(n.border), n.borderRight = c(n.border))
				}
				function c(n) {
					if (!n)
						return undefined;
					var i = n.split(" "),
					r = 1,
					u = "black";
					if (i.length === 3)
						return (i[0] === "thin" || i[0] === "medium" || i[0] === "thick") && (r = t.LineStyle[i[0]]), i[1] !== "solid" && (r = t.LineStyle[i[1]]), u = i[2], new t.LineBorder(u, r)
				}
				function ru(n, r) {
					var e = {
						borderTop : undefined,
						borderBottom : undefined,
						borderLeft : undefined,
						borderRight : undefined,
						border : undefined
					},
					u,
					f;
					$.extend(n, r);
					for (u in r)
						(u === "backColor" || u === "foreColor") && r[u] ? (f = i.ColorHelper.parse(r[u], i.wrapper.spread.getActiveSheet().currentTheme().colors()), n[u] = f.color) : u === "hAlign" && r[u] && (n.textAlign = t.HorizontalPosition[r[u]]);
					n.font && n.themeFont && (n.font = t.StyleHelper.composeFont(n.font, i.util.getThemeFont(n.themeFont))),
					n.borderBottom && (n.borderBottom = h(n.borderBottom)),
					n.borderLeft && (n.borderLeft = h(n.borderLeft)),
					n.borderRight && (n.borderRight = h(n.borderRight)),
					n.borderTop && (n.borderTop = h(n.borderTop)),
					n.textDecoration && (n.textDecoration = i.util.toCSSTextDecoration(n.textDecoration))
				}
				function h(n) {
					var r,
					o,
					e,
					s,
					f,
					u;
					if (typeof n == "string")
						return n;
					r = [],
					o = ["dotted", "solid", "double", "dashed"];
					if (n.style) {
						for (e = t.LineStyle[n.style], e = e.toLowerCase(), r[0] = ie(n.style) + "px", u = 0; u < o.length; u++)
							e.indexOf(o[u]) !== -1 && (r[1] = o[u]);
						r[1] || (r[1] = e.indexOf("dot") !== -1 ? "dotted" : e.indexOf("dash") !== -1 ? "dashed" : "solid")
					}
					for (n.color ? (s = i.ColorHelper.parse(n.color, i.wrapper.spread.getActiveSheet().currentTheme().colors()), r[2] = s.color) : (s = i.ColorHelper.parse("Text 1", i.wrapper.spread.getActiveSheet().currentTheme().colors()), r[2] = s.color), f = "", r[0] === "thin" && r[1] === "double" && (r[0] = undefined), u = 0; u < r.length; u++)
						r[u] && (f = f + r[u] + " ");
					return f = f.substring(0, f.lastIndexOf(" "))
				}
				function ie(n) {
					switch (n) {
					case 9:
					case 1:
					case 3:
					case 4:
					case 7:
					case 11:
						return 1;
					case 2:
					case 10:
					case 12:
					case 8:
					case 13:
						return 2;
					case 5:
					case 6:
						return 3
					}
					return 0
				}
				function p(n, t, r, u) {
					var s,
					f;
					if (r) {
						if (!wt(n)) {
							$(".cell-style-custom-li").removeClass("hidden"),
							$(".custom-cell-styles-preview").parent().removeClass("hidden");
							for (f in n) {
								var o = n[f].name,
								e = $("<span></span>").attr({
										title : o,
										"data-name" : o
									}).addClass("cell-style-outer-span"),
								h = $("<div></div>").text(o).addClass("custom-cell-style-symbol").appendTo(e);
								e.appendTo(t),
								s = {},
								ru(s, n[f]),
								yt(s, h),
								ni(o, i.wrapper.spread)
							}
						}
					} else
						for (f in n) {
							var c = f.toLowerCase(),
							e = $("<span></span>").attr({
									title : f,
									"data-name" : f
								}).addClass("cell-style-outer-span"),
							h = $("<div></div>").text(n[f]).addClass("cell-style-symbol").appendTo(e);
							e.appendTo(t),
							u && yt(u[c], h)
						}
				}
				function wt(n) {
					for (var t in n)
						return !1;
					return !0
				}
				function yt(n, r) {
					var u;
					n && (n.backColor && (u = i.ColorHelper.parse(n.backColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), r.css("background-color", u.color)), n.border && r.css("border", n.border), n.foreColor && (u = i.ColorHelper.parse(n.foreColor, i.wrapper.spread.getActiveSheet().currentTheme().colors()), r.css("color", u.color)), n.font && (n.themeFont && (n.font = t.StyleHelper.composeFont(n.font, i.util.getThemeFont(n.themeFont))), r.css("font", n.font)), n.borderLeft && r.css("border-left", h(n.borderLeft)), n.borderRight && r.css("border-right", h(n.borderRight)), n.borderBottom && r.css("border-bottom", h(n.borderBottom)), n.borderTop && r.css("border-top", h(n.borderTop)), n.textAlign && r.css("text-align", n.textAlign), n.textDecoration && (isNaN(n.textDecoration) ? r.css("text-decoration", n.textDecoration) : r.css("text-decoration", i.util.toCSSTextDecoration(n.textDecoration))))
				}
				function kr(n) {
					var r = n.srcElement || n.target,
					i = r.parentElement,
					t = i;
					$(t).addClass("ui-state-hover")
				}
				function lr(n) {
					var r = n.srcElement || n.target,
					i = r.parentElement,
					t = i;
					$(t).removeClass("ui-state-hover")
				}
				function cr(n) {
					var e = n.srcElement || n.target,
					u = e.parentElement,
					r = u,
					f = i.wrapper.spread,
					t;
					t = r.title ? r.title : r.innerText,
					ni(t, f),
					i.actions.doAction("setStyleByName", i.wrapper.spread, t),
					$("#cell-styles-popup").gcuipopup("hide")
				}
				function ni(n, t) {
					var r = n.toLowerCase();
					t.getNamedStyle(n) || (i.CellStyleDialog.buildInCellStyle.hasOwnProperty(r) ? i.actions.doAction("addNamedStyle", t, i.CellStyleDialog.buildInCellStyle[r]) : i.CellStyleDialog.existedCustomCellStyle.hasOwnProperty(r) && i.actions.doAction("addNamedStyle", t, i.CellStyleDialog.existedCustomCellStyle[r]))
				}
				function ar(n) {
					var u = n.srcElement || n.target,
					r;
					et = u.parentElement,
					r = i.wrapper.spread.getActiveSheet(),
					e = $(et).attr("data-name").toLowerCase(),
					$("#cellstyle-menu-container").css({
						position : "absolute",
						top : n.offsetY,
						left : n.offsetX
					}),
					$(".cellstyle-menu").removeClass("hidden"),
					$(".cellstyle-menu").position({
						my : "left top",
						of : n
					}),
					t.util.cancelDefault(n)
				}
				function cf() {
					var n;
					$(".new-cell-style-text").unbind(),
					$(".cell-style-symbol").unbind(),
					$(".cellstyle-menu").menu({
						select : br
					}),
					$(".cell-style-symbol").bind("mouseenter", kr),
					$(".cell-style-symbol").bind("mouseout", lr),
					$(".cell-style-symbol").bind("click", cr),
					$(".cell-style-symbol").bind("contextmenu", ar),
					$(".new-cell-style-text").bind("mouseout", function () {
						$(".new-cell-style-text").removeClass("ui-state-hover")
					}),
					$(".new-cell-style-text").bind("mouseenter", function () {
						$(".new-cell-style-text").addClass("ui-state-hover")
					}),
					$(".new-cell-style-text").bind("click", function () {
						$("#cell-styles-popup").gcuipopup("hide"),
						n === undefined && (n = new i.CellStyleDialog),
						n.open()
					}),
					$(document).bind("mouseup", function (n) {
						n.button !== 2 && ($(".cellstyle-menu").hasClass("hidden") || $(".cellstyle-menu").addClass("hidden"))
					})
				}
				function yf() {
					$(".custom-cell-style-symbol").unbind(),
					$(".custom-cell-style-symbol").bind("mouseenter", kr),
					$(".custom-cell-style-symbol").bind("mouseout", lr),
					$(".custom-cell-style-symbol").bind("click", cr),
					$(".custom-cell-style-symbol").bind("contextmenu", ar)
				}
				function vr() {
					var o = 1,
					f = 21,
					e = 28,
					r = 11,
					u = 7,
					n;
					it("custom-preview", "custom", u),
					it("light-preview", "light", f),
					it("medium-preview", "medium", e),
					it("dark-preview", "dark", r),
					$(".table-format-preview").mouseenter(function (n) {
						var u = n.srcElement || n.target,
						r = u.parentElement,
						f = r,
						i = f.className.split(" "),
						t = i[0];
						t.indexOf("container-span") !== -1 && (t = i[1]),
						$("." + t).addClass("ui-state-hover")
					}),
					$(".table-format-preview").mouseout(function (n) {
						var u = n.srcElement || n.target,
						r = u.parentElement,
						f = r,
						i = f.className.split(" "),
						t = i[0];
						t.indexOf("container-span") !== -1 && (t = i[1]),
						$("." + t).removeClass("ui-state-hover")
					}),
					$(".table-format-preview").mouseup(function (n) {
						for (var s = i.wrapper.spread, a = n.srcElement || n.target, l = a, c = l.className, u, o = c.split(" "), e, f, h, r = 0; r < o.length; r++)
							if (o[r].indexOf("table-format") === -1) {
								u = o[r];
								break
							}
						if (u.indexOf("custom") === -1)
							i.actions.doAction("formatAsTable", s, t.TableStyles[u].call(t.TableStyles)), b();
						else {
							e = i.FormatTableDialog.customTableStyle;
							for (f in e)
								h = f.substring(0, f.indexOf("-")), h === u && (i.actions.doAction("formatAsTable", s, e[f]), b())
						}
						$("#format-table-popup").gcuipopup("hide")
					}),
					$(".new-table-style").click(function () {
						$("#format-table-popup").gcuipopup("hide"),
						n === undefined ? n = new i.FormatTableDialog : n.refresh(),
						n.open()
					}).mouseenter(function () {
						$(this).css("background", "#DBDBDB")
					}).mouseleave(function () {
						$(this).css("background", "white")
					})
				}
				function kf(n, t) {
					var s = i.FormatTableDialog.customTableStyle,
					h = 7,
					e = "custom",
					r = "table-format-",
					u = r + e + t,
					f = n.substring(n.indexOf("-") + 1),
					o = n.substring(0, n.indexOf("-"));
					$("." + u).attr("title", f)
				}
				function it(n, t, i) {
					for (var s = "table-format-", e = "table-format-preview", f, u, o, r = 1; r <= i; r++)
						u = s + t + r, f = t === "custom" ? $("<span></span>").addClass(u + " " + e + " " + t + r) : $("<span></span>").attr("title", t + r).addClass(u + " " + e + " " + t + r), o = $("<span></span>").append(f).addClass(u + "-container container-span"), $("<button></button>").append(o).addClass(u + "-button " + e + "-button").appendTo($("." + n))
				}
				function df() {
					ri(),
					lt(),
					hi(),
					bt(),
					oi(),
					b(),
					ii(),
					ti(),
					ot(),
					nu(),
					dr(),
					pt = !1
				}
				function uu(n) {
					var u = n.sheet.getValue(n.row, n.col),
					r = n.validator,
					f = r.errorTitle,
					t = r.errorMessage;
					f || (f = i.res.title),
					r.showErrorMessage ? (n.validationResult = 0, r.errorStyle == 0 && (t || (t = i.res.dataValidationDialog.errorMessage1), i.MessageBox.show(t, f, 3, 1, function (t, i) {
								switch (i) {
								case 1:
									n.sheet.setActiveCell(n.row, n.col),
									n.sheet.setValue(n.row, n.col, u),
									n.sheet.startEdit(!0);
									break;
								case 4:
									n.sheet.setValue(n.row, n.col, u);
									break
								}
							})), r.errorStyle == 1 && (t || (t = i.res.dataValidationDialog.errorMessage2), i.MessageBox.show(t, f, 2, 2, function (t, i) {
								switch (i) {
								case 2:
									break;
								case 3:
									n.sheet.setActiveCell(n.row, n.col),
									n.sheet.setValue(n.row, n.col, u),
									n.sheet.startEdit(!0);
									break;
								case 4:
									n.sheet.setValue(n.row, n.col, u);
									break
								}
							})), r.errorStyle == 2 && (t || (t = i.res.dataValidationDialog.errorMessage1), i.MessageBox.show(t, f, 1, 1, function (t, i) {
								switch (i) {
								case 1:
									break;
								case 4:
									n.sheet.setValue(n.row, n.col, u);
									break
								}
							}))) : n.validationResult = 0
				}
				function iu() {
					var o,
					e,
					r = i.wrapper.spread,
					u,
					f;
					r.bind(t.Events.EnterCell, function (n, t) {
						o = !0,
						setTimeout(function () {
							o && (o = !1, lt(), hi(), oi(), b(), ti(), ot(), gr())
						}, 100)
					}),
					r.bind(t.Events.SelectionChanged, function (n, t) {
						e = !0,
						setTimeout(function () {
							e && (e = !1, bt())
						}, 100)
					}),
					u = i.wrapper.spread.undoManager(),
					f = u.changed,
					u.changed = function () {
						ri(),
						f && f.apply(u, arguments)
					},
					r.bind(t.Events.ButtonClicked, function (n, r) {
						var f = i.wrapper.spread.getSheetFromName(r.sheetName),
						e = f.getCellType(r.row, r.col),
						u;
						e instanceof t.HyperLinkCellType && (u = f.getValue(r.row, r.col, 3).toString(), app.openUrl(u, function (n) {
								n || i.MessageBox.show("Open URL failed.", i.res.title, 3)
							}))
					}),
					r.bind(t.Events.ActiveSheetChanged, function (n, t) {
						ii(),
						k()
					}),
					r.bind(t.Events.EditorStatusChanged, function (n, t) {
						var r = $(".statusBar").find(".statusbar-edit-status");
						switch (t.newStatus) {
						case 2:
							r.text(i.res.statusBar.edit);
							break;
						case 1:
							r.text(i.res.statusBar.enter);
							break;
						case 0:
							r.text(i.res.statusBar.ready);
							break
						}
					}),
					r.bind(t.Events.UserZooming, function (n, t) {
						k()
					}),
					r.bind(t.Events.ValidationError, function (n, t) {
						uu(t)
					}),
					$(".designer-table-name").blur(function () {
						i.actions.doAction("setTableName", i.wrapper.spread, $(this).val())
					}),
					$(window).bind("compositionstart", function () {
						var t = window.gcGlobal,
						n;
						if (t._eventSuspended > 0)
							return;
						n = t.activeElement,
						n && n.startEdit && n.startEdit(!0)
					}),
					r.bind(n.Sheets.Events.SlicerChanged, function (n, t) {
						ff(t.sheet, t.slicer, t.propertyName)
					})
				}
				function bu() {
					var l = t.Events.SelectionChanged + ".bindingPath",
					c = "click.indicator",
					h = "click.ok",
					a = "click.cancel",
					p = t.Events.TopRowChanged + ".bindingPath",
					y = "click.autoGenetateColumns",
					v = "click.dataFieldType",
					u = i.wrapper.spread,
					r = $(".designer-data-binding-icon"),
					n = $(".ok-table-binding-button"),
					f = $(".cancel-table-binding-button"),
					s = i.wrapper.spread.getActiveSheet(),
					o = $(".auto-generate-columns"),
					e = $(".data-binding-celltype-button");
					hr(),
					e.bind(v, function (n, t) {
						var o,
						u,
						s,
						f,
						r,
						e,
						c,
						h;
						$(".data-binding-celltype-option").gcuipopup("hide"),
						o = "schema-type-button",
						s = $.fn.zTree.getZTreeObj("ztree-container"),
						s && (f = s.getSelectedNodes(), f && f.length >= 0 && (u = f[0]));
						if (!u)
							return;
						r = $(this).data("datafieldtype"),
						e = $("#" + u.tId + "_a"),
						r && e.length > 0 && (e.find("." + o).remove(), u.dataFieldType = r, c = r + "-icon", h = "<span class='button " + o + " " + c + "' title='" + i.res.ribbon.data[r] + "'></span>", e.prepend(h), (r === i.util.DataFieldType.table || r === i.util.DataFieldType.combox) && ft("ztree-container", u.children))
					}),
					u.bind(l, function (n, t) {
						ct()
					}),
					r.bind(c, function (n) {
						var a = i.wrapper.spread.getActiveSheet(),
						r,
						it,
						u,
						b,
						h,
						l,
						p,
						c,
						o,
						e,
						v,
						g,
						f,
						d,
						y,
						s,
						k;
						if (!a)
							return;
						r = a.findTable(a.getActiveRowIndex(), a.getActiveColumnIndex());
						if (!r)
							return;
						tu = r,
						it = n.target,
						u = $("#data-binding-setting-popup"),
						u.gcuipopup({
							autoHide : !0,
							showing : function (n, t) {
								$(".data-binding-path-overlay").removeAttr("hidden"),
								u.removeAttr("hidden")
							},
							hiding : function (n, t) {
								$(".data-binding-path-overlay").attr("hidden", "hidden"),
								u.attr("hidden", "hidden")
							}
						}),
						u.gcuipopup("show"),
						u.offset({
							top : $(this).offset().top + 8,
							left : $(this).offset().left + 8
						}),
						b = r.autoGenerateColumns(),
						$(".auto-generate-columns").prop("checked", b),
						h = $(".table-binding-path-input"),
						h.length > 0 && (l = r.bindingPath(), l || (l = null), h.val(l)),
						p = $(".table-column-data-field"),
						p.empty();
						var tt = $(document.createDocumentFragment()),
						w = 0,
						ut = r.bindingPath(),
						rt = $.fn.zTree.getZTreeObj("ztree-container"),
						nt = h.val().split("."),
						t = rt.getNodeByParam("name", nt[nt.length - 1]);
						for (t && t.children && t.dataFieldType === i.util.DataFieldType.table && (w = t.children.length), c = $("<select>").addClass("data-field-select"), o = 0; o <= w; o++)
							t && t.children && (e = t.children[o], e && e.name && $("<option>").val(e.name).text(e.name).appendTo(c)), o === w && $("<option>").val("(empty)").text("(empty)").appendTo(c);
						v = r._columns;
						if (v) {
							for (g = v.length, f = 0; f < g; f++)
								d = v[f].dataField(), y = $("<div>").addClass("data-field-container").appendTo(tt), $("<label>").addClass("data-field-block1").text("Column" + f + ": ").appendTo(y), s = c.clone(), b && s.attr("disabled", "disabled"), k = s.find("option[value=" + d + "]"), k.length !== 0 ? k.attr("selected", "selected") : s.find("option[value='(empty)']").attr("selected", "selected"), s.appendTo(y);
							tt.appendTo(p)
						}
					}),
					n.bind(h, function (n) {
						var l,
						v,
						r,
						e,
						a,
						f,
						s,
						u,
						o;
						$("#data-binding-setting-popup").gcuipopup("hide"),
						l = $(".data-field-select"),
						v = l.length;
						if (v <= 0)
							return;
						r = tu;
						if (!r)
							return;
						e = i.wrapper.spread.getActiveSheet();
						if (!e)
							return;
						for (a = [], f = 0; f < v; f++)
							s = new t.TableColumnInfo(f), u = $(l[f]).val(), u && u !== "" && u !== "(empty)" || (u = null), s.dataField(u), s.name(u), a.push(s);
						r.bindColumns(a),
						o = $(".auto-generate-columns").prop("checked");
						if (o) {
							var w = r.endRow() - r.startRow() + 1,
							y = r.endColumn() - r.startColumn() + 1,
							b = $.fn.zTree.getZTreeObj("ztree-container");
							if (!b)
								return;
							var p = $(".table-binding-path-input"),
							c = rt(p.val()),
							h = c.length;
							h !== y && i.MessageBox.show(i.res.ribbon.data.warningTable, i.res.title, 2, 1, function (n, i) {
								var s,
								u,
								f;
								if (i === 1) {
									for (r.autoGenerateColumns(o), s = [], u = 0; u < h; u++)
										f = new t.TableColumnInfo(u), f.dataField(c[u]), f.name(c[u]), s.push(f);
									r.bindColumns(s),
									e.resizeTable(r, new t.Range(r.startRow(), r.startColumn(), w, h)),
									ct(),
									e.repaint();
									return
								}
							})
						}
						r.autoGenerateColumns(o),
						e.repaint()
					}),
					f.bind(a, function (n) {
						$("#data-binding-setting-popup").gcuipopup("hide")
					}),
					s.bind(p, function (n, t) {
						ct()
					}),
					o.bind(y, function (n, t) {
						var i = $(".data-field-select"),
						r;
						if (i.length <= 0)
							return;
						r = $(this).prop("checked"),
						r ? i.attr("disabled", "disabled") : i.removeAttr("disabled")
					})
				}
				function hr() {
					var l = t.Events.SelectionChanged + ".bindingPath",
					c = "click.indicator",
					h = "click.ok",
					a = "click.cancel",
					p = t.Events.TopRowChanged + ".bindingPath",
					y = "click.autoGenetateColumns",
					v = "click.dataFieldType",
					u = i.wrapper.spread,
					r = $(".designer-data-binding-icon"),
					n = $(".ok-table-binding-button"),
					f = $(".cancel-table-binding-button"),
					s = i.wrapper.spread.getActiveSheet(),
					o = $(".auto-generate-columns"),
					e = $(".data-binding-celltype-button");
					u.unbind(l),
					r.unbind(c),
					n.unbind(h),
					f.unbind(a),
					s.unbind(p),
					o.unbind(y),
					e.unbind(v)
				}
				function ct() {
					var f = i.wrapper.spread.getActiveSheet(),
					u,
					r,
					e,
					n;
					if (!f)
						return;
					var o = $("#data-binding-setting-indicator"),
					c = f.getActiveRowIndex(),
					a = f.getActiveColumnIndex(),
					s = f.findTable(c, a);
					if (s) {
						u = s.bindingPath();
						if (u !== null && u !== undefined && u !== "") {
							var v = s.range(),
							h = d(v),
							l = d(new t.Range(c, a, 1, 1));
							h.length === 0 && o.attr("hidden", "hidden");
							if (l.length === 0)
								return;
							for (r = l[0], e = 0; e < h.length; e++) {
								n = h[e];
								if (n.x <= r.x && r.x + r.width <= n.x + n.width && n.y <= r.y && r.y + r.height <= n.y + n.height) {
									o.css({
										left : n.x + n.width - o.width(),
										top : n.y
									}).removeAttr("hidden");
									return
								}
							}
						}
					}
					o.attr("hidden", "hidden")
				}
				function bf() {
					var u = i.wrapper.spread.getActiveSheet(),
					o,
					n,
					t;
					if (!u)
						return;
					var s = u.getSelections(),
					h = u.getRowCount(),
					c = u.getColumnCount();
					for (o = 0; o < s.length; o++) {
						var r = s[o],
						f = r.row,
						e = r.col;
						if (r.col == -1 && r.row == -1)
							for (n = 0; n < h; n++)
								for (t = 0; t < c; t++)
									at(n, t);
						else if (r.row == -1)
							for (n = 0; n < h; n++)
								for (t = e; t < e + r.colCount; t++)
									at(n, t);
						else if (r.col == -1)
							for (n = f; n < f + r.rowCount; n++)
								for (t = 0; t < c; t++)
									at(n, t);
						else
							for (n = f; n < f + r.rowCount; n++)
								for (t = e; t < e + r.colCount; t++)
									at(n, t)
					}
				}
				function at(n, t) {
					var u = i.wrapper.spread.getActiveSheet(),
					r;
					if (!u)
						return;
					r = u.findTable(n, t),
					r && r.bindingPath() && r.bindingPath(null),
					u.getBindingPath(n, t) && u.setBindingPath(n, t, null)
				}
				function wf() {
					var r = this,
					t = {
						title : i.res.ribbon.data.loadSchema,
						nameFilters : [i.res.ribbon.data.loadDataSourceFilter.json, i.res.ribbon.data.loadDataSourceFilter.txt]
					},
					n = function (n) {
						if (n.status === "cancelled")
							return;
						gf(n.fileName)
					};
					app.showOpenDialog(t, n)
				}
				function ut(n) {
					$.isArray(n) ? $.each(n, function (n, t) {
						ut(t)
					}) : n.children && $.isArray(n.children) && $.each(n.children, function (n, t) {
						ut(t)
					}),
					n.isArray && (n.type = "array")
				}
				function pf() {
					var r = this,
					t = {
						title : i.res.ribbon.data.saveSchema,
						nameFilters : [i.res.ribbon.data.saveDataSourceFilter.json]
					},
					n = function (n) {
						if (n.status === "cancelled")
							return;
						var u = $.fn.zTree.getZTreeObj("ztree-container"),
						t = u.getNodesByParam("level", 0)[0],
						r = [];
						t.children && ui(t.children, r),
						app.save(n.fileName, JSON.stringify(i.util.saveJSONSchema(r)), function (n) {
							n.status === "failed" && i.MessageBox.show(n.message, i.res.title, 3)
						}, !1)
					};
					app.showSaveDialog(t, n)
				}
				function gf(n) {
					app.open(n, function (n) {
						var r,
						f,
						u,
						e;
						if (n.status === "failed")
							i.MessageBox.show(n.message, i.res.title, 3);
						else
							try {
								r = JSON.parse(n.data),
								f = "ztree-container",
								$("#" + f).length === 0 && gi(),
								u = [],
								r.$schema ? u = i.util.parseJsonSchema(r) : $.isArray(r) ? pi(r) ? (r.splice(r.length - 1), ut(r), u = r) : fi(r[0], u) : (fi(r, u), dt = new t.CellBindingSource(r)),
								e = {
									name : "Source"
								},
								u.length > 0 && (e.children = u),
								st(f, [e], !0),
								ft(f)
							} catch (o) {
								i.MessageBox.show(i.res.ribbon.data.loadDataError, i.res.title, 3)
							}
					})
				}
				function pi(n) {
					var i = n.length,
					t;
					if (i === 0)
						return !1;
					return t = n[i - 1],
					t.designerNativeSchemaMark && t.designerNativeSchemaMark === 1 ? !0 : !1
				}
				function ft(n, t) {
					var i = $.fn.zTree.getZTreeObj(n);
					if (!i)
						return;
					i.expandAll(!0),
					li(t && t.length > 0 ? t : i.getNodes())
				}
				function li(n) {
					for (var u = "schema-type-button", r = n.length, t, i = 0; i < r; i++)
						t = n[i], ci(t), t && t.children && t.children.length > 0 && li(t.children)
				}
				function ci(n) {
					var r,
					u,
					t,
					e,
					f;
					if (!n || n.level === 0)
						return;
					r = $("#" + n.tId + "_a");
					if (!r || r.length <= 0)
						return;
					u = "schema-type-button",
					r.find("." + u).length > 0 && r.children("." + u).remove();
					if (nt(n) || tt(n))
						return;
					n.dataFieldType ? t = n.dataFieldType : n["enum"] ? t = i.util.DataFieldType.combox : n.type && i.util.DefaultTypeDic[n.type] && (t = i.util.DefaultTypeDic[n.type]),
					t || (t = i.util.DataFieldType.text),
					e = t + "-icon",
					f = "<span class='button " + u + " " + e + "' title='" + i.res.ribbon.data[t] + "'></span>",
					r.prepend(f),
					n.dataFieldType = t
				}
				function wi(n) {
					return typeof n === i.util.BasicDataType.Object ? n === null ? i.util.BasicDataType.Null : n.constructor === [].constructor ? i.util.BasicDataType.Array : i.util.BasicDataType.Object : typeof n
				}
				function hf() {
					t.TextCellType.prototype.getText = function (n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : fr.apply(this, arguments)
					},
					t.CheckBoxCellType.prototype.getText = function (n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : ur.apply(this, arguments)
					},
					t.ButtonCellType.prototype.getText = function (n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : sr.apply(this, arguments)
					},
					t.HyperLinkCellType.prototype.getText = function (n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : or.apply(this, arguments)
					},
					t.ComboBoxCellType.prototype.getText = function (n, t) {
						var i = t.sheet.getBindingPath(t.row, t.col);
						return i ? "[" + i + "]" : er.apply(this, arguments)
					}
				}
				function sf() {
					t.TextCellType.prototype.getText = fr,
					t.CheckBoxCellType.prototype.getText = ur,
					t.ButtonCellType.prototype.getText = sr,
					t.HyperLinkCellType.prototype.getText = or,
					t.ComboBoxCellType.prototype.getText = er
				}
				function st(n, t, r) {
					if ($.fn.zTree.getZTreeObj(n) !== null)
						if (r)
							$.fn.zTree.destroy(n);
						else
							return;
					var u = {
						view : {
							showIcon : !1,
							addHoverDom : function (n, t) {
								oe(n, t)
							},
							removeHoverDom : he,
							selectedMulti : !1
						},
						edit : {
							enable : !0,
							editNameSelectAll : !0,
							showRemoveBtn : af,
							showRenameBtn : lf,
							removeTitle : i.res.ribbon.data.remove,
							renameTitle : i.res.ribbon.data.rename
						},
						callback : {
							onDblClick : function (n, t, i) {
								se(n, i)
							},
							beforeDrop : function (n, t, i, r) {
								return fu(n, t, i, r)
							},
							onDrop : function (n, t, i, r, u) {
								vu(n, t, i, r, u)
							},
							onMouseDown : function (n, t, i) {
								ae(n, i)
							},
							beforeRemove : function (n, t) {
								return vf(n, t)
							}
						}
					};
					$("#" + n).empty(),
					$.fn.zTree.init($("#" + n), u, t),
					ft(n)
				}
				function vf(n, t) {
					return t && t.children && t.children.length > 0 ? (i.MessageBox.show(i.res.ribbon.data.removeNodeWarning, i.res.title, 2, 1, function (n, i) {
							var r = $.fn.zTree.getZTreeObj("ztree-container");
							i === 1 && r.removeNode(t, !1)
						}), !1) : !0
				}
				function af(n, t) {
					return t.level !== 0
				}
				function lf(n, t) {
					return t.level !== 0
				}
				function oe(n, t) {
					var s = $("#" + t.tId + "_span"),
					e,
					r,
					o,
					f,
					u;
					if (t.editNameFlag || $("#addBtn_" + t.tId).length > 0)
						return;
					e = "<span class='button add' id='addBtn_" + t.tId + "' title='" + i.res.ribbon.data.addNode + "'></span>",
					s.after(e),
					r = $("#addBtn_" + t.tId),
					r && r.bind("click", function () {
						var i = $.fn.zTree.getZTreeObj(n),
						u = bi(i, t),
						r = i.addNodes(t, [{
										name : bi(i, t)
									}
								]);
						return i.cancelEditName(),
						i.editName(r[0]),
						ci(r[0]),
						!1
					}),
					$("#arrayBtn_" + t.tId).length > 0 || t.level === 0 || (o = "<span class='button options' id='arrayBtn_" + t.tId + "' title='" + i.res.ribbon.data.selectOptions + "' onfocus='this.blur();'></span>", f = $("#" + t.tId + "_a"), f.append(o), u = $("#arrayBtn_" + t.tId), u && u.bind("click", function (i) {
							var f = $.fn.zTree.getZTreeObj(n),
							r,
							u;
							return f.selectNode(t),
							r = $(".data-binding-celltype-button"),
							r.button(),
							u = $(".data-binding-celltype-option").gcuipopup({
									autoHide : !0,
									position : {
										of : $(".button.options"),
										my : "center top",
										at : "center bottom"
									}
								}),
							u.gcuipopup("show"),
							!1
						})),
					(nt(t) || tt(t)) && ($("#addBtn_" + t.tId).remove(), $("#arrayBtn_" + t.tId).remove())
				}
				function bi(n, t) {
					var r = "field-",
					u = t.children ? t.children.length : 0,
					i;
					if (t.level === 0)
						r += u;
					else {
						i = [],
						i.push(u);
						while (!t || t.level !== 0)
							i.splice(0, 0, n.getNodeIndex(t)), t = t.getParentNode();
						i.length > 0 && (r += i.join(""))
					}
					return r
				}
				function he(n, t) {
					$("#addBtn_" + t.tId).unbind().remove(),
					$("#arrayBtn_" + t.tId).unbind().remove()
				}
				function se(n, t) {
					var f = i.wrapper.spread.getActiveSheet(),
					u,
					r;
					if (!f)
						return;
					u = f.getSelections();
					if (u.length <= 0)
						return;
					if (!t)
						return;
					r = u[0],
					nr(t, r.row, r.col, function () {
						ai(t, r.row, r.col)
					})
				}
				function ae(n, t) {
					le()
				}
				function le() {
					var n = this;
					kt || ($(document).bind("mousemove.bindingPath", function (n) {
							ce(n)
						}).bind("mouseup.bindingPath", function (n) {
							ee(n)
						}), kt = !0)
				}
				function ce(n) {
					var v = $.fn.zTree.getZTreeObj("ztree-container"),
					s,
					r,
					e;
					if (!v)
						return;
					s = i.wrapper.spread.getActiveSheet(),
					r = rr(n);
					if (isNaN(r.row) || isNaN(r.col))
						return;
					var f = [],
					u,
					h = s.findTable(r.row, r.col),
					l = v.getSelectedNodes()[0];
					if (h) {
						var o = h.range(),
						y = o.row,
						p = o.col,
						c = l.getParentNode();
						u = c && a(c) === h.bindingPath() && c.dataFieldType === i.util.DataFieldType.table ? new t.Range(y, r.col, o.rowCount, 1) : o,
						f = d(u)
					} else
						nt(l) ? f = [] : tt(l) && s.getCellType(r.row, r.col).constructor !== t.ComboBoxCellType ? f = [] : (e = s.getSelections(), e && e.length > 0 && (u = e[0], u.contains(r.row, r.col, 1, 1) ? f = d(u) : (u = new t.Range(r.row, r.col, 1, 1), f = d(u))));
					eu(f)
				}
				function ee(n) {
					var f,
					i,
					r;
					$(document).unbind("mousemove.bindingPath"),
					$(document).unbind("mouseup.bindingPath"),
					f = $(".data-binding-decoration"),
					f.remove(),
					kt = !1;
					var e = rr(n),
					u = e.row,
					t = e.col;
					if (isNaN(u) || isNaN(t))
						return;
					i = $.fn.zTree.getZTreeObj("ztree-container");
					if (!i)
						return;
					r = i.getSelectedNodes()[0],
					nr(r, u, t, function () {
						ai(r, u, t)
					})
				}
				function ai(n, r, f) {
					var v = i.wrapper.spread.getActiveSheet(),
					o,
					l,
					w,
					p,
					c;
					if (!v)
						return;
					var h = n.getParentNode(),
					e = v.findTable(r, f),
					y = v.getCellType(r, f),
					s = v.getSelections()[0];
					if (n.dataFieldType && n.dataFieldType === i.util.DataFieldType.table)
						o = a(n), l = rt(o), e ? di(e, o, l) : s.contains(r, f, 1, 1) ? ei(s, o, l) : (w = new t.Range(r, f, 1, 1), ei(w, o, l));
					else if (e && h && a(h) === e.bindingPath() && h.dataFieldType === i.util.DataFieldType.table)
						p = a(n).split("."), cu(f - e.range().col, p[p.length - 1], e);
					else if (y && y.constructor === t.ComboBoxCellType && h && h.dataFieldType === i.util.DataFieldType.combox)
						c = y.items(), c.indexOf(n.name) === -1 && (c.push(n.name), y.items(c));
					else {
						if (nt(n)) {
							i.MessageBox.show(i.res.ribbon.data.unallowableTableBindingTip, i.res.title, 2, 0);
							return
						}
						if (tt(n)) {
							i.MessageBox.show(i.res.ribbon.data.unallowComboxBindingTip, i.res.title, 2, 0);
							return
						}
						s.contains(r, f, 1, 1) ? (u.row = s.row, u.col = s.col) : (u.row = r, u.col = f),
						ir(n)
					}
				}
				function nr(n, r, u, f) {
					var h,
					a,
					e,
					s;
					if (!n || isNaN(r) || isNaN(u))
						return;
					h = $.fn.zTree.getZTreeObj("ztree-container");
					if (!h)
						return;
					var y = i.wrapper.spread.getActiveSheet(),
					c = h.getNodesByFilter(tr, !1, n),
					o = 0;
					for (e = 0; e < c.length; e++)
						a = c[e].level - n.level, o = Math.max(o, a);
					var p = v ? u + o + 1 : u + o,
					w = r + c.length,
					l = !0;
					for (e = r; e <= w; e++)
						for (s = u; s <= p; s++)
							if (y.getCellType(e, s).constructor !== t.TextCellType) {
								l = !1;
								break
							}
					l ? f() : i.MessageBox.show(i.res.ribbon.data.overwriteCellTypeWarning, i.res.title, 2, 1, function (n, t) {
						t === 1 && f();
						return
					})
				}
				function tr(n) {
					if (n)
						if (!nt(n) && !tt(n))
							return !0;
					return !1
				}
				function nt(n) {
					var t = $.extend({}, n.getParentNode());
					if (!t || $.isEmptyObject(t))
						return !1;
					while (t && t.dataFieldType !== i.util.DataFieldType.table && t.level !== 0)
						t = t.getParentNode();
					return t && t.level === 0 ? !1 : !0
				}
				function tt(n) {
					var t = $.extend({}, n.getParentNode());
					if (!t || $.isEmptyObject(t))
						return !1;
					while (t && t.dataFieldType !== i.util.DataFieldType.combox && t.level !== 0)
						t = t.getParentNode();
					return t && t.level === 0 ? !1 : !0
				}
				function ir(n) {
					var b = $.fn.zTree.getZTreeObj("ztree-container"),
					p,
					r,
					f,
					h,
					w,
					l,
					c,
					y,
					o,
					s,
					e;
					if (!b)
						return;
					p = b.getSelectedNodes()[0],
					r = 0,
					r = p.level === 0 ? n.level - p.level - 1 : n.level - p.level,
					f = i.wrapper.spread.getActiveSheet(),
					h = a(n);
					if (n.dataFieldType === i.util.DataFieldType.table) {
						var g = rt(a(n)),
						k = new t.Range(u.row, u.col + r, 1, 1),
						d = ei(k, h, g);
						d && (u.row += 2);
						return
					} else if (n.dataFieldType === i.util.DataFieldType.combox) {
						w = new t.ComboBoxCellType,
						l = n["enum"] ? n["enum"] : rt(a(n)),
						l && l.length > 0 && w.items(l),
						v ? (f.setValue(u.row, u.col + r, n.name), f.getCell(u.row, u.col + r + 1).bindingPath(h), f.setCellType(u.row, u.col + r + 1, w)) : (f.getCell(u.row, u.col + r).bindingPath(h), f.setCellType(u.row, u.col + r, w)),
						u.row++;
						return
					}
					c = n.children;
					if (c && c.length > 0)
						for (n.level !== 0 && (f.setValue(u.row, u.col + r, n.name), u.row++), y = 0; y < c.length; y++)
							ir(c[y]);
					else {
						o = 0,
						s = 0,
						v ? (o = u.row, s = u.col + r + 1, f.setValue(o, s - 1, n.name), f.getCell(o, s).bindingPath(h)) : (o = u.row, s = u.col + r, f.getCell(o, s).bindingPath(h)),
						u.row++;
						switch (n.dataFieldType) {
						case i.util.DataFieldType.button:
							e = new t.ButtonCellType,
							e.text("Button");
							break;
						case i.util.DataFieldType.checkbox:
							e = new t.CheckBoxCellType,
							e.caption("CheckBox");
							break;
						case i.util.DataFieldType.hyperlink:
							e = new t.HyperLinkCellType,
							e.text("Hyperlink");
							break;
						default:
							break
						}
						e && f.setCellType(o, s, e)
					}
				}
				function rr(n) {
					var r = i.wrapper.spread.getActiveSheet(),
					u,
					t;
					if (r)
						return t = $(i.util.getCanvas(i.wrapper.spread)).offset(), r.hitTest(n.pageX - t.left, n.pageY - t.top)
				}
				function a(n) {
					var i = [],
					t = n;
					while (t.level !== 0)
						i.splice(0, 0, t.name), t = t.getParentNode();
					return i.join(".")
				}
				function fu(n, t, r, u) {
					if (r === null || u != "inner" && !r.parentTId)
						return !1;
					if (!tr(r))
						return !1;
					var e = r.dataFieldType,
					f = i.util.DataFieldType;
					return (e === f.table || e === f.combox) && t[0].children && t[0].children.length > 0 ? !1 : !0
				}
				function vu(n, t, i, r, u) {
					ft(t)
				}
				function ui(n, t) {
					var u,
					i,
					r;
					if (!n)
						return;
					for (u = n.length, i = 0; i < u; i++)
						r = {},
					r.name = n[i].name,
					n[i].type && (r.type = n[i].type),
					n[i].dataFieldType && (r.dataFieldType = n[i].dataFieldType),
					n[i]["enum"] && (r["enum"] = n[i]["enum"]),
					n[i].children && n[i].children.length > 0 && (r.children = [], ui(n[i].children, r.children)),
					t.push(r)
				}
				function fi(n, t) {
					$.each(n, function (n, i) {
						var r = {};
						r.name = n,
						wi(i) === "array" && (r.type = "array"),
						wi(i) === "object" && (r.children = [], fi(i, r.children)),
						t.push(r)
					})
				}
				function d(n) {
					var f = i.wrapper.spread.getActiveSheet(),
					h,
					c,
					r,
					u,
					e,
					o;
					if (!f)
						return;
					for (h = $(i.util.getCanvas(i.wrapper.spread)).offset(), c = [], r = 0; r <= 2; r++)
						for (u = 0; u <= 2; u++) {
							var v = f.getViewportLeftColumn(u),
							p = f.getViewportRightColumn(u),
							a = f.getViewportTopRow(r),
							y = f.getViewportBottomRow(r),
							s = new t.Range(a, v, y - a + 1, p - v + 1),
							l = n.getIntersect(s, Math.max(s.rowCount, n.rowCount), Math.max(s.colCount, n.colCount));
							l && (e = new t.Rect, o = f._getRangeRect(r, u, l), e.x = o.x + h.left, e.y = o.y + h.top, e.width = o.width - 2, e.height = o.height - 2, c.push(e))
						}
					return c
				}
				function cu(n, r, u) {
					var s = u._columns,
					o = i.wrapper.spread.getActiveSheet();
					if (!s || !r || !o)
						return;
					var e = s.slice(0),
					f = new t.TableColumnInfo(n),
					h = u.autoGenerateColumns();
					h ? i.MessageBox.show(i.res.ribbon.data.warningDataField, i.res.title, 2, 1, function (t, i) {
						if (i === 4)
							return;
						else
							u.autoGenerateColumns(!1), f.dataField(r), f.name(r), e[n] = f, u.bindColumns(e), o.repaint()
					}) : (f.dataField(r), f.name(r), e[n] = f, u.bindColumns(e), o.repaint())
				}
				function eu(n) {
					var f = $(".data-binding-decoration-container"),
					u,
					i,
					r,
					t;
					f.empty();
					if (!n || n.length <= 0)
						return;
					for (u = $(document.createDocumentFragment()), i = 0; i < n.length; i++)
						r = $("<div>").addClass("data-binding-decoration").appendTo(u), t = n[i], r.css({
							width : t.width,
							height : t.height,
							display : "inline-block"
						}), r.offset({
							left : t.x,
							top : t.y
						});
					u.appendTo(f)
				}
				function vi() {
					for (var s = i.wrapper.spread, e = s.sheets, o = e.length, r, n, f, u, t = 0; t < 1e5; t++)
						for (r = "gcTable" + t, n = 0; n < o; n++) {
							f = e[n],
							u = f.findTableByName(r);
							if (u)
								break;
							if (!u && n === o - 1)
								return r
						}
				}
				function rt(n) {
					var e = [],
					u,
					f,
					i,
					t,
					r;
					if (!n)
						return;
					u = $.fn.zTree.getZTreeObj("ztree-container");
					if (!u)
						return;
					i = n.split("."),
					i.length > 0 && (f = i[i.length - 1]),
					t = u.getNodeByParam("name", f);
					if (t && t.children)
						for (r = 0; r < t.children.length; r++)
							e.push(t.children[r].name);
					return e
				}
				function di(n, r, u) {
					var s,
					f,
					e,
					o;
					if (!n)
						return;
					s = i.wrapper.spread.getActiveSheet();
					if (!s)
						return;
					n.bindingPath(r),
					n.autoGenerateColumns(!1);
					var a = u ? u.length : 0,
					l = n.endColumn() - n.startColumn() + 1,
					c = Math.max(a, l),
					h = [];
					n.bindColumns(h);
					if (c > 0) {
						for (f = 0; f < c; f++)
							e = null, o = new t.TableColumnInfo(f), u && u[f] && (e = u[f], o.name(e)), o.dataField(e), h.push(o);
						n.bindColumns(h)
					}
					ct(),
					s.repaint()
				}
				function ei(n, t, r) {
					var c;
					if (!n)
						return;
					var f = i.wrapper.spread.getActiveSheet(),
					l = r ? r.length : 0,
					s = Math.max(2, n.rowCount),
					h = Math.max(l, n.colCount),
					e = n.row === -1 ? 0 : n.row,
					u = n.col === -1 ? 0 : n.col,
					o = null;
					try {
						v ? (c = t.split(".").pop(), f.setValue(e, u, c), o = f.addTable(vi(), e, u + 1, s, h)) : o = f.addTable(vi(), e, u, s, h),
						di(o, t, r),
						f.clearSelection(),
						f.setSelection(e, v ? u + 1 : u, s, h)
					} catch (a) {
						i.MessageBox.show(a.message, i.res.title, 3, 0);
						return
					}
					return o
				}
				function gi() {
					var u = "ztree-container",
					f = i.wrapper.spread.getActiveSheet(),
					e = $(".design-mode-panel"),
					o,
					r,
					t,
					n;
					e.sliderpanel(),
					o = e.sliderpanel("getContent"),
					r = $("#" + u),
					r.length > 0 || $("<div>").attr("id", u).addClass("ztree").appendTo(o),
					t = {
						name : "Source"
					},
					i.wrapper.spread.designerBindingPathSchema && !pt ? (n = i.wrapper.spread.designerBindingPathSchema, n.$schema ? (t.children = i.util.parseJsonSchema(n), st("ztree-container", [t], !0)) : $.isArray(n) && pi(n) && (n.splice(n.length - 1), ut(n), t.children = n, st("ztree-container", t, !0)), pt = !0) : st("ztree-container", [t]),
					f.getDataSource() && f.setDataSource(null),
					bu()
				}
				function rf(t, r) {
					var o = i.wrapper.spread,
					u;
					o.isPaintSuspended(!0);
					var c = o.getActiveSheet(),
					s = 100,
					f = 200;
					for (u = 0; u < r.length; u++) {
						var h = t.getColumnName(r[u]),
						l = c._slicerCollection.getAutoSlicerName(h),
						e = c.addSlicer(l, t.name(), h);
						e.position(new n.Sheets.Point(s, f)),
						s = s + 30,
						f = f + 30
					}
					o.isPaintSuspended(!1),
					ht(),
					vt(),
					e.isSelected(!0),
					ki(e)
				}
				function ot() {
					$("a[href='#slicerTab']").is(":visible") && $(".ribbon-bar").gcuiribbon("setTabPageVisible", "slicerTab", !1)
				}
				function vt() {
					$(".ribbon-bar").gcuiribbon("setTabPageVisible", "slicerTab", !0),
					$(".ribbon-bar").gcuitabs("select", "slicerTab");
					var t = $("#slicerTab>ul").find("li:eq(2)"),
					o = t.find("button:eq(0)").width(),
					f = t.find("button:eq(1)").width(),
					e = t.find("button:eq(1)").width(),
					n = o > f ? o : f;
					n = n > e ? n : e;
					var i = $("#slicerTab>ul").find("li:eq(3)"),
					r = i.find("button:eq(0)").width(),
					u = i.find("button:eq(1)").width(),
					s = r > u ? r : u;
					$("#slicerTab>ul").find("li:eq(2)").find("button").width(n),
					$("#slicerTab>ul").find("li:eq(3)").find("button").width(s),
					$("#slicerTab>ul").find("li:gt(1)").find("button").find("span:gt(0)").css("text-align", "start")
				}
				function ki(n) {
					if (!n)
						return;
					ht(),
					$(".slicer-ribbon-icon").attr("disabled", !0),
					$(".slicer-caption-name").val(n.captionName()),
					$("#slicer-shape-width").val(Math.round(n.width())),
					$("#slicer-shape-height").val(Math.round(n.height())),
					$("#slicer-column-count").val(n.columnCount()),
					$("#slicer-item-height").val(Math.round(n.itemHeight()));
					var t = i.util.getSlicerItemWidth(n.columnCount(), n.width());
					$("#slicer-item-width").val(t),
					vt(),
					w("caption-name", $(".slicer-caption-name")),
					w("shape-width", $("#slicer-shape-width")),
					w("shape-height", $("#slicer-shape-height")),
					w("column-count", $("#slicer-column-count")),
					w("item-height", $("#slicer-item-height")),
					w("item-width", $("#slicer-item-width"))
				}
				function yi() {
					$(".slicer-caption-name").val(""),
					$("#slicer-shape-width").val(""),
					$("#slicer-shape-height").val(""),
					$("#slicer-column-count").val(""),
					$("#slicer-item-height").val(""),
					$("#slicer-item-width").val(""),
					ot(),
					y($(".slicer-caption-name")),
					y($("#slicer-shape-width")),
					y($("#slicer-shape-height")),
					y($("#slicer-column-count")),
					y($("#slicer-item-height")),
					y($("#slicer-item-width")),
					gr()
				}
				function ff(n, t, i) {
					if (!t)
						return;
					i === "isSelected" ? t.isSelected() ? !n.protectionOption().allowEditObjects && n.getIsProtected() && t.isLocked() || (ki(t), $("#clipboardgroup li:gt(0)").hide()) : yi() : pu(t, i)
				}
				function y(n) {
					n.unbind("input")
				}
				function w(n, t) {
					var r = i.wrapper.spread;
					t.bind("input", {
						spread : r
					}, function (r) {
						var o = r.data && r.data.spread,
						e = o.getActiveSheet(),
						u,
						f;
						if (!i.util.isSlicerSelected(e))
							return;
						u = i.util.getSelectedSlicers(e),
						f = t.val(),
						wu(n, u, f)
					})
				}
				function wu(n, t, r) {
					var a,
					c,
					e,
					l,
					o,
					f,
					s,
					h,
					u;
					if (!t || t.length === 0)
						return;
					if (!$.isNumeric(r) && n !== "caption-name")
						return;
					a = i.wrapper.spread;
					switch (n) {
					case "caption-name":
						c = r;
						for (u in t)
							t[u].captionName(c);
						break;
					case "shape-width":
						e = i.util.formatNumber(r);
						for (u in t)
							f = t[u], f.width(e), $("#slicer-item-width").val(i.util.getSlicerItemWidth(f.columnCount(), f.width()));
						break;
					case "shape-height":
						l = i.util.formatNumber(r);
						for (u in t)
							t[u].height(l);
						break;
					case "column-count":
						o = i.util.formatNumber(r);
						for (u in t)
							f = t[u], f.columnCount(o), $("#slicer-item-width").val(i.util.getSlicerItemWidth(f.columnCount(), f.width()));
						break;
					case "item-height":
						s = i.util.formatNumber(r);
						for (u in t)
							t[u].itemHeight(s);
						break;
					case "item-width":
						h = i.util.formatNumber(r);
						for (u in t) {
							var f = t[u],
							v = f.columnCount(),
							e = i.util.getSlicerWidthFromItem(f.columnCount(), h);
							f.width(e),
							$("#slicer-shape-width").val(e)
						}
						break
					}
				}
				function pu(n, t) {
					if (!n)
						return;
					switch (t) {
					case "width":
						$("#slicer-shape-width").val(n.width()),
						$("#slicer-item-width").val(i.util.getSlicerItemWidth(n.columnCount(), n.width()));
						break;
					case "height":
						$("#slicer-shape-height").val(n.height());
						break;
					case "columnCount":
						$("#slicer-column-count").val(n.columnCount());
						break;
					case "itemHeight":
						$("#slicer-item-height").val(n.itemHeight());
						break;
					case "captionName":
						$(".slicer-caption-name").val(n.captionName());
						break
					}
				}
				function yu(t, r) {
					var e,
					u,
					f;
					if (!i.util.isSlicerSelected(t))
						return;
					e = i.util.getSelectedSlicers(t),
					u = null;
					switch (r) {
					case "light1":
						u = n.Sheets.SlicerStyles.light1();
						break;
					case "light2":
						u = n.Sheets.SlicerStyles.light2();
						break;
					case "light3":
						u = n.Sheets.SlicerStyles.light3();
						break;
					case "light4":
						u = n.Sheets.SlicerStyles.light4();
						break;
					case "light5":
						u = n.Sheets.SlicerStyles.light5();
						break;
					case "light6":
						u = n.Sheets.SlicerStyles.light6();
						break;
					case "other1":
						u = n.Sheets.SlicerStyles.other1();
						break;
					case "other2":
						u = n.Sheets.SlicerStyles.other2();
						break;
					case "dark1":
						u = n.Sheets.SlicerStyles.dark1();
						break;
					case "dark2":
						u = n.Sheets.SlicerStyles.dark2();
						break;
					case "dark3":
						u = n.Sheets.SlicerStyles.dark3();
						break;
					case "dark4":
						u = n.Sheets.SlicerStyles.dark4();
						break;
					case "dark5":
						u = n.Sheets.SlicerStyles.dark5();
						break;
					case "dark6":
						u = n.Sheets.SlicerStyles.dark6();
						break
					}
					for (f = 0; f < e.length; f++)
						e[f].style(u)
				}
				function ve(n, t) {
					var s = i.SlicerStyleDialog.customSlicerStyle,
					h = 6,
					e = "custom",
					r = "slicer-format-",
					u = r + e + t,
					f = n.substring(n.indexOf("-") + 1),
					o = n.substring(0, n.indexOf("-"));
					$("." + u).attr("title", f)
				}
				function du() {
					var t = 8,
					u = 8,
					r = 6,
					n;
					gt("slicer-custom-preview", "custom", t),
					gt("slicer-light-preview", "light", u),
					gt("slicer-dark-preview", "dark", r),
					$(".slicer-format-preview").mouseenter(function (n) {
						var u = n.srcElement || n.target,
						r = u.parentElement,
						f = r,
						i = f.className.split(" "),
						t = i[0];
						t.indexOf("container-span") !== -1 && (t = i[1]),
						$("." + t).addClass("ui-state-hover")
					}),
					$(".slicer-format-preview").mouseout(function (n) {
						var u = n.srcElement || n.target,
						r = u.parentElement,
						f = r,
						i = f.className.split(" "),
						t = i[0];
						t.indexOf("container-span") !== -1 && (t = i[1]),
						$("." + t).removeClass("ui-state-hover")
					}),
					$(".slicer-format-preview").mouseup(function (n) {
						for (var h = i.wrapper.spread, l = n.srcElement || n.target, a = l, c = a.className, r, f = c.split(" "), s = h.getActiveSheet(), e, u, o, t = 0; t < f.length; t++)
							if (f[t].indexOf("slicer-format") === -1) {
								r = f[t];
								break
							}
						if (r.indexOf("custom") === -1)
							yu(s, r);
						else {
							e = i.SlicerStyleDialog.customSlicerStyle;
							for (u in e)
								o = u.substring(0, u.indexOf("-")), o === r && ku(s, i.SlicerStyleDialog.customSlicerStyle[u])
						}
						$("#format-slicer-popup").gcuipopup("hide")
					}),
					$(".new-slicer-style").click(function () {
						$("#format-slicer-popup").gcuipopup("hide"),
						n === undefined ? n = new i.SlicerStyleDialog : n.refresh(),
						n.open()
					}).mouseenter(function () {
						$(this).css("background", "#DBDBDB")
					}).mouseleave(function () {
						$(this).css("background", "white")
					})
				}
				function ku(n, t) {
					var u = i.util.getSelectedSlicers(n),
					r;
					for (r in u)
						u[r].style(t)
				}
				function gt(n, t, i) {
					for (var c = "slicer-format-", o = "slicer-format-preview", s, u, e, f, h, r = 1; r <= i; r++)
						u = c + t + r, t === "custom" ? s = $("<span></span>").addClass(u + " " + o + " " + t + r) : t === "light" && r > 6 ? (e = "other", f = r - 6, u = c + e + f, s = $("<span></span>").attr("title", e + f).addClass(u + " " + o + " " + e + f)) : s = $("<span></span>").attr("title", t + r).addClass(u + " " + o + " " + t + r), h = $("<span></span>").append(s).addClass(u + "-container container-span"), $("<button></button>").append(h).addClass(u + "-button " + o + "-button").appendTo($("." + n))
				}
				function gr() {
					var t = i.wrapper.spread.getActiveSheet(),
					n = t;
					n.isPasteFloatingObject() ? $("#clipboardgroup li:gt(0)").hide() : $("#clipboardgroup li:gt(0)").show()
				}
				var ye = i.spreadActions.SelectionRangeType,
				si,
				g,
				yr,
				e,
				et,
				br;
				r.slicerSettingDialog,
				r.updateCellStyle = lt,
				r.updateFormat = hi,
				r.updateMerge = bt,
				r.updateSparkline = oi,
				r.updateTable = b,
				r.updateShowHide = ii,
				r.updateProtectLock = ti,
				r.updateZoomToStatusBar = k,
				r.resetSpreadNamedStyle = nu,
				br = function (n, t) {
					var r = i.wrapper.spread,
					u = r.getActiveSheet();
					switch (t.item[0].id) {
					case "cellstyle-modify":
						g || (g = new i.FormatDialog),
						$("#cell-styles-popup").gcuipopup("hide"),
						ni(e, i.wrapper.spread),
						yr = r.getNamedStyle(e),
						g.open("numbers", undefined, yr, !0),
						g.setFormatDirectly(!1);
						$(g).on("okClicked", function (n, t) {
							var o,
							f,
							s;
							for (i.CellStyleDialog.existedCustomCellStyle.hasOwnProperty(e) ? $.extend(i.CellStyleDialog.existedCustomCellStyle[e], t) : i.CellStyleDialog.buildInCellStyle.hasOwnProperty(e) && $.extend(i.CellStyleDialog.buildInCellStyle[e], t), o = r.sheets, f = 0; f < o.length; f++)
								o[f].getNamedStyle(e) && $.extend(o[f].getNamedStyle(e), t);
							r.getNamedStyle(e) && $.extend(r.getNamedStyle(e), t),
							u.repaint(),
							s = {},
							ru(s, t),
							yt(s, $(et).children()),
							i.actions.isFileModified = !0
						});
						break;
					case "cellstyle-delete":
						$(et).remove(),
						i.CellStyleDialog.existedCustomCellStyle.hasOwnProperty(e) ? (delete i.CellStyleDialog.existedCustomCellStyle[e], wt(i.CellStyleDialog.existedCustomCellStyle) && ($(".cell-style-custom-li").addClass("hidden"), $(".custom-cell-styles-preview").parent().addClass("hidden"))) : i.CellStyleDialog.buildInCellStyle.hasOwnProperty(e) && delete i.CellStyleDialog.buildInCellStyle[e],
						u.getNamedStyle(e) && u.removeNamedStyle(e),
						r.getNamedStyle(e) && r.removeNamedStyle(e),
						i.actions.isFileModified = !0;
						break;
					default:
						break
					}
				},
				r.updateRibbonBarStyle = df,
				r.validationError = uu,
				r.attachEvent = iu;
				var pt = !1,
				dt,
				kt = !1,
				v = !1,
				tu,
				u = {
					row : 0,
					col : 0
				};
				var fr = t.TextCellType.prototype.getText,
				ur = t.CheckBoxCellType.prototype.getText,
				sr = t.ButtonCellType.prototype.getText,
				or = t.HyperLinkCellType.prototype.getText,
				er = t.ComboBoxCellType.prototype.getText;
				r.treeNodeToArray = ui,
				r.insertTableSlicer = rf,
				r.showSlicerTab = vt,
				r.clearSlicerTab = yi,
				i.loader.ready(function () {
					gu(),
					uf(),
					iu()
				})
			})(i.ribbon || (i.ribbon = {}));
			var r = i.ribbon
		})(t.designer || (t.designer = {}));
		var i = t.designer
	})(n.Sheets || (n.Sheets = {}));
	var t = n.Sheets
})(GcSpread || (GcSpread = {}))
