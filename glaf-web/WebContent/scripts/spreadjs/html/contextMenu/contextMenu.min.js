var GcSpread;
(function (n) {
	(function (n) {
		(function (t) {
			(function (i) {
				"use strict";
				function it() {
					var w = this,
					i = !1,
					y = function (n, u) {
						var y = t.wrapper.spread,
						p = y.getActiveSheet(),
						b,
						k,
						d,
						g;
						switch (u.item[0].id) {
						case "cut":
							t.actions.doAction("cut", y);
							break;
						case "copy":
							t.actions.doAction("copy", y);
							break;
						case "pasteAll":
							t.actions.doAction("paste", y, 0);
							break;
						case "pasteFormulas":
							t.actions.doAction("paste", t.wrapper.spread, 3);
							break;
						case "pasteValues":
							t.actions.doAction("paste", t.wrapper.spread, 1);
							break;
						case "pasteFormatting":
							t.actions.doAction("paste", t.wrapper.spread, 2);
							break;
						case "insertDialog":
							k = t.spreadActions.getSelectionType(y);
							switch (k) {
							case 0:
								t.MessageBox.show(t.res.insertCellInSheet, t.res.title, 2);
								break;
							case 2:
								t.spreadActions.insertColumns(y);
								break;
							case 1:
								t.spreadActions.insertRows(y);
								break;
							case 4:
								t.MessageBox.show(t.res.insertCellInMixtureRange, t.res.title, 2);
								break;
							case 3:
								l === undefined && (l = new t.InsertCellsDialog),
								l.open();
								break;
							default:
								break
							}
							break;
						case "deleteDialog":
							k = t.spreadActions.getSelectionType(y);
							switch (k) {
							case 0:
								w._sheet.clear(0, 0, w._sheet.getRowCount(), w._sheet.getColumnCount(), 3, 51);
								break;
							case 2:
								t.spreadActions.deleteColumns(y);
								break;
							case 1:
								t.spreadActions.deleteRows(y);
								break;
							case 4:
								t.MessageBox.show(t.res.insertCellInMixtureRange, t.res.title, 2);
								break;
							case 3:
								a === undefined && (a = new t.DeleteCellsDialog),
								a.open();
								break;
							default:
								break
							}
							break;
						case "clearcontents":
							t.actions.doAction("clearContent", y);
							break;
						case "filter":
							t.actions.doAction("setRowFilter", y, !1);
							break;
						case "sortAToZ":
							t.actions.doAction("sortRange", y, !0);
							break;
						case "sortZToA":
							t.actions.doAction("sortRange", y, !1);
							break;
						case "customSort":
							v || (v = new t.SortDialog),
							v.open();
							break;
						case "insertComment":
							t.actions.doAction("insertComment", y),
							b = p.getComment(p.getActiveRowIndex(), p.getActiveColumnIndex()),
							b && b.commentState(2);
							break;
						case "editComment":
							b = p.getComment(p.getActiveRowIndex(), p.getActiveColumnIndex()),
							b && b.commentState(2);
							break;
						case "deleteComment":
							t.actions.doAction("deleteComment", y);
							break;
						case "hideComment":
							b = p.getComment(p.getActiveRowIndex(), p.getActiveColumnIndex()),
							b && b.displayMode(2);
							break;
						case "unHideComment":
							b = p.getComment(p.getActiveRowIndex(), p.getActiveColumnIndex()),
							b && b.displayMode(1);
							break;
						case "formatComment":
							f === undefined && (f = new t.FormatCommentDialog);
							var nt = p.getActiveRowIndex(),
							tt = p.getActiveColumnIndex(),
							b = p.getComment(nt, tt),
							it = {
								row : nt,
								col : tt
							};
							b && f.open(it);
							break;
						case "formatCells":
							c === undefined && (c = new t.FormatDialog),
							c.open("number");
							break;
						case "defineName":
							h === undefined && (h = new t.NewNameDialog),
							h.open("new", undefined);
							break;
						case "rowHeight":
							e === undefined && (e = new t.RowHeightDialog),
							e.open();
							break;
						case "columnWidth":
							o === undefined && (o = new t.ColumnWidthDialog),
							o.open();
							break;
						case "hide":
							k = t.spreadActions.getSelectionType(y);
							switch (k) {
							case 2:
								t.actions.doAction("hideColumns", y);
								break;
							case 1:
								t.actions.doAction("hideRows", y);
								break;
							case 0:
								i ? t.actions.doAction("hideColumns", y) : t.actions.doAction("hideRows", y);
								break
							}
							break;
						case "unhide":
							k = t.spreadActions.getSelectionType(y);
							switch (k) {
							case 2:
								t.actions.doAction("unHideColumns", y);
								break;
							case 1:
								t.actions.doAction("unHideRows", y);
								break;
							case 0:
								i ? t.actions.doAction("unHideColumns", y) : t.actions.doAction("unHideRows", y);
								break
							}
							break;
						case "headers":
							r === undefined && (r = new t.HeaderCellsDialog),
							k = t.spreadActions.getSelectionType(y);
							switch (k) {
							case 2:
								r.open("col");
								break;
							case 1:
								r.open("row");
								break
							}
							break;
						case "insert":
							t.actions.doAction("insertSheet", y);
							break;
						case "delete":
							t.actions.doAction("deleteSheet", y);
							break;
						case "protectsheet":
							d = y.getActiveSheet().getIsProtected(),
							d ? t.actions.doAction("protectSheet", y, !1) : (g = new t.ProtectionOptionDialog, g.open());
							break;
						case "hideSheet":
							t.actions.doAction("hideSheet", y);
							break;
						case "unhideSheet":
							t.actions.doAction("unhideSheet", y);
							break;
						case "slicerCut":
							t.actions.doAction("slicerCut", y);
							break;
						case "slicerCopy":
							t.actions.doAction("slicerCopy", y);
							break;
						case "slicerPasteAll":
							t.actions.doAction("paste", y, 0);
							break;
						case "slicerSortAToZ":
							t.actions.doAction("sortSlicerItems", y, 1);
							break;
						case "slicerSortZToA":
							t.actions.doAction("sortSlicerItems", y, 2);
							break;
						case "removeSlicer":
							t.actions.doAction("deleteSlicer", y);
							break;
						case "slicerProperty":
							s || (s = new t.FormatSlicerDialog),
							t.util.isSlicerSelected(p) && s.open();
							break;
						case "slicerSetting":
							t.ribbon.slicerSettingDialog || (t.ribbon.slicerSettingDialog = new t.SlicerSettingDialog),
							t.util.isSlicerSelected(p) && t.ribbon.slicerSettingDialog.open();
							break
						}
					};
					$("#sheetcolor-picker").colorpicker({
						valueChanged : function (n, i) {
							i.name ? t.actions.doAction("setSheetTabColor", t.wrapper.spread, i.name) : t.actions.doAction("setSheetTabColor", t.wrapper.spread, i.color)
						}
					}),
					$("#sheetcolor-picker").colorpicker("option", "themeColors", t.wrapper.getThemeColors()),
					$("#sheet-menu").menu({
						select : y
					}),
					$("#tabstrip-menu").menu({
						select : y
					}),
					$("#slicer-menu").menu({
						select : y
					}),
					$(document).bind("mouseup", function (n) {
						if (n.button !== 2) {
							var t = $(n.target).closest("a");
							if (!$(".context-menu").hasClass("hidden")) {
								if (t && (t.attr("aria-haspopup") || t.hasClass("link-disable")))
									return !1;
								$(".context-menu").addClass("hidden")
							}
						}
					}),
					t.wrapper.spreadElement.bind("mouseup", function (n) {
						n.button !== 2 && ($(".context-menu").hasClass("hidden") || $(".context-menu").addClass("hidden"))
					}),
					$(document).bind("contextmenu", function (t) {
						n.util.cancelDefault(t)
					}),
					t.wrapper.spreadElement.bind("contextmenu", function (r) {
						var f = t.wrapper.spread.getActiveSheet(),
						c = !1,
						g,
						w,
						y,
						it,
						tt,
						e,
						ft,
						l,
						v,
						s,
						o,
						h;
						k(),
						it = t.util.getCanvas(t.wrapper.spread),
						g = $(it).offset(),
						w = r.pageX - g.left,
						y = r.pageY - g.top,
						tt = it.getBoundingClientRect();
						if (w > tt.width || y > tt.height)
							return;
						e = f.hitTest(w, y);
						if (e.x >= 0 && e.y >= 0 && e.row !== void 0 && e.col !== void 0) {
							if (e.commentHitInfo)
								$(".context-menu").hasClass("hidden") || $(".context-menu").addClass("hidden"), ft = e.commentHitInfo.comment, l = $("div.gc-spread-floatBlockCanvas-container textArea"), l.length && (v = l.parents("div.gc-spread-floatBlockCanvas-container")[0], v && p(v));
							else {
								f.getComments().forEach(function (n) {
									n.commentState(3)
								}),
								s = e.col,
								o = e.row;
								switch (e.hitTestType) {
								case 1:
									t.util.findSelection(f, o, s) === null && f.setSelection(-1, s, f.getRowCount(), 1),
									o !== undefined && s !== undefined && (i = !0, u("col"), c = !0);
									break;
								case 2:
									t.util.findSelection(f, o, s) === null && f.setSelection(o, -1, 1, f.getColumnCount()),
									o !== undefined && s !== undefined && (i = !1, u("row"), c = !0);
									break;
								case 3:
									if (t.util.findSelection(f, o, s) === null) {
										if (e.floatingObjectHitInfo)
											return $(".context-menu").addClass("hidden"), !1;
										f.clearSelection(),
										f.endEdit(),
										f.setActiveCell(o, s),
										t.util.triggerSheetEvent(f, n.Events.EnterCell, {
											sheet : f,
											sheetName : f.getName(),
											row : e.row,
											col : e.col
										})
									}
									o === undefined || s === undefined || f.isEditing() || (u("cell"), b(f), c = !0);
									break;
								default:
									t.util.findSelection(f, o, s) === null && f.setSelection(-1, -1, f.getRowCount(), f.getColumnCount()),
									o !== undefined && s !== undefined && (u("cell"), c = !0);
									break
								}
							}
							if (c) {
								$(".context-menu").removeClass("hidden"),
								$("#sheet-menu").removeClass("hidden"),
								$("#tabstrip-menu").addClass("hidden"),
								$("#slicer-menu").addClass("hidden"),
								$("#comment-menu").addClass("hidden"),
								h = $("#sheet-menu");
								if (devicePixelRatio === 1)
									h.position({
										my : "left top",
										of : r
									});
								else {
									h.css("position", "absolute");
									if (r) {
										var a = h.width(),
										nt = h.height(),
										rt = r.pageX,
										ut = r.pageY;
										r.pageX + a > document.body.clientWidth && r.pageX - a > 0 && (rt = r.pageX - a),
										r.pageY + nt > document.body.clientHeight && r.pageY - nt > 0 && (ut = r.pageY - nt),
										h[0].style.left = rt + "px",
										h[0].style.top = ut + "px"
									}
								}
								d()
							}
						}
					}),
					g()
				}
				function y(n) {
					return n.getIsProtected()
				}
				function tt() {
					var i = t.util.getTabStripCanvas();
					$(i).bind("contextmenu", function (r) {
						var h,
						c,
						l,
						u,
						s,
						e,
						o,
						f;
						if (r.button === 2) {
							u = t.wrapper.spread,
							h = $(i).offset(),
							c = r.pageX - h.left,
							l = r.pageY - h.top,
							s = u._tab.hitTest(c, l),
							e = s.index;
							if (e !== undefined && s.element !== "navButton") {
								o = u.getSheet(e),
								u._changeSheetForFormulaAcrossSheet(o, !0),
								f = o._formulaTextBox;
								if (f)
									if (f.canAppendRange())
										return;
								nt(),
								rt(),
								$(".context-menu").removeClass("hidden"),
								$("#tabstrip-menu").removeClass("hidden"),
								$("#sheet-menu").addClass("hidden"),
								$("#comment-menu").addClass("hidden"),
								$("#slicer-menu").addClass("hidden"),
								$("#tabstrip-menu").position({
									my : "left top",
									of : r
								})
							}
							n.util.cancelDefault(r)
						}
					}),
					$(i).bind("mouseup", function (n) {
						n.button !== 2 && ($(".context-menu").hasClass("hidden") || $(".context-menu").addClass("hidden"))
					})
				}
				function p(i) {
					var u = t.wrapper.spread.getActiveSheet(),
					r = $(i).find(".gc-spread-host-container");
					r.length !== 0 && (r.unbind(".comment"), r.bind("click.comment", function (t) {
							t.button === 2 && n.util.cancelDefault(t)
						}))
				}
				function nt() {
					var r = t.wrapper.spread.sheets,
					i = $("#unhideSheet").find("a"),
					u = r.length,
					n;
					if (u <= 0)
						return;
					for (n = 0; n < u; n++)
						if (!r[n].visible()) {
							i.hasClass("link-disable") && i.removeClass("link-disable");
							return
						}
					i.addClass("link-disable")
				}
				function rt() {
					var i = t.wrapper.spread.getActiveSheet(),
					n = $("#protectsheet").children().children()[1];
					n.textContent = y(i) ? t.res.contextMenu.unprotectsheet : t.res.contextMenu.protectsheet
				}
				function u(n) {
					var i = $("#insertDialog").children().children()[1],
					t = $("#deleteDialog").children().children()[1],
					u = i.textContent.split(".")[0],
					r = t.textContent.split(".")[0];
					switch (n) {
					case "col":
						i.textContent = u,
						t.textContent = r,
						$(".row-menu").addClass("hidden"),
						$(".cell-menu").addClass("hidden"),
						$(".column-menu").removeClass("hidden");
						break;
					case "row":
						i.textContent = u,
						t.textContent = r,
						$(".cell-menu").addClass("hidden"),
						$(".column-menu").addClass("hidden"),
						$(".row-menu").removeClass("hidden");
						break;
					case "cell":
						i.textContent = u + "...",
						t.textContent = r + "...",
						$(".column-menu").addClass("hidden"),
						$(".row-menu").addClass("hidden"),
						$(".cell-menu").removeClass("hidden")
					}
				}
				function b(n) {
					if (!n)
						return;
					var u = n.getActiveRowIndex(),
					r = n.getActiveColumnIndex(),
					f = y(n),
					i = n.getCell(u, r).locked(),
					t = n.getComment(u, r);
					t ? ($(".comment-create").addClass("hidden"), f && i ? ($("#editComment").addClass("hidden"), $("#deleteComment").addClass("hidden"), $("#formatComment").addClass("hidden")) : $(".comment-edit").removeClass("hidden"), t.displayMode() === 2 ? ($("#hideComment").addClass("hidden"), $("#unHideComment").removeClass("hidden")) : t.displayMode() === 1 && ($("#hideComment").removeClass("hidden"), $("#unHideComment").addClass("hidden"))) : ($(".comment-edit").addClass("hidden"), f && i ? ($(".comment-create").addClass("hidden"), $(".comment-separator").addClass("hidden")) : ($(".comment-create").removeClass("hidden"), w(n) && $("#deleteComment").removeClass("hidden"), $(".comment-separator").removeClass("hidden")))
				}
				function w(n) {
					var o = n.getSelections(),
					s = o.length,
					r = n.getComments(),
					h = r.length,
					t,
					e,
					f,
					i,
					u;
					if (s <= 0 || h <= 0)
						return !1;
					for (t = 0; t < h; t++)
						for (e = r[t]._rowIndex, f = r[t]._colIndex, i = 0; i < s; i++) {
							u = o[i];
							if (u.intersect(e, f, 1, 1))
								return !0
						}
					return !1
				}
				function k() {
					var u = t.wrapper.spread.getActiveSheet(),
					n = t.util.getSelectedSlicers(u),
					i,
					r;
					if (n && n.length !== 0)
						for (i in n)
							r = n[i], r.isSelected(!1);
					else
						return
				}
				function g() {
					$(".paste-option-li").removeClass("ui-menu-item");
					var n = $(".paste-option-li").find("ul:first");
					$(n).removeAttr("style"),
					$(n).removeClass(),
					$(n).addClass("paste-option-menu")
				}
				function d() {
					var i = t.wrapper.spread.getActiveSheet(),
					n = i;
					n.isPasteFloatingObject() ? ($("#pasteFormulas").hide(), $("#pasteValues").hide(), $("#pasteFormatting").hide()) : ($("#pasteFormulas").show(), $("#pasteValues").show(), $("#pasteFormatting").show())
				}
				i.addTabStripEvents = tt,
				i.addCommentEvents = p;
				var l,
				a,
				v,
				c,
				f,
				e,
				o,
				r,
				h,
				s,
				ut = "";
				t.loader.ready(function () {
					it()
				})
			})(t.contextMenu || (t.contextMenu = {}));
			var i = t.contextMenu
		})(n.designer || (n.designer = {}));
		var t = n.designer
	})(n.Sheets || (n.Sheets = {}));
	var t = n.Sheets
})(GcSpread || (GcSpread = {}))
