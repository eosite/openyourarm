var __extends = this.__extends || function (n, t) {
	function r() {
		this.constructor = n
	}
	for (var i in t)
		t.hasOwnProperty(i) && (n[i] = t[i]);
	r.prototype = t.prototype,
	n.prototype = new r
}, GcSpread;
(function (n) {
	(function (n) {
		(function (n) {
			var r = "sliderpanel",
			i = 30,
			t = function (t) {
				function r() {
					t.apply(this, arguments)
				}
				return __extends(r, t),
				r.prototype._create = function () {
					var t,
					i;
					this._spreadPanel = n.wrapper.spreadElement,
					this._sliderHandleDOM = $(".design-mode-panel-handler"),
					this._spreadResizeStartEvent = "mousedown.resizeStart",
					this._spreadResizeEndEvent = "mouseup.resizeEnd",
					this._spreadContinueResizeEvent = "mousemove.continueResize",
					this._isCapture = !1,
					this._gap = 0,
					this._xOffset = 0,
					t = this.element,
					i = $("<div>").css({
							background : "-webkit-gradient(linear, left top, left bottom, color-stop(15%,#E4E5E8), color-stop(85%, rgb(211, 211, 211)))",
							color : "rgba(0, 0, 0, 0.6)"
						}),
					$("<label>").text(this.options.title).css({
						font : "Bold 12pt Calibri"
					}).appendTo(i),
					i.appendTo(t);
					var f = i.height(),
					u = t.height(),
					r = 0;
					isNaN(f) || isNaN(u) || (r = u - f - 18),
					this._sliderPanelContent = $("<div>").css({
							height : r + "px",
							width : "100%",
							overflow : "auto"
						}).addClass("slider-panel-content").appendTo(t),
					this._guidesLine = $("<div>").addClass("slider-panel-guidesline").appendTo(t),
					this._addEvents()
				},
				r.prototype._setOption = function (n, t) {},
				r.prototype._addEvents = function () {
					var t = this,
					i = $(window).width();
					this._sliderHandleDOM.bind(this._spreadResizeStartEvent, function (i) {
						t._xOffset = i.pageX,
						t._isCapture || ($(document).bind(t._spreadContinueResizeEvent, function (i) {
								var r = $(n.util.getCanvas(n.wrapper.spread)).offset(),
								f = i.pageX,
								u = r.top;
								t._guidesLine.css("display", "inline-block"),
								t._guidesLine.offset({
									left : i.pageX,
									top : r.top
								})
							}).bind(t._spreadResizeEndEvent, function (n) {
								$(document).unbind(t._spreadContinueResizeEvent),
								$(document).unbind(t._spreadResizeEndEvent),
								t._guidesLine.css("display", "none"),
								t._xOffset = n.pageX - t._xOffset,
								t._refreshSize(t._xOffset),
								t._isCapture = !1
							}), t._isCapture = !0)
					}),
					$(window).resize(function () {
						t._refreshSize()
					})
				},
				r.prototype._refreshSize = function (t) {
					var e = $(".content"),
					f = this.element,
					o = $(".content").children(".fill-spread-content").height(),
					r,
					u;
					if (f.is(":visible")) {
						t || (t = 0),
						r = parseInt(f.css("width"));
						if (isNaN(r))
							return;
						r = r - t,
						r < 0 && (r = 0),
						u = $(window).width() - r - this._gap,
						u < i && (u = i, r = $(window).width() - u - this._gap),
						e.css("width", u),
						n.wrapper.spreadElement.css("width", u),
						f.css("width", r),
						n.wrapper.spread.refresh()
					}
					e.css("height", o)
				},
				r.prototype.open = function () {
					var i,
					r,
					u,
					t;
					if (this.element.is(":visible"))
						return;
					i = $(window).width();
					if (!i || isNaN(i))
						return;
					this._gap = 0,
					r = parseInt(this._sliderHandleDOM.css("border-width")),
					isNaN(r) || (this._gap += 2 * r),
					u = 1,
					this._gap += 2 * u,
					t = 0,
					isNaN(this.options.width) || (t = this.options.width),
					this._spreadPanel.css({
						display : "inline-block",
						width : i - this._gap - t + "px"
					}),
					n.wrapper.spread.refresh(),
					this.element.css({
						display : "inline-block",
						width : t + "px",
						border : u + "px solid lightgray"
					}),
					this.element.show(),
					this._sliderHandleDOM.css({
						display : "inline-block"
					}),
					this._sliderHandleDOM.show()
				},
				r.prototype.close = function () {
					if (!this.element.is(":visible"))
						return;
					this.element.hide();
					var t = $(".content");
					t.css("width", "100%"),
					this._spreadPanel.css("width", "100%"),
					n.wrapper.spread.refresh()
				},
				r.prototype.getContent = function () {
					if (this._sliderPanelContent)
						return this._sliderPanelContent
				},
				r.DefaultOptions = {
					title : n.res.sliderPanel.title,
					width : 250,
					backColor : "white"
				},
				r
			}
			(gcui.gcuiWidget);
			n.SliderPanel = t,
			t.prototype.options = $.extend(!0, {}, gcui.gcuiWidget.prototype.options, t.DefaultOptions),
			$.gcui.registerWidget(r, t.prototype)
		})(n.designer || (n.designer = {}));
		var t = n.designer
	})(n.Sheets || (n.Sheets = {}));
	var t = n.Sheets
})(GcSpread || (GcSpread = {}))
