var __extends = this.__extends || function (n, t) {
	function r() {
		this.constructor = n
	}
	for (var i in t)
		t.hasOwnProperty(i) && (n[i] = t[i]);
	r.prototype = t.prototype,
	n.prototype = new r
}, GcSpread;
(function (n) {
	(function (n) {
		(function (t) {
			var i,
			u,
			r;
			t.spreadMeta = {
				style : {
					properties : {
						formatter : {
							type : t.PrimitiveTypes.STRING
						},
						backColor : {
							type : t.PrimitiveTypes.STRING
						},
						foreColor : {
							type : t.PrimitiveTypes.STRING
						},
						font : {
							type : t.PrimitiveTypes.STRING
						},
						hAlign : {
							type : t.PrimitiveTypes.NUMBER,
							defaultValue : 3
						},
						vAlign : {
							type : t.PrimitiveTypes.NUMBER,
							defaultValue : 1
						},
						textIndent : {
							type : t.PrimitiveTypes.NUMBER,
							defaultValue : 0
						},
						wordWrap : {
							type : t.PrimitiveTypes.BOOLEAN,
							defaultValue : !1
						},
						shrinkToFit : {
							type : t.PrimitiveTypes.BOOLEAN,
							defaultValue : !1
						},
						locked : {
							type : t.PrimitiveTypes.BOOLEAN,
							defaultValue : !0
						},
						borderTop : {
							type : t.PrimitiveTypes.OBJECT
						},
						borderLeft : {
							type : t.PrimitiveTypes.OBJECT
						},
						borderRight : {
							type : t.PrimitiveTypes.OBJECT
						},
						borderBottom : {
							type : t.PrimitiveTypes.OBJECT
						},
						textDecoration : {
							type : t.PrimitiveTypes.NUMBER,
							defaultValue : !0
						}
					}
				}
			},
			i = function (i) {
				function r(n) {
					i.call(this, n, t.spreadMeta.style, t.spreadMeta),
					this._values = {},
					this._genProperties()
				}
				return __extends(r, i),
				r.prototype._genProperty = function (n) {
					var i = this,
					r = this._meta.properties[n];
					return ko.computed({
						read : function () {
							var r = i._values[n];
							return r === undefined ? this._values[n] = i._getValue(n) : r === t.BaseMetaObject.undefinedValue ? undefined : r
						},
						write : function (u) {
							var f = u;
							f === undefined ? f = t.BaseMetaObject.undefinedValue : typeof f !== r.type && (f = t.BaseMetaObject._convert(f, r.type)),
							i._values[n] = f
						},
						owner : this
					})
				},
				r.prototype.result = function () {
					var r = this,
					i = new n.Style;
					return Object.getOwnPropertyNames(this._values).forEach(function (n) {
						var u = r._values[n];
						u !== undefined && u !== t.BaseMetaObject.indeterminateValue && (u === t.BaseMetaObject.undefinedValue && (u = undefined), i[n] = u)
					}),
					i
				},
				r.prototype._getValue = function (n) {},
				r
			}
			(t.BaseMetaObject),
			t.StyleShadowObjectBase = i,
			u = function (n) {
				function t(t) {
					this._style = t,
					n.call(this, t)
				}
				return __extends(t, n),
				t.prototype._getValue = function (n) {
					return this._style === undefined || this._style === null ? undefined : this._style[n]
				},
				t
			}
			(i),
			t.StyleShadowObject = u,
			r = function (n) {
				function i(t, i) {
					this._sheet = t.getActiveSheet(),
					i === undefined && (i = this._sheet.getSelections()),
					this._ranges = i,
					n.call(this, t)
				}
				return __extends(i, n),
				i.prototype._getValue = function (n) {
					for (var e = t.BaseMetaObject.undefinedValue, i, r, u, o, f = 0; f < this._ranges.length; f++)
						for (i = this._ranges[f], i.col === -1 && (i.col = 0), i.row === -1 && (i.row = 0), r = 0; r < i.rowCount; r++)
							for (u = 0; u < i.colCount; u++) {
								o = this._getValueCore(i.row + r, i.col + u, n);
								if (e === t.BaseMetaObject.undefinedValue)
									e = o;
								else if (e != o)
									return t.BaseMetaObject.indeterminateValue
							}
					return e
				},
				i.prototype._getValueCore = function (n, i, r) {
					var u = this._sheet.getActualStyle(n, i),
					e,
					f;
					if (u === undefined || u === null)
						return undefined;
					if (r === "font" && u.font) {
						e = t.util.parseFont(t.res.defaultFont),
						f = t.util.parseFont(u.font);
						if (f.fontFamily === e.fontFamily && f.fontSize === e.fontSize && f.fontStyle === e.fontStyle && f.fontWeight === e.fontWeight)
							return undefined
					}
					return r === "foreColor" && u.foreColor === "Text 1" ? undefined : u[r]
				},
				i
			}
			(i),
			t.SpreadStyleShadowObject = r
		})(n.designer || (n.designer = {}));
		var t = n.designer
	})(n.Sheets || (n.Sheets = {}));
	var t = n.Sheets
})(GcSpread || (GcSpread = {}))
