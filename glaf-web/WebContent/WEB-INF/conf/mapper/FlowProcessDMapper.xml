<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.FlowProcessDMapper">

 	<resultMap id="flowProcessDResultMap"	type="com.glaf.isdp.domain.FlowProcessD">
        <id property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="mainId" column="MAIN_ID" jdbcType="VARCHAR"/>
        <result property="fileId" column="FILEID" jdbcType="VARCHAR"/>
        <result property="name" column="NAME" jdbcType="VARCHAR"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="actor" column="ACTOR" jdbcType="VARCHAR"/>
        <result property="ctime" column="CTIME" jdbcType="TIMESTAMP"/>
        <result property="version" column="VERSION" jdbcType="VARCHAR"/>
        <result property="tcadFile" column="TCADFILE" jdbcType="VARCHAR"/>
        <result property="isSave" column="ISSAVE" jdbcType="INTEGER"/>
        <result property="intFlag" column="INTFLAG" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertFlowProcessD" parameterType="com.glaf.isdp.domain.FlowProcessD">
		insert into FLOW_PROCESS_D 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="mainId != null">
				,MAIN_ID 
			</if>
			<if test="fileId != null">
				,FILEID 
			</if>
			<if test="name != null">
				,NAME 
			</if>
			<if test="content != null">
				,CONTENT 
			</if>
			<if test="actor != null">
				,ACTOR 
			</if>
			<if test="ctime != null">
				,CTIME 
			</if>
			<if test="version != null">
				,VERSION 
			</if>
			<if test="tcadFile != null">
				,TCADFILE 
			</if>
			<if test="isSave != null">
				,ISSAVE 
			</if>
			<if test="intFlag != null">
				,INTFLAG 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="mainId != null">
				,#{mainId, jdbcType=VARCHAR}
			</if>
			<if test="fileId != null">
				,#{fileId, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="actor != null">
				,#{actor, jdbcType=VARCHAR}
			</if>
			<if test="ctime != null">
				,#{ctime, jdbcType=TIMESTAMP}
			</if>
			<if test="version != null">
				,#{version, jdbcType=VARCHAR}
			</if>
			<if test="tcadFile != null">
				,#{tcadFile, jdbcType=VARCHAR}
			</if>
			<if test="isSave != null">
				,#{isSave, jdbcType=INTEGER}
			</if>
			<if test="intFlag != null">
				,#{intFlag, jdbcType=INTEGER}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateFlowProcessD" parameterType="com.glaf.isdp.domain.FlowProcessD">
		update FLOW_PROCESS_D
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="mainId != null">
				MAIN_ID = #{mainId, jdbcType=VARCHAR},
			</if>
			<if test="fileId != null">
				FILEID = #{fileId, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				CONTENT = #{content, jdbcType=VARCHAR},
			</if>
			<if test="actor != null">
				ACTOR = #{actor, jdbcType=VARCHAR},
			</if>
			<if test="ctime != null">
				CTIME = #{ctime, jdbcType=TIMESTAMP},
			</if>
			<if test="version != null">
				VERSION = #{version, jdbcType=VARCHAR},
			</if>
			<if test="tcadFile != null">
				TCADFILE = #{tcadFile, jdbcType=VARCHAR},
			</if>
			<if test="isSave != null">
				ISSAVE = #{isSave, jdbcType=INTEGER},
			</if>
			<if test="intFlag != null">
				INTFLAG = #{intFlag, jdbcType=INTEGER},
			</if>
        </trim>
		where
          ID = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteFlowProcessDById" parameterType="string"> 
        delete from FLOW_PROCESS_D
        where ID =	#{id}
	</delete>

	
	<delete id="deleteFlowProcessDs" parameterType="com.glaf.isdp.query.FlowProcessDQuery">
		delete from FLOW_PROCESS_D
		where ( 
 			  ID IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getFlowProcessDById" parameterType="string" resultMap="flowProcessDResultMap">
		select * from FLOW_PROCESS_D where ID = #{id}
	</select>


	<select id="getFlowProcessDs" 
	    parameterType="com.glaf.isdp.query.FlowProcessDQuery"
		resultMap="flowProcessDResultMap">
		select distinct E.*
		<include refid="selectFlowProcessDsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getFlowProcessDCount" 
	    parameterType="com.glaf.isdp.query.FlowProcessDQuery"
		resultType="int">
		select count(*)
		<include refid="selectFlowProcessDsSql" />
	</select>


	<sql id="selectFlowProcessDsSql">

		from FLOW_PROCESS_D E
		
		<where>
		       1 = 1  
			 
	        
			<if test="mainId != null and mainId != '' ">
				and E.MAIN_ID = #{mainId}
            </if>

			<if test="mainIdLike != null and mainIdLike != '' ">
				and E.MAIN_ID like #{mainIdLike}
            </if>

			<if test="mainIds != null and mainIds.size() &gt; 0">
			    and E.MAIN_ID IN
                <foreach item="x_mainId" index="index" collection="mainIds" 
                     open="(" separator="," close=")">
                  #{x_mainId}
                </foreach>
			</if>
	        
			<if test="fileId != null and fileId != '' ">
				and E.FILEID = #{fileId}
            </if>

			<if test="fileIdLike != null and fileIdLike != '' ">
				and E.FILEID like #{fileIdLike}
            </if>

			<if test="fileIds != null and fileIds.size() &gt; 0">
			    and E.FILEID IN
                <foreach item="x_fileId" index="index" collection="fileIds" 
                     open="(" separator="," close=")">
                  #{x_fileId}
                </foreach>
			</if>
	        
			<if test="name != null and name != '' ">
				and E.NAME = #{name}
            </if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
            </if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME IN
                <foreach item="x_name" index="index" collection="names" 
                     open="(" separator="," close=")">
                  #{x_name}
                </foreach>
			</if>
	        
			<if test="content != null and content != '' ">
				and E.CONTENT = #{content}
            </if>

			<if test="contentLike != null and contentLike != '' ">
				and E.CONTENT like #{contentLike}
            </if>

			<if test="contents != null and contents.size() &gt; 0">
			    and E.CONTENT IN
                <foreach item="x_content" index="index" collection="contents" 
                     open="(" separator="," close=")">
                  #{x_content}
                </foreach>
			</if>
	        
			<if test="actor != null and actor != '' ">
				and E.ACTOR = #{actor}
            </if>

			<if test="actorLike != null and actorLike != '' ">
				and E.ACTOR like #{actorLike}
            </if>

			<if test="actors != null and actors.size() &gt; 0">
			    and E.ACTOR IN
                <foreach item="x_actor" index="index" collection="actors" 
                     open="(" separator="," close=")">
                  #{x_actor}
                </foreach>
			</if>

			<if test="ctimeGreaterThanOrEqual != null">
				and E.CTIME &gt;= #{ctimeGreaterThanOrEqual}
            </if>

			<if test="ctimeLessThanOrEqual != null">
				and E.CTIME &lt;= #{ctimeLessThanOrEqual}
            </if>

	        
			<if test="version != null and version != '' ">
				and E.VERSION = #{version}
            </if>

			<if test="versionLike != null and versionLike != '' ">
				and E.VERSION like #{versionLike}
            </if>

			<if test="versions != null and versions.size() &gt; 0">
			    and E.VERSION IN
                <foreach item="x_version" index="index" collection="versions" 
                     open="(" separator="," close=")">
                  #{x_version}
                </foreach>
			</if>
	        
			<if test="tcadFile != null and tcadFile != '' ">
				and E.TCADFILE = #{tcadFile}
            </if>

			<if test="tcadFileLike != null and tcadFileLike != '' ">
				and E.TCADFILE like #{tcadFileLike}
            </if>

			<if test="tcadFiles != null and tcadFiles.size() &gt; 0">
			    and E.TCADFILE IN
                <foreach item="x_tcadFile" index="index" collection="tcadFiles" 
                     open="(" separator="," close=")">
                  #{x_tcadFile}
                </foreach>
			</if>

			<if test="isSave != null">
				and E.ISSAVE = #{isSave}
            </if>

			<if test="isSaveGreaterThanOrEqual != null">
				and E.ISSAVE &gt;= #{isSaveGreaterThanOrEqual}
            </if>

			<if test="isSaveLessThanOrEqual != null">
				and E.ISSAVE &lt;= #{isSaveLessThanOrEqual}
            </if>

			<if test="isSaves != null and isSaves.size() &gt; 0">
			    and E.ISSAVE IN
                <foreach item="x_isSave" index="index" collection="isSaves" 
                     open="(" separator="," close=")">
                  #{x_isSave}
                </foreach>
			</if>
      

			<if test="intFlag != null">
				and E.INTFLAG = #{intFlag}
            </if>

			<if test="intFlagGreaterThanOrEqual != null">
				and E.INTFLAG &gt;= #{intFlagGreaterThanOrEqual}
            </if>

			<if test="intFlagLessThanOrEqual != null">
				and E.INTFLAG &lt;= #{intFlagLessThanOrEqual}
            </if>

			<if test="intFlags != null and intFlags.size() &gt; 0">
			    and E.INTFLAG IN
                <foreach item="x_intFlag" index="index" collection="intFlags" 
                     open="(" separator="," close=")">
                  #{x_intFlag}
                </foreach>
			</if>
      
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

</mapper>