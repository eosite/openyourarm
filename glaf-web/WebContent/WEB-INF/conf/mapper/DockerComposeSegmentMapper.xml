<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.deployment.mapper.DockerComposeSegmentMapper">

	<resultMap id="dockerComposeSegmentResultMap"
		type="com.glaf.deployment.domain.DockerComposeSegment">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="deploymentId" column="DEPLOYMENTID_"
			jdbcType="VARCHAR" />
		<result property="title" column="TITLE_" jdbcType="VARCHAR" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="image" column="IMAGE_" jdbcType="VARCHAR" />
		<result property="imageId" column="IMAGEID_" jdbcType="BIGINT" />
		<result property="containerName" column="CONTAINER_NAME_"
			jdbcType="VARCHAR" />
		<result property="content" column="CONTENT_" jdbcType="VARCHAR" />
		<result property="contextPath" column="CONTEXTPATH_" jdbcType="VARCHAR" />
		<result property="exposePort" column="EXPOSE_PORT_" jdbcType="VARCHAR" />
		<result property="port" column="PORT_" jdbcType="INTEGER" />
		<result property="sortNo" column="SORTNO_" jdbcType="INTEGER" />
		<result property="databaseId" column="DATABASEID_" jdbcType="BIGINT" />
		<result property="serverId" column="SERVERID_" jdbcType="BIGINT" />
		<result property="active" column="ACTIVE_" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertDockerComposeSegment" parameterType="com.glaf.deployment.domain.DockerComposeSegment">
		insert into DC_DOCKER_COMPOSE_SEGMENT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="deploymentId != null">
				,DEPLOYMENTID_
			</if>
			<if test="title != null">
				,TITLE_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="image != null">
				,IMAGE_
			</if>
			<if test="imageId != null">
				,IMAGEID_
			</if>
			<if test="containerName != null">
				,CONTAINER_NAME_
			</if>
			<if test="content != null">
				,CONTENT_
			</if>
			<if test="contextPath != null">
				,CONTEXTPATH_
			</if>
			<if test="exposePort != null">
				,EXPOSE_PORT_
			</if>
			<if test="port != null">
				,PORT_
			</if>
			<if test="databaseId != null">
				,DATABASEID_
			</if>
			<if test="serverId != null">
				,SERVERID_
			</if>
			<if test="sortNo != null">
				,SORTNO_
			</if>
			<if test="active != null">
				,ACTIVE_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="deploymentId != null">
				,#{deploymentId, jdbcType=VARCHAR}
			</if>
			<if test="title != null">
				,#{title, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="image != null">
				,#{image, jdbcType=VARCHAR}
			</if>
			<if test="imageId != null">
				,#{imageId, jdbcType=BIGINT}
			</if>
			<if test="containerName != null">
				,#{containerName, jdbcType=VARCHAR}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="contextPath != null">
				,#{contextPath, jdbcType=VARCHAR}
			</if>
			<if test="exposePort != null">
				,#{exposePort, jdbcType=VARCHAR}
			</if>
			<if test="port != null">
				,#{port, jdbcType=INTEGER}
			</if>
			<if test="databaseId != null">
				,#{databaseId, jdbcType=BIGINT}
			</if>
			<if test="serverId != null">
				,#{serverId, jdbcType=BIGINT}
			</if>
			<if test="sortNo != null">
				,#{sortNo, jdbcType=INTEGER}
			</if>
			<if test="active != null">
				,#{active, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateDockerComposeSegment" parameterType="com.glaf.deployment.domain.DockerComposeSegment">
		update DC_DOCKER_COMPOSE_SEGMENT
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="title != null">
				TITLE_ = #{title, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="image != null">
				IMAGE_ = #{image, jdbcType=VARCHAR},
			</if>
			<if test="imageId != null">
				IMAGEID_ = #{imageId, jdbcType=BIGINT},
			</if>
			<if test="containerName != null">
				CONTAINER_NAME_ = #{containerName, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				CONTENT_ = #{content, jdbcType=VARCHAR},
			</if>
			<if test="contextPath != null">
				CONTEXTPATH_ = #{contextPath, jdbcType=VARCHAR},
			</if>
			<if test="exposePort != null">
				EXPOSE_PORT_ = #{exposePort, jdbcType=VARCHAR},
			</if>
			<if test="port != null">
				PORT_ = #{port, jdbcType=INTEGER},
			</if>
			<if test="databaseId != null">
				DATABASEID_ = #{databaseId, jdbcType=BIGINT},
			</if>
			<if test="serverId != null">
				SERVERID_ = #{serverId, jdbcType=BIGINT},
			</if>
			<if test="sortNo != null">
				SORTNO_ = #{sortNo, jdbcType=INTEGER},
			</if>
			<if test="active != null">
				ACTIVE_ = #{active, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteDockerComposeSegmentById" parameterType="long">
		delete from DC_DOCKER_COMPOSE_SEGMENT
		where ID_ = #{id}
	</delete>


	<select id="getDockerComposeSegmentById" parameterType="long"
		resultMap="dockerComposeSegmentResultMap">
		select * from DC_DOCKER_COMPOSE_SEGMENT where ID_ = #{id}
	</select>


	<select id="getDockerComposeSegments" parameterType="com.glaf.deployment.query.DockerComposeSegmentQuery"
		resultMap="dockerComposeSegmentResultMap">
		select distinct E.*
		<include refid="selectDockerComposeSegmentsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORTNO_ asc
			</otherwise>
		</choose>
	</select>


	<select id="getDockerComposeSegmentCount" parameterType="com.glaf.deployment.query.DockerComposeSegmentQuery"
		resultType="int">
		select count(*)
		<include refid="selectDockerComposeSegmentsSql" />
	</select>


	<sql id="selectDockerComposeSegmentsSql">

		from DC_DOCKER_COMPOSE_SEGMENT E

		<where>
			1 = 1

			<if test="deploymentId != null and deploymentId != '' ">
				and E.DEPLOYMENTID_ = #{deploymentId}
			</if>

			<if test="titleLike != null and titleLike != '' ">
				and E.TITLE_ like #{titleLike}
			</if>

			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
			</if>

			<if test="image != null and image != '' ">
				and E.IMAGE_ = #{image}
			</if>

			<if test="imageLike != null and imageLike != '' ">
				and E.IMAGE_ like #{imageLike}
			</if>

			<if test="containerName != null and containerName != '' ">
				and E.CONTAINER_NAME_ = #{containerName}
			</if>

			<if test="containerNameLike != null and containerNameLike != '' ">
				and E.CONTAINER_NAME_ like #{containerNameLike}
			</if>

			<if test="active != null and active != '' ">
				and E.ACTIVE_ = #{active}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

			<if test="dataRequest != null and dataRequest.filter != null ">
				<include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>

		</where>
	</sql>

</mapper>