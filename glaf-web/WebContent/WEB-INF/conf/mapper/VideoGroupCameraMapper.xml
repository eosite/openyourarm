<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.video.mapper.VideoGroupCameraMapper">

	<resultMap id="videoGroupCameraResultMap" type="com.glaf.video.domain.VideoGroupCamera">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="developerId" column="DEVELOPERID_" jdbcType="VARCHAR" />
		<result property="groupId" column="GROUPID_" jdbcType="VARCHAR" />
		<result property="cameraId" column="CAMERAID_" jdbcType="VARCHAR" />
	</resultMap>


	<insert id="insertVideoGroupCamera" parameterType="com.glaf.video.domain.VideoGroupCamera">
		insert into VIDEO_GROUP_CAMERA
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="developerId != null">
				,DEVELOPERID_
			</if>
			<if test="groupId != null">
				,GROUPID_
			</if>
			<if test="cameraId != null">
				,CAMERAID_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="developerId != null">
				,#{developerId, jdbcType=VARCHAR}
			</if>
			<if test="groupId != null">
				,#{groupId, jdbcType=VARCHAR}
			</if>
			<if test="cameraId != null">
				,#{cameraId, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertVideoGroupCamera" parameterType="java.util.List">
		insert into VIDEO_GROUP_CAMERA (
		ID_
		,DEVELOPERID_
		,GROUPID_
		,CAMERAID_
		)
		values
		<foreach collection="list" item="videoGroupCamera" index="index"
			separator=",">
			(
			#{videoGroupCamera.id, jdbcType=VARCHAR}
			,#{videoGroupCamera.developerId, jdbcType=VARCHAR}
			,#{videoGroupCamera.groupId, jdbcType=VARCHAR}
			,#{videoGroupCamera.cameraId, jdbcType=VARCHAR}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertVideoGroupCamera_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="videoGroupCamera" index="index">
			insert into VIDEO_GROUP_CAMERA (
			ID_
			,DEVELOPERID_
			,GROUPID_
			,CAMERAID_
			)
			values (
			#{videoGroupCamera.id, jdbcType=VARCHAR}
			,#{videoGroupCamera.developerId, jdbcType=VARCHAR}
			,#{videoGroupCamera.groupId, jdbcType=VARCHAR}
			,#{videoGroupCamera.cameraId, jdbcType=VARCHAR}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateVideoGroupCamera" parameterType="com.glaf.video.domain.VideoGroupCamera">
		update VIDEO_GROUP_CAMERA
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="developerId != null">
				DEVELOPERID_ = #{developerId, jdbcType=VARCHAR},
			</if>
			<if test="groupId != null">
				GROUPID_ = #{groupId, jdbcType=VARCHAR},
			</if>
			<if test="cameraId != null">
				CAMERAID_ = #{cameraId, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deleteVideoGroupCameraById" parameterType="string">
		delete
		from VIDEO_GROUP_CAMERA
		where ID_ = #{id}
	</delete>


	<delete id="deleteVideoGroupCamerasByGroupId" parameterType="string">
		delete from VIDEO_GROUP_CAMERA
		where GROUPID_ = #{groupId}
	</delete>


	<select id="getVideoGroupCameraById" parameterType="string"
		resultMap="videoGroupCameraResultMap">
		select * from VIDEO_GROUP_CAMERA where ID_ = #{id}
	</select>


	<select id="getVideoGroupCamerasByGroupId" parameterType="string"
		resultMap="videoGroupCameraResultMap">
		select * from VIDEO_GROUP_CAMERA where GROUPID_ = #{groupId}
	</select>


	<select id="getVideoGroupCameras" parameterType="com.glaf.video.query.VideoGroupCameraQuery"
		resultMap="videoGroupCameraResultMap">
		select distinct E.*
		<include refid="selectVideoGroupCamerasSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getVideoGroupCameraCount" parameterType="com.glaf.video.query.VideoGroupCameraQuery"
		resultType="int">
		select count(*)
		<include refid="selectVideoGroupCamerasSql" />
	</select>


	<sql id="selectVideoGroupCamerasSql">

		from VIDEO_GROUP_CAMERA E

		<where>
			1 = 1

			<if test="developerId != null and developerId != '' ">
				and E.DEVELOPERID_ = #{developerId}
			</if>

			<if test="groupId != null and groupId != '' ">
				and E.GROUPID_ = #{groupId}
			</if>

			<if test="cameraId != null and cameraId != '' ">
				and E.CAMERAID_ = #{cameraId}
			</if>

			<if test="dataRequest != null and dataRequest.filter != null ">
				<include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>

		</where>
	</sql>

</mapper>