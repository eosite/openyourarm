<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.RUtabletreeMapper">

	<resultMap id="rUtabletreeResultMap" type="com.glaf.isdp.domain.RUtabletree">
		<id property="indexId" column="INDEX_ID" jdbcType="INTEGER" />
		<result property="id" column="ID" jdbcType="VARCHAR" />
		<result property="parentId" column="PARENT_ID" jdbcType="INTEGER" />
		<result property="indexName" column="INDEX_NAME" jdbcType="VARCHAR" />
		<result property="nlevel" column="NLEVEL" jdbcType="INTEGER" />
		<result property="nodeico" column="NODEICO" jdbcType="INTEGER" />
		<result property="listno" column="LISTNO" jdbcType="INTEGER" />
		<result property="tabletype" column="TABLETYPE" jdbcType="INTEGER" />
		<result property="intdel" column="INTDEL" jdbcType="INTEGER" />
		<result property="busiessId" column="BUSIESS_ID" jdbcType="VARCHAR" />
		<result property="content" column="CONTENT" jdbcType="VARCHAR" />
		<result property="num" column="NUM" jdbcType="VARCHAR" />
		<result property="menuindex" column="MENUINDEX" jdbcType="INTEGER" />
		<result property="domainIndex" column="DOMAIN_INDEX" jdbcType="INTEGER" />
		<result property="winWidth" column="WIN_WIDTH" jdbcType="INTEGER" />
		<result property="winHeight" column="WIN_HEIGHT" jdbcType="INTEGER" />
	</resultMap>


	<insert id="insertRUtabletree" parameterType="com.glaf.isdp.domain.RUtabletree">
		insert into R_UTABLETREE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			INDEX_ID
			<if test="id != null">
				,ID
			</if>
			<if test="parentId != null">
				,PARENT_ID
			</if>
			<if test="indexName != null">
				,INDEX_NAME
			</if>
			<if test="nlevel != null">
				,NLEVEL
			</if>
			<if test="nodeico != null">
				,NODEICO
			</if>
			<if test="listno != null">
				,LISTNO
			</if>
			<if test="tabletype != null">
				,TABLETYPE
			</if>
			<if test="intdel != null">
				,INTDEL
			</if>
			<if test="busiessId != null">
				,BUSIESS_ID
			</if>
			<if test="content != null">
				,CONTENT
			</if>
			<if test="num != null">
				,NUM
			</if>
			<if test="menuindex != null">
				,MENUINDEX
			</if>
			<if test="domainIndex != null">
				,DOMAIN_INDEX
			</if>
			<if test="winWidth != null">
				,WIN_WIDTH
			</if>
			<if test="winHeight != null">
				,WIN_HEIGHT
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{indexId, jdbcType=INTEGER}

			<if test="id != null">
				,#{id, jdbcType=VARCHAR}
			</if>
			<if test="parentId != null">
				,#{parentId, jdbcType=INTEGER}
			</if>
			<if test="indexName != null">
				,#{indexName, jdbcType=VARCHAR}
			</if>
			<if test="nlevel != null">
				,#{nlevel, jdbcType=INTEGER}
			</if>
			<if test="nodeico != null">
				,#{nodeico, jdbcType=INTEGER}
			</if>
			<if test="listno != null">
				,#{listno, jdbcType=INTEGER}
			</if>
			<if test="tabletype != null">
				,#{tabletype, jdbcType=INTEGER}
			</if>
			<if test="intdel != null">
				,#{intdel, jdbcType=INTEGER}
			</if>
			<if test="busiessId != null">
				,#{busiessId, jdbcType=VARCHAR}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="num != null">
				,#{num, jdbcType=VARCHAR}
			</if>
			<if test="menuindex != null">
				,#{menuindex, jdbcType=INTEGER}
			</if>
			<if test="domainIndex != null">
				,#{domainIndex, jdbcType=INTEGER}
			</if>
			<if test="winWidth != null">
				,#{winWidth, jdbcType=INTEGER}
			</if>
			<if test="winHeight != null">
				,#{winHeight, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>


	<update id="updateRUtabletree" parameterType="com.glaf.isdp.domain.RUtabletree">
		update R_UTABLETREE
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="id != null">
				ID = #{id, jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				PARENT_ID = #{parentId, jdbcType=INTEGER},
			</if>
			<if test="indexName != null">
				INDEX_NAME = #{indexName, jdbcType=VARCHAR},
			</if>
			<if test="nlevel != null">
				NLEVEL = #{nlevel, jdbcType=INTEGER},
			</if>
			<if test="nodeico != null">
				NODEICO = #{nodeico, jdbcType=INTEGER},
			</if>
			<if test="listno != null">
				LISTNO = #{listno, jdbcType=INTEGER},
			</if>
			<if test="tabletype != null">
				TABLETYPE = #{tabletype, jdbcType=INTEGER},
			</if>
			<if test="intdel != null">
				INTDEL = #{intdel, jdbcType=INTEGER},
			</if>
			<if test="busiessId != null">
				BUSIESS_ID = #{busiessId, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				CONTENT = #{content, jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				NUM = #{num, jdbcType=VARCHAR},
			</if>
			<if test="menuindex != null">
				MENUINDEX = #{menuindex, jdbcType=INTEGER},
			</if>
			<if test="domainIndex != null">
				DOMAIN_INDEX = #{domainIndex, jdbcType=INTEGER},
			</if>
			<if test="winWidth != null">
				WIN_WIDTH = #{winWidth, jdbcType=INTEGER},
			</if>
			<if test="winHeight != null">
				WIN_HEIGHT = #{winHeight, jdbcType=INTEGER},
			</if>
		</trim>
		where
		INDEX_ID = #{indexId, jdbcType=INTEGER}

	</update>


	<delete id="deleteRUtabletreeById" parameterType="integer">
		delete from
		R_UTABLETREE
		where INDEX_ID = #{id}
	</delete>


	<delete id="deleteRUtabletrees" parameterType="com.glaf.isdp.query.RUtabletreeQuery">
		delete from R_UTABLETREE
		where (
		INDEX_ID IN
		<foreach item="x_indexId" index="index" collection="indexIds"
			open="(" separator="," close=")">
			#{x_indexId}
		</foreach>
		)
	</delete>


	<select id="getRUtabletreeById" parameterType="integer"
		resultMap="rUtabletreeResultMap">
		select * from R_UTABLETREE where INDEX_ID = #{id}
	</select>


	<select id="getRUtabletrees" parameterType="com.glaf.isdp.query.RUtabletreeQuery"
		resultMap="rUtabletreeResultMap">
		select distinct E.*
		<include refid="selectRUtabletreesSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.INDEX_ID desc
			</otherwise>
		</choose>
	</select>


	<select id="getRUtabletreeCount" parameterType="com.glaf.isdp.query.RUtabletreeQuery"
		resultType="int">
		select count(*)
		<include refid="selectRUtabletreesSql" />
	</select>


	<sql id="selectRUtabletreesSql">

		from R_UTABLETREE E

		<where>
			1 = 1


			<if test="id != null and id != '' ">
				and E.ID = #{id}
			</if>

			<if test="idLike != null and idLike != '' ">
				and E.ID like #{idLike}
			</if>

			<if test="ids != null and ids.size() &gt; 0">
				and E.ID IN
				<foreach item="x_id" index="index" collection="ids" open="("
					separator="," close=")">
					#{x_id}
				</foreach>
			</if>

			<if test="parentId != null">
				and E.PARENT_ID = #{parentId}
			</if>

			<if test="parentIdGreaterThanOrEqual != null">
				and E.PARENT_ID &gt;= #{parentIdGreaterThanOrEqual}
			</if>

			<if test="parentIdLessThanOrEqual != null">
				and E.PARENT_ID &lt;= #{parentIdLessThanOrEqual}
			</if>

			<if test="parentIds != null and parentIds.size() &gt; 0">
				and E.PARENT_ID IN
				<foreach item="x_parentId" index="index" collection="parentIds"
					open="(" separator="," close=")">
					#{x_parentId}
				</foreach>
			</if>


			<if test="indexName != null and indexName != '' ">
				and E.INDEX_NAME = #{indexName}
			</if>

			<if test="indexNameLike != null and indexNameLike != '' ">
				and E.INDEX_NAME like #{indexNameLike}
			</if>

			<if test="indexNames != null and indexNames.size() &gt; 0">
				and E.INDEX_NAME IN
				<foreach item="x_indexName" index="index" collection="indexNames"
					open="(" separator="," close=")">
					#{x_indexName}
				</foreach>
			</if>

			<if test="nlevel != null">
				and E.NLEVEL = #{nlevel}
			</if>

			<if test="nlevelGreaterThanOrEqual != null">
				and E.NLEVEL &gt;= #{nlevelGreaterThanOrEqual}
			</if>

			<if test="nlevelLessThanOrEqual != null">
				and E.NLEVEL &lt;= #{nlevelLessThanOrEqual}
			</if>

			<if test="nlevels != null and nlevels.size() &gt; 0">
				and E.NLEVEL IN
				<foreach item="x_nlevel" index="index" collection="nlevels"
					open="(" separator="," close=")">
					#{x_nlevel}
				</foreach>
			</if>


			<if test="nodeico != null">
				and E.NODEICO = #{nodeico}
			</if>

			<if test="nodeicoGreaterThanOrEqual != null">
				and E.NODEICO &gt;= #{nodeicoGreaterThanOrEqual}
			</if>

			<if test="nodeicoLessThanOrEqual != null">
				and E.NODEICO &lt;= #{nodeicoLessThanOrEqual}
			</if>

			<if test="nodeicos != null and nodeicos.size() &gt; 0">
				and E.NODEICO IN
				<foreach item="x_nodeico" index="index" collection="nodeicos"
					open="(" separator="," close=")">
					#{x_nodeico}
				</foreach>
			</if>


			<if test="listno != null">
				and E.LISTNO = #{listno}
			</if>

			<if test="listnoGreaterThanOrEqual != null">
				and E.LISTNO &gt;= #{listnoGreaterThanOrEqual}
			</if>

			<if test="listnoLessThanOrEqual != null">
				and E.LISTNO &lt;= #{listnoLessThanOrEqual}
			</if>

			<if test="listnos != null and listnos.size() &gt; 0">
				and E.LISTNO IN
				<foreach item="x_listno" index="index" collection="listnos"
					open="(" separator="," close=")">
					#{x_listno}
				</foreach>
			</if>


			<if test="tabletype != null">
				and E.TABLETYPE = #{tabletype}
			</if>

			<if test="tabletypeGreaterThanOrEqual != null">
				and E.TABLETYPE &gt;= #{tabletypeGreaterThanOrEqual}
			</if>

			<if test="tabletypeLessThanOrEqual != null">
				and E.TABLETYPE &lt;= #{tabletypeLessThanOrEqual}
			</if>

			<if test="tabletypes != null and tabletypes.size() &gt; 0">
				and E.TABLETYPE IN
				<foreach item="x_tabletype" index="index" collection="tabletypes"
					open="(" separator="," close=")">
					#{x_tabletype}
				</foreach>
			</if>


			<if test="intdel != null">
				and E.INTDEL = #{intdel}
			</if>

			<if test="intdelGreaterThanOrEqual != null">
				and E.INTDEL &gt;= #{intdelGreaterThanOrEqual}
			</if>

			<if test="intdelLessThanOrEqual != null">
				and E.INTDEL &lt;= #{intdelLessThanOrEqual}
			</if>

			<if test="intdels != null and intdels.size() &gt; 0">
				and E.INTDEL IN
				<foreach item="x_intdel" index="index" collection="intdels"
					open="(" separator="," close=")">
					#{x_intdel}
				</foreach>
			</if>


			<if test="busiessId != null and busiessId != '' ">
				and E.BUSIESS_ID = #{busiessId}
			</if>

			<if test="busiessIdLike != null and busiessIdLike != '' ">
				and E.BUSIESS_ID like #{busiessIdLike}
			</if>

			<if test="busiessIds != null and busiessIds.size() &gt; 0">
				and E.BUSIESS_ID IN
				<foreach item="x_busiessId" index="index" collection="busiessIds"
					open="(" separator="," close=")">
					#{x_busiessId}
				</foreach>
			</if>

			<if test="content != null and content != '' ">
				and E.CONTENT = #{content}
			</if>

			<if test="contentLike != null and contentLike != '' ">
				and E.CONTENT like #{contentLike}
			</if>

			<if test="contents != null and contents.size() &gt; 0">
				and E.CONTENT IN
				<foreach item="x_content" index="index" collection="contents"
					open="(" separator="," close=")">
					#{x_content}
				</foreach>
			</if>

			<if test="num != null and num != '' ">
				and E.NUM = #{num}
			</if>

			<if test="numLike != null and numLike != '' ">
				and E.NUM like #{numLike}
			</if>

			<if test="nums != null and nums.size() &gt; 0">
				and E.NUM IN
				<foreach item="x_num" index="index" collection="nums" open="("
					separator="," close=")">
					#{x_num}
				</foreach>
			</if>

			<if test="menuindex != null">
				and E.MENUINDEX = #{menuindex}
			</if>

			<if test="menuindexGreaterThanOrEqual != null">
				and E.MENUINDEX &gt;= #{menuindexGreaterThanOrEqual}
			</if>

			<if test="menuindexLessThanOrEqual != null">
				and E.MENUINDEX &lt;= #{menuindexLessThanOrEqual}
			</if>

			<if test="menuindexs != null and menuindexs.size() &gt; 0">
				and E.MENUINDEX IN
				<foreach item="x_menuindex" index="index" collection="menuindexs"
					open="(" separator="," close=")">
					#{x_menuindex}
				</foreach>
			</if>


			<if test="domainIndex != null">
				and E.DOMAIN_INDEX = #{domainIndex}
			</if>

			<if test="domainIndexGreaterThanOrEqual != null">
				and E.DOMAIN_INDEX &gt;= #{domainIndexGreaterThanOrEqual}
			</if>

			<if test="domainIndexLessThanOrEqual != null">
				and E.DOMAIN_INDEX &lt;= #{domainIndexLessThanOrEqual}
			</if>

			<if test="domainIndexs != null and domainIndexs.size() &gt; 0">
				and E.DOMAIN_INDEX IN
				<foreach item="x_domainIndex" index="index" collection="domainIndexs"
					open="(" separator="," close=")">
					#{x_domainIndex}
				</foreach>
			</if>


			<if test="winWidth != null">
				and E.WIN_WIDTH = #{winWidth}
			</if>

			<if test="winWidthGreaterThanOrEqual != null">
				and E.WIN_WIDTH &gt;= #{winWidthGreaterThanOrEqual}
			</if>

			<if test="winWidthLessThanOrEqual != null">
				and E.WIN_WIDTH &lt;= #{winWidthLessThanOrEqual}
			</if>

			<if test="winWidths != null and winWidths.size() &gt; 0">
				and E.WIN_WIDTH IN
				<foreach item="x_winWidth" index="index" collection="winWidths"
					open="(" separator="," close=")">
					#{x_winWidth}
				</foreach>
			</if>


			<if test="winHeight != null">
				and E.WIN_HEIGHT = #{winHeight}
			</if>

			<if test="winHeightGreaterThanOrEqual != null">
				and E.WIN_HEIGHT &gt;= #{winHeightGreaterThanOrEqual}
			</if>

			<if test="winHeightLessThanOrEqual != null">
				and E.WIN_HEIGHT &lt;= #{winHeightLessThanOrEqual}
			</if>

			<if test="winHeights != null and winHeights.size() &gt; 0">
				and E.WIN_HEIGHT IN
				<foreach item="x_winHeight" index="index" collection="winHeights"
					open="(" separator="," close=")">
					#{x_winHeight}
				</foreach>
			</if>

			<if test="dataRequest != null and dataRequest.filter != null ">
				<include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>

		</where>
	</sql>

</mapper>