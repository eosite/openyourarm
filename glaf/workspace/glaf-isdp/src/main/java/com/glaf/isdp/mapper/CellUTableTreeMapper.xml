<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.CellUTableTreeMapper">

 	<resultMap id="cellUTableTreeResultMap"	type="com.glaf.isdp.domain.CellUTableTree">
        <id property="indexId" column="INDEX_ID" jdbcType="INTEGER" />
        <result property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="parentId" column="PARENT_ID" jdbcType="INTEGER"/>
        <result property="indexName" column="INDEX_NAME" jdbcType="VARCHAR"/>
        <result property="nlevel" column="NLEVEL" jdbcType="INTEGER"/>
        <result property="nodeIco" column="NODEICO" jdbcType="INTEGER"/>
        <result property="listNo" column="LISTNO" jdbcType="INTEGER"/>
        <result property="tableType" column="TABLETYPE" jdbcType="INTEGER"/>
        <result property="intDel" column="INTDEL" jdbcType="INTEGER"/>
        <result property="busiessId" column="BUSIESS_ID" jdbcType="VARCHAR"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="num" column="NUM" jdbcType="VARCHAR"/>
        <result property="menuIndex" column="MENUINDEX" jdbcType="INTEGER"/>
        <result property="domainIndex" column="DOMAIN_INDEX" jdbcType="INTEGER"/>
        <result property="winWidth" column="WIN_WIDTH" jdbcType="INTEGER"/>
        <result property="winHeight" column="WIN_HEIGHT" jdbcType="INTEGER"/>
        <result property="childrenCount" column="childrenCount" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertCellUTableTree" parameterType="com.glaf.isdp.domain.CellUTableTree">
		insert into CELL_UTABLETREE 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    INDEX_ID
			<if test="id != null">
				,ID 
			</if>
			<if test="parentId != null">
				,PARENT_ID 
			</if>
			<if test="indexName != null">
				,INDEX_NAME 
			</if>
			<if test="nlevel != null">
				,NLEVEL 
			</if>
			<if test="nodeIco != null">
				,NODEICO 
			</if>
			<if test="listNo != null">
				,LISTNO 
			</if>
			<if test="tableType != null">
				,TABLETYPE 
			</if>
			<if test="intDel != null">
				,INTDEL 
			</if>
			<if test="busiessId != null">
				,BUSIESS_ID 
			</if>
			<if test="content != null">
				,CONTENT 
			</if>
			<if test="num != null">
				,NUM 
			</if>
			<if test="menuIndex != null">
				,MENUINDEX 
			</if>
			<if test="domainIndex != null">
				,DOMAIN_INDEX 
			</if>
			<if test="winWidth != null">
				,WIN_WIDTH 
			</if>
			<if test="winHeight != null">
				,WIN_HEIGHT 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{indexId, jdbcType=INTEGER}
	     
			<if test="id != null">
				,#{id, jdbcType=VARCHAR}
			</if>
			<if test="parentId != null">
				,#{parentId, jdbcType=INTEGER}
			</if>
			<if test="indexName != null">
				,#{indexName, jdbcType=VARCHAR}
			</if>
			<if test="nlevel != null">
				,#{nlevel, jdbcType=INTEGER}
			</if>
			<if test="nodeIco != null">
				,#{nodeIco, jdbcType=INTEGER}
			</if>
			<if test="listNo != null">
				,#{listNo, jdbcType=INTEGER}
			</if>
			<if test="tableType != null">
				,#{tableType, jdbcType=INTEGER}
			</if>
			<if test="intDel != null">
				,#{intDel, jdbcType=INTEGER}
			</if>
			<if test="busiessId != null">
				,#{busiessId, jdbcType=VARCHAR}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="num != null">
				,#{num, jdbcType=VARCHAR}
			</if>
			<if test="menuIndex != null">
				,#{menuIndex, jdbcType=INTEGER}
			</if>
			<if test="domainIndex != null">
				,#{domainIndex, jdbcType=INTEGER}
			</if>
			<if test="winWidth != null">
				,#{winWidth, jdbcType=INTEGER}
			</if>
			<if test="winHeight != null">
				,#{winHeight, jdbcType=INTEGER}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateCellUTableTree" parameterType="com.glaf.isdp.domain.CellUTableTree">
		update CELL_UTABLETREE
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="id != null">
				ID = #{id, jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				PARENT_ID = #{parentId, jdbcType=INTEGER},
			</if>
			<if test="indexName != null">
				INDEX_NAME = #{indexName, jdbcType=VARCHAR},
			</if>
			<if test="nlevel != null">
				NLEVEL = #{nlevel, jdbcType=INTEGER},
			</if>
			<if test="nodeIco != null">
				NODEICO = #{nodeIco, jdbcType=INTEGER},
			</if>
			<if test="listNo != null">
				LISTNO = #{listNo, jdbcType=INTEGER},
			</if>
			<if test="tableType != null">
				TABLETYPE = #{tableType, jdbcType=INTEGER},
			</if>
			<if test="intDel != null">
				INTDEL = #{intDel, jdbcType=INTEGER},
			</if>
			<if test="busiessId != null">
				BUSIESS_ID = #{busiessId, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				CONTENT = #{content, jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				NUM = #{num, jdbcType=VARCHAR},
			</if>
			<if test="menuIndex != null">
				MENUINDEX = #{menuIndex, jdbcType=INTEGER},
			</if>
			<if test="domainIndex != null">
				DOMAIN_INDEX = #{domainIndex, jdbcType=INTEGER},
			</if>
			<if test="winWidth != null">
				WIN_WIDTH = #{winWidth, jdbcType=INTEGER},
			</if>
			<if test="winHeight != null">
				WIN_HEIGHT = #{winHeight, jdbcType=INTEGER},
			</if>
        </trim>
		where
          INDEX_ID = #{indexId, jdbcType=INTEGER}
		
    </update>

 
	<delete id="deleteCellUTableTreeByIndexId" parameterType="integer">
	delete from CELL_UTABLETREE
	where INDEX_ID = #{indexId}
	</delete>

	
	<delete id="deleteCellUTableTrees" parameterType="com.glaf.isdp.query.CellUTableTreeQuery">
		delete from CELL_UTABLETREE
		where ( 
 			  INDEX_ID IN
              <foreach item="x_indexId" index="index" collection="indexIds" 
                     open="(" separator="," close=")">
                  #{x_indexId}
              </foreach>
		)
	</delete>


	<select id="getCellUTableTreeById" parameterType="integer" resultMap="cellUTableTreeResultMap">
		select * from CELL_UTABLETREE where INDEX_ID = #{indexId}
	</select>


	<select id="getCellUTableTrees" 
	    parameterType="com.glaf.isdp.query.CellUTableTreeQuery"
		resultMap="cellUTableTreeResultMap">
		select distinct E.*
		<include refid="selectCellUTableTreesSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.INDEX_ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getCellUTableTreeCount" 
	    parameterType="com.glaf.isdp.query.CellUTableTreeQuery"
		resultType="int">
		select count(*)
		<include refid="selectCellUTableTreesSql" />
	</select>


	<sql id="selectCellUTableTreesSql">

		from CELL_UTABLETREE E
		
		<where>
		       1 = 1  
		       
		       ${sqlCondition}
			 <if test="indexId != null">
				and E.INDEX_ID = #{indexId}
            </if>
            
            <if test="indexIds != null and indexIds.size() &gt; 0">
			    and E.INDEX_ID IN
                <foreach item="x_index_id" index="index" collection="indexIds" 
                     open="(" separator="," close=")">
                  #{x_index_id}
                </foreach>
			</if>
	        
			<if test="id != null and id != '' ">
				and E.ID = #{id}
            </if>

			<if test="idLike != null and idLike != '' ">
				and E.ID like #{idLike}
            </if>

			<if test="ids != null and ids.size() &gt; 0">
			    and E.ID IN
                <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
                </foreach>
			</if>

			<if test="parentId != null">
				and E.PARENT_ID = #{parentId}
            </if>

			<!-- <if test="parentIdGreaterThanOrEqual != null">
				and E.PARENT_ID &gt;= #{parentIdGreaterThanOrEqual}
            </if>

			<if test="parentIdLessThanOrEqual != null">
				and E.PARENT_ID &lt;= #{parentIdLessThanOrEqual}
            </if> -->

			<if test="parentIds != null and parentIds.size() &gt; 0">
			    and E.PARENT_ID IN
                <foreach item="x_parentId" index="index" collection="parentIds" 
                     open="(" separator="," close=")">
                  #{x_parentId}
                </foreach>
			</if>
      
	        
			<if test="indexName != null and indexName != '' ">
				and E.INDEX_NAME = #{indexName}
            </if>

			<if test="indexNameLike != null and indexNameLike != '' ">
				and E.INDEX_NAME like #{indexNameLike}
            </if>

			<if test="indexNames != null and indexNames.size() &gt; 0">
			    and E.INDEX_NAME IN
                <foreach item="x_indexName" index="index" collection="indexNames" 
                     open="(" separator="," close=")">
                  #{x_indexName}
                </foreach>
			</if>

			<if test="nlevel != null">
				and E.NLEVEL = #{nlevel}
            </if>

			<if test="nlevelGreaterThanOrEqual != null">
				and E.NLEVEL &gt;= #{nlevellGreaterThanOrEqual}
            </if>

			<if test="nlevelLessThanOrEqual != null">
				and E.NLEVEL &lt;= #{nlevelLessThanOrEqual}
            </if>

			<if test="nlevels != null and nlevels.size() &gt; 0">
			    and E.NLEVEL IN
                <foreach item="x_nlevel" index="index" collection="nlevels" 
                     open="(" separator="," close=")">
                  #{x_nlevel}
                </foreach>
			</if>
      

			<if test="nodeIco != null">
				and E.NODEICO = #{nodeIco}
            </if>

			<if test="nodeIcoGreaterThanOrEqual != null">
				and E.NODEICO &gt;= #{nodeIcoGreaterThanOrEqual}
            </if>

			<if test="nodeIcoLessThanOrEqual != null">
				and E.NODEICO &lt;= #{nodeIcoLessThanOrEqual}
            </if>

			<if test="nodeIcos != null and nodeIcos.size() &gt; 0">
			    and E.NODEICO IN
                <foreach item="x_nodeIco" index="index" collection="nodeIcos" 
                     open="(" separator="," close=")">
                  #{x_nodeIco}
                </foreach>
			</if>
      

			<if test="listNo != null">
				and E.LISTNO = #{listNo}
            </if>

			<if test="listNoGreaterThanOrEqual != null">
				and E.LISTNO &gt;= #{listNoGreaterThanOrEqual}
            </if>

			<if test="listNoLessThanOrEqual != null">
				and E.LISTNO &lt;= #{listNoLessThanOrEqual}
            </if>

			<if test="listNos != null and listNos.size() &gt; 0">
			    and E.LISTNO IN
                <foreach item="x_listNo" index="index" collection="listNos" 
                     open="(" separator="," close=")">
                  #{x_listNo}
                </foreach>
			</if>
      

			<if test="tableType != null">
				and E.TABLETYPE = #{tableType}
            </if>

			<if test="tableTypeGreaterThanOrEqual != null">
				and E.TABLETYPE &gt;= #{tableTypeGreaterThanOrEqual}
            </if>

			<if test="tableTypeLessThanOrEqual != null">
				and E.TABLETYPE &lt;= #{tableTypeLessThanOrEqual}
            </if>

			<if test="tableTypes != null and tableTypes.size() &gt; 0">
			    and E.TABLETYPE IN
                <foreach item="x_tableType" index="index" collection="tableTypes" 
                     open="(" separator="," close=")">
                  #{x_tableType}
                </foreach>
			</if>
      

			<if test="intDel != null">
				and E.INTDEL = #{intDel}
            </if>

			<if test="intDelGreaterThanOrEqual != null">
				and E.INTDEL &gt;= #{intDelGreaterThanOrEqual}
            </if>

			<if test="intDelLessThanOrEqual != null">
				and E.INTDEL &lt;= #{intDelLessThanOrEqual}
            </if>

			<if test="intDels != null and intDels.size() &gt; 0">
			    and E.INTDEL IN
                <foreach item="x_intDel" index="index" collection="intDels" 
                     open="(" separator="," close=")">
                  #{x_intDel}
                </foreach>
			</if>
      
	        
			<if test="busiessId != null and busiessId != '' ">
				and E.BUSIESS_ID = #{busiessId}
            </if>

			<if test="busiessIdLike != null and busiessIdLike != '' ">
				and E.BUSIESS_ID like #{busiessIdLike}
            </if>

			<if test="busiessIds != null and busiessIds.size() &gt; 0">
			    and E.BUSIESS_ID IN
                <foreach item="x_busiessId" index="index" collection="busiessIds" 
                     open="(" separator="," close=")">
                  #{x_busiessId}
                </foreach>
			</if>
	        
			<if test="content != null and content != '' ">
				and E.CONTENT = #{content}
            </if>

			<if test="contentLike != null and contentLike != '' ">
				and E.CONTENT like #{contentLike}
            </if>

			<if test="contents != null and contents.size() &gt; 0">
			    and E.CONTENT IN
                <foreach item="x_content" index="index" collection="contents" 
                     open="(" separator="," close=")">
                  #{x_content}
                </foreach>
			</if>
	        
			<if test="num != null and num != '' ">
				and E.NUM = #{num}
            </if>

			<if test="numLike != null and numLike != '' ">
				and E.NUM like #{numLike}
            </if>

			<if test="nums != null and nums.size() &gt; 0">
			    and E.NUM IN
                <foreach item="x_num" index="index" collection="nums" 
                     open="(" separator="," close=")">
                  #{x_num}
                </foreach>
			</if>

			<if test="menuIndex != null">
				and E.MENUINDEX = #{menuIndex}
            </if>

			<if test="menuIndexGreaterThanOrEqual != null">
				and E.MENUINDEX &gt;= #{menuIndexGreaterThanOrEqual}
            </if>

			<if test="menuIndexLessThanOrEqual != null">
				and E.MENUINDEX &lt;= #{menuIndexLessThanOrEqual}
            </if>

			<if test="menuIndexs != null and menuIndexs.size() &gt; 0">
			    and E.MENUINDEX IN
                <foreach item="x_menuIndex" index="index" collection="menuIndexs" 
                     open="(" separator="," close=")">
                  #{x_menuIndex}
                </foreach>
			</if>
      

			<if test="domainIndex != null">
				and E.DOMAIN_INDEX = #{domainIndex}
            </if>

			<if test="domainIndexGreaterThanOrEqual != null">
				and E.DOMAIN_INDEX &gt;= #{domainIndexGreaterThanOrEqual}
            </if>

			<if test="domainIndexLessThanOrEqual != null">
				and E.DOMAIN_INDEX &lt;= #{domainIndexLessThanOrEqual}
            </if>

			<if test="domainIndexs != null and domainIndexs.size() &gt; 0">
			    and E.DOMAIN_INDEX IN
                <foreach item="x_domainIndex" index="index" collection="domainIndexs" 
                     open="(" separator="," close=")">
                  #{x_domainIndex}
                </foreach>
			</if>
      

			<if test="winWidth != null">
				and E.WIN_WIDTH = #{winWidth}
            </if>

			<if test="winWidthGreaterThanOrEqual != null">
				and E.WIN_WIDTH &gt;= #{winWidthGreaterThanOrEqual}
            </if>

			<if test="winWidthLessThanOrEqual != null">
				and E.WIN_WIDTH &lt;= #{winWidthLessThanOrEqual}
            </if>

			<if test="winWidths != null and winWidths.size() &gt; 0">
			    and E.WIN_WIDTH IN
                <foreach item="x_winWidth" index="index" collection="winWidths" 
                     open="(" separator="," close=")">
                  #{x_winWidth}
                </foreach>
			</if>
      

			<if test="winHeight != null">
				and E.WIN_HEIGHT = #{winHeight}
            </if>

			<if test="winHeightGreaterThanOrEqual != null">
				and E.WIN_HEIGHT &gt;= #{winHeightGreaterThanOrEqual}
            </if>

			<if test="winHeightLessThanOrEqual != null">
				and E.WIN_HEIGHT &lt;= #{winHeightLessThanOrEqual}
            </if>

			<if test="winHeights != null and winHeights.size() &gt; 0">
			    and E.WIN_HEIGHT IN
                <foreach item="x_winHeight" index="index" collection="winHeights" 
                     open="(" separator="," close=")">
                  #{x_winHeight}
                </foreach>
			</if>
      
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

	<select id="getAllChildCellUTableTrees" 
	    parameterType="integer"
		resultMap="cellUTableTreeResultMap">
		select distinct E.* from cell_utabletree E where id like (select id+'%' from cell_utabletree where index_id=#{indexId})
	</select>
	
	<select id="getAllChildCellUTableTrees_oracle" 
	    parameterType="integer"
		resultMap="cellUTableTreeResultMap">
		select distinct E.* from cell_utabletree E where id like (select id||'%' from cell_utabletree where index_id=#{indexId})
	</select>
	
	<select id="getCellUTableTreesAndChildCountByTableType" parameterType="map" resultMap="cellUTableTreeResultMap">
		select a.*,b.cnt as childrenCount from cell_utabletree a left join (
			select parent_id,nlevel,COUNT(*) as cnt from cell_utabletree where 1=1
			<if test="tableType != null">
			and tableType = #{tableType}
			</if>
			<if test="parentId != null">
			and parent_id = #{parentId}
			</if>
			<if test="level != null">
			and nlevel = (#{level}+1)
			</if>
			group by parent_id,nlevel
		) b on a.index_id=b.parent_id where 1=1 
		<if test="tableType != null">
		and a.tableType = #{tableType}
		</if>
		<if test="parentId != null">
		and a.parent_id = #{parentId}
		</if>
		<if test="level != null">
		and a.nlevel = #{level}
		</if>
		order by a.listno
	</select>
</mapper>