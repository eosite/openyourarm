<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.FlowActivDMapper">

 	<resultMap id="flowActivDResultMap"	type="com.glaf.isdp.domain.FlowActivD">
        <id property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="processId" column="PROCESS_ID" jdbcType="VARCHAR"/>
        <result property="typeOfAct" column="TYPEOFACT" jdbcType="VARCHAR"/>
        <result property="name" column="NAME" jdbcType="VARCHAR"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="strFuntion" column="STRFUNTION" jdbcType="VARCHAR"/>
        <result property="netRoleId" column="NETROLEID" jdbcType="VARCHAR"/>
        <result property="listNo" column="LISTNO" jdbcType="INTEGER"/>
        <result property="timeLimit" column="TIMELIMIT" jdbcType="DOUBLE"/>
        <result property="isSave" column="ISSAVE" jdbcType="INTEGER"/>
        <result property="isDel" column="ISDEL" jdbcType="INTEGER"/>
        <result property="intSelectUser" column="INTSELECTUSER" jdbcType="INTEGER"/>
        <result property="intUseDomain" column="INTUSEDOMAIN" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertFlowActivD" parameterType="com.glaf.isdp.domain.FlowActivD">
		insert into FLOW_ACTIV_D 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="processId != null">
				,PROCESS_ID 
			</if>
			<if test="typeOfAct != null">
				,TYPEOFACT 
			</if>
			<if test="name != null">
				,NAME 
			</if>
			<if test="content != null">
				,CONTENT 
			</if>
			<if test="strFuntion != null">
				,STRFUNTION 
			</if>
			<if test="netRoleId != null">
				,NETROLEID 
			</if>
			<if test="listNo != null">
				,LISTNO 
			</if>
			<if test="timeLimit != null">
				,TIMELIMIT 
			</if>
			<if test="isSave != null">
				,ISSAVE 
			</if>
			<if test="isDel != null">
				,ISDEL 
			</if>
			<if test="intSelectUser != null">
				,INTSELECTUSER 
			</if>
			<if test="intUseDomain != null">
				,INTUSEDOMAIN 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="processId != null">
				,#{processId, jdbcType=VARCHAR}
			</if>
			<if test="typeOfAct != null">
				,#{typeOfAct, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="strFuntion != null">
				,#{strFuntion, jdbcType=VARCHAR}
			</if>
			<if test="netRoleId != null">
				,#{netRoleId, jdbcType=VARCHAR}
			</if>
			<if test="listNo != null">
				,#{listNo, jdbcType=INTEGER}
			</if>
			<if test="timeLimit != null">
				,#{timeLimit, jdbcType=DOUBLE}
			</if>
			<if test="isSave != null">
				,#{isSave, jdbcType=INTEGER}
			</if>
			<if test="isDel != null">
				,#{isDel, jdbcType=INTEGER}
			</if>
			<if test="intSelectUser != null">
				,#{intSelectUser, jdbcType=INTEGER}
			</if>
			<if test="intUseDomain != null">
				,#{intUseDomain, jdbcType=INTEGER}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateFlowActivD" parameterType="com.glaf.isdp.domain.FlowActivD">
		update FLOW_ACTIV_D
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="processId != null">
				PROCESS_ID = #{processId, jdbcType=VARCHAR},
			</if>
			<if test="typeOfAct != null">
				TYPEOFACT = #{typeOfAct, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				CONTENT = #{content, jdbcType=VARCHAR},
			</if>
			<if test="strFuntion != null">
				STRFUNTION = #{strFuntion, jdbcType=VARCHAR},
			</if>
			<if test="netRoleId != null">
				NETROLEID = #{netRoleId, jdbcType=VARCHAR},
			</if>
			<if test="listNo != null">
				LISTNO = #{listNo, jdbcType=INTEGER},
			</if>
			<if test="timeLimit != null">
				TIMELIMIT = #{timeLimit, jdbcType=DOUBLE},
			</if>
			<if test="isSave != null">
				ISSAVE = #{isSave, jdbcType=INTEGER},
			</if>
			<if test="isDel != null">
				ISDEL = #{isDel, jdbcType=INTEGER},
			</if>
			<if test="intSelectUser != null">
				INTSELECTUSER = #{intSelectUser, jdbcType=INTEGER},
			</if>
			<if test="intUseDomain != null">
				INTUSEDOMAIN = #{intUseDomain, jdbcType=INTEGER},
			</if>
        </trim>
		where
          ID = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteFlowActivDById" parameterType="string"> 
        delete from FLOW_ACTIV_D
        where ID =	#{id}
	</delete>

	
	<delete id="deleteFlowActivDs" parameterType="com.glaf.isdp.query.FlowActivDQuery">
		delete from FLOW_ACTIV_D
		where ( 
 			  ID IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getFlowActivDById" parameterType="string" resultMap="flowActivDResultMap">
		select * from FLOW_ACTIV_D where ID = #{id}
	</select>


	<select id="getFlowActivDs" 
	    parameterType="com.glaf.isdp.query.FlowActivDQuery"
		resultMap="flowActivDResultMap">
		select distinct E.*
		<include refid="selectFlowActivDsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getFlowActivDCount" 
	    parameterType="com.glaf.isdp.query.FlowActivDQuery"
		resultType="int">
		select count(*)
		<include refid="selectFlowActivDsSql" />
	</select>


	<sql id="selectFlowActivDsSql">

		from FLOW_ACTIV_D E
		
		<where>
		       1 = 1  
			 
	        ${sqlCondition}
			<if test="processId != null and processId != '' ">
				and E.PROCESS_ID = #{processId}
            </if>

			<if test="processIdLike != null and processIdLike != '' ">
				and E.PROCESS_ID like #{processIdLike}
            </if>

			<if test="processIds != null and processIds.size() &gt; 0">
			    and E.PROCESS_ID IN
                <foreach item="x_processId" index="index" collection="processIds" 
                     open="(" separator="," close=")">
                  #{x_processId}
                </foreach>
			</if>
	        
			<if test="typeOfAct != null and typeOfAct != '' ">
				and E.TYPEOFACT = #{typeOfAct}
            </if>

			<if test="typeOfActLike != null and typeOfActLike != '' ">
				and E.TYPEOFACT like #{typeOfActLike}
            </if>

			<if test="typeOfActs != null and typeOfActs.size() &gt; 0">
			    and E.TYPEOFACT IN
                <foreach item="x_typeOfAct" index="index" collection="typeOfActs" 
                     open="(" separator="," close=")">
                  #{x_typeOfAct}
                </foreach>
			</if>
	        
			<if test="name != null and name != '' ">
				and E.NAME = #{name}
            </if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
            </if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME IN
                <foreach item="x_name" index="index" collection="names" 
                     open="(" separator="," close=")">
                  #{x_name}
                </foreach>
			</if>
	        
			<if test="content != null and content != '' ">
				and E.CONTENT = #{content}
            </if>

			<if test="contentLike != null and contentLike != '' ">
				and E.CONTENT like #{contentLike}
            </if>

			<if test="contents != null and contents.size() &gt; 0">
			    and E.CONTENT IN
                <foreach item="x_content" index="index" collection="contents" 
                     open="(" separator="," close=")">
                  #{x_content}
                </foreach>
			</if>
	        
			<if test="strFuntion != null and strFuntion != '' ">
				and E.STRFUNTION = #{strFuntion}
            </if>

			<if test="strFuntionLike != null and strFuntionLike != '' ">
				and E.STRFUNTION like #{strFuntionLike}
            </if>

			<if test="strFuntions != null and strFuntions.size() &gt; 0">
			    and E.STRFUNTION IN
                <foreach item="x_strFuntion" index="index" collection="strFuntions" 
                     open="(" separator="," close=")">
                  #{x_strFuntion}
                </foreach>
			</if>
	        
			<if test="netRoleId != null and netRoleId != '' ">
				and E.NETROLEID = #{netRoleId}
            </if>

			<if test="netRoleIdLike != null and netRoleIdLike != '' ">
				and E.NETROLEID like #{netRoleIdLike}
            </if>

			<if test="netRoleIds != null and netRoleIds.size() &gt; 0">
			    and E.NETROLEID IN
                <foreach item="x_netRoleId" index="index" collection="netRoleIds" 
                     open="(" separator="," close=")">
                  #{x_netRoleId}
                </foreach>
			</if>

			<if test="listNo != null">
				and E.LISTNO = #{listNo}
            </if>

			<if test="listNoGreaterThanOrEqual != null">
				and E.LISTNO &gt;= #{listNoGreaterThanOrEqual}
            </if>

			<if test="listNoLessThanOrEqual != null">
				and E.LISTNO &lt;= #{listNoLessThanOrEqual}
            </if>

			<if test="listNos != null and listNos.size() &gt; 0">
			    and E.LISTNO IN
                <foreach item="x_listNo" index="index" collection="listNos" 
                     open="(" separator="," close=")">
                  #{x_listNo}
                </foreach>
			</if>
      

			<if test="timeLimitGreaterThanOrEqual != null">
				and E.TIMELIMIT &gt;= #{timeLimitGreaterThanOrEqual}
            </if>

			<if test="timeLimitLessThanOrEqual != null">
				and E.TIMELIMIT &lt;= #{timeLimitLessThanOrEqual}
            </if>


			<if test="isSave != null">
				and E.ISSAVE = #{isSave}
            </if>

			<if test="isSaveGreaterThanOrEqual != null">
				and E.ISSAVE &gt;= #{isSaveGreaterThanOrEqual}
            </if>

			<if test="isSaveLessThanOrEqual != null">
				and E.ISSAVE &lt;= #{isSaveLessThanOrEqual}
            </if>

			<if test="isSaves != null and isSaves.size() &gt; 0">
			    and E.ISSAVE IN
                <foreach item="x_isSave" index="index" collection="isSaves" 
                     open="(" separator="," close=")">
                  #{x_isSave}
                </foreach>
			</if>
      

			<if test="isDel != null">
				and E.ISDEL = #{isDel}
            </if>

			<if test="isDelGreaterThanOrEqual != null">
				and E.ISDEL &gt;= #{isDelGreaterThanOrEqual}
            </if>

			<if test="isDelLessThanOrEqual != null">
				and E.ISDEL &lt;= #{isDelLessThanOrEqual}
            </if>

			<if test="isDels != null and isDels.size() &gt; 0">
			    and E.ISDEL IN
                <foreach item="x_isDel" index="index" collection="isDels" 
                     open="(" separator="," close=")">
                  #{x_isDel}
                </foreach>
			</if>
      

			<if test="intSelectUser != null">
				and E.INTSELECTUSER = #{intSelectUser}
            </if>

			<if test="intSelectUserGreaterThanOrEqual != null">
				and E.INTSELECTUSER &gt;= #{intSelectUserGreaterThanOrEqual}
            </if>

			<if test="intSelectUserLessThanOrEqual != null">
				and E.INTSELECTUSER &lt;= #{intSelectUserLessThanOrEqual}
            </if>

			<if test="intSelectUsers != null and intSelectUsers.size() &gt; 0">
			    and E.INTSELECTUSER IN
                <foreach item="x_intSelectUser" index="index" collection="intSelectUsers" 
                     open="(" separator="," close=")">
                  #{x_intSelectUser}
                </foreach>
			</if>
      

			<if test="intUseDomain != null">
				and E.INTUSEDOMAIN = #{intUseDomain}
            </if>

			<if test="intUseDomainGreaterThanOrEqual != null">
				and E.INTUSEDOMAIN &gt;= #{intUseDomainGreaterThanOrEqual}
            </if>

			<if test="intUseDomainLessThanOrEqual != null">
				and E.INTUSEDOMAIN &lt;= #{intUseDomainLessThanOrEqual}
            </if>

			<if test="intUseDomains != null and intUseDomains.size() &gt; 0">
			    and E.INTUSEDOMAIN IN
                <foreach item="x_intUseDomain" index="index" collection="intUseDomains" 
                     open="(" separator="," close=")">
                  #{x_intUseDomain}
                </foreach>
			</if>
      
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>
	<select id="getLastFlowActivDByProcessId" parameterType="string" resultMap="flowActivDResultMap">
		select top 1 a.*,c.activ_pre as activDPre from flow_activ_d a 
		inner join flow_station b on a.id=b.activ_d_id 
		left join flow_forward_d c on c.activ_id=a.id
		where b.process_id=#{processId}
	</select>
</mapper>