<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.isdp.mapper.ProjMuiProjListMapper">

 	<resultMap id="projMuiProjListResultMap" type="com.glaf.isdp.domain.ProjMuiProjList">
        <id property="indexId" column="INDEX_ID" jdbcType="INTEGER" />
        <result property="id" column="ID" jdbcType="VARCHAR"/>
        <result property="intFlag" column="INTFLAG" jdbcType="INTEGER"/>
        <result property="sysId" column="SYS_ID" jdbcType="VARCHAR"/>
        <result property="projName" column="PROJNAME" jdbcType="VARCHAR"/>
        <result property="num" column="NUM" jdbcType="VARCHAR"/>
        <result property="ctime" column="CTIME" jdbcType="TIMESTAMP"/>
        <result property="content" column="CONTENT" jdbcType="VARCHAR"/>
        <result property="dbName" column="SDBNAME" jdbcType="VARCHAR"/>
        <result property="serverName" column="SSERVERNAME" jdbcType="VARCHAR"/>
        <result property="user" column="SUSER" jdbcType="VARCHAR"/>
        <result property="password" column="SPASSWORD" jdbcType="VARCHAR"/>
        <result property="listNo" column="LISTNO" jdbcType="INTEGER"/>
        <result property="email" column="EMAIL" jdbcType="VARCHAR"/>
        <result property="parentId" column="PARENT_ID" jdbcType="INTEGER"/>
        <result property="nodeIco" column="NODEICO" jdbcType="INTEGER"/>
        <result property="intLine" column="INTLINE" jdbcType="INTEGER"/>
        <result property="domainIndex" column="DOMAIN_INDEX" jdbcType="INTEGER"/>
        <result property="intLocal" column="INTLOCAL" jdbcType="INTEGER"/>
        <result property="emailPSW" column="EMAIL_PSW" jdbcType="VARCHAR"/>
        <result property="intConnected" column="INTCONNECTED" jdbcType="INTEGER"/>
        <result property="emails" column="EMAIL_S" jdbcType="VARCHAR"/>
        <result property="intorgLevel" column="INTORGLEVEL" jdbcType="INTEGER"/>
        <result property="intSendType" column="INTSENDTYPE" jdbcType="INTEGER"/>
        <result property="emailBackup" column="EMAIL_BACKUP" jdbcType="VARCHAR"/>
        <result property="emailImplement" column="EMAIL_IMPLEMENT" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertProjMuiProjList" parameterType="com.glaf.isdp.domain.ProjMuiProjList">
		insert into PROJ_MUIPROJLIST 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    INDEX_ID
			<if test="id != null">
				,ID 
			</if>
			<if test="intFlag != null">
				,INTFLAG 
			</if>
			<if test="sysId != null">
				,SYS_ID 
			</if>
			<if test="projName != null">
				,PROJNAME 
			</if>
			<if test="num != null">
				,NUM 
			</if>
			<if test="ctime != null">
				,CTIME 
			</if>
			<if test="content != null">
				,CONTENT 
			</if>
			<if test="dbName != null">
				,SDBNAME 
			</if>
			<if test="serverName != null">
				,SSERVERNAME 
			</if>
			<if test="user != null">
				,SUSER 
			</if>
			<if test="password != null">
				,SPASSWORD 
			</if>
			<if test="listNo != null">
				,LISTNO 
			</if>
			<if test="email != null">
				,EMAIL 
			</if>
			<if test="parentId != null">
				,PARENT_ID 
			</if>
			<if test="nodeIco != null">
				,NODEICO 
			</if>
			<if test="intLine != null">
				,INTLINE 
			</if>
			<if test="domainIndex != null">
				,DOMAIN_INDEX 
			</if>
			<if test="intLocal != null">
				,INTLOCAL 
			</if>
			<if test="emailPSW != null">
				,EMAIL_PSW 
			</if>
			<if test="intConnected != null">
				,INTCONNECTED 
			</if>
			<if test="emails != null">
				,EMAIL_S 
			</if>
			<if test="intorgLevel != null">
				,INTORGLEVEL 
			</if>
			<if test="intSendType != null">
				,INTSENDTYPE 
			</if>
			<if test="emailBackup != null">
				,EMAIL_BACKUP 
			</if>
			<if test="emailImplement != null">
				,EMAIL_IMPLEMENT 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{indexId, jdbcType=INTEGER}
	     
			<if test="id != null">
				,#{id, jdbcType=VARCHAR}
			</if>
			<if test="intFlag != null">
				,#{intFlag, jdbcType=INTEGER}
			</if>
			<if test="sysId != null">
				,#{sysId, jdbcType=VARCHAR}
			</if>
			<if test="projName != null">
				,#{projName, jdbcType=VARCHAR}
			</if>
			<if test="num != null">
				,#{num, jdbcType=VARCHAR}
			</if>
			<if test="ctime != null">
				,#{ctime, jdbcType=TIMESTAMP}
			</if>
			<if test="content != null">
				,#{content, jdbcType=VARCHAR}
			</if>
			<if test="dbName != null">
				,#{dbName, jdbcType=VARCHAR}
			</if>
			<if test="serverName != null">
				,#{serverName, jdbcType=VARCHAR}
			</if>
			<if test="user != null">
				,#{user, jdbcType=VARCHAR}
			</if>
			<if test="password != null">
				,#{password, jdbcType=VARCHAR}
			</if>
			<if test="listNo != null">
				,#{listNo, jdbcType=INTEGER}
			</if>
			<if test="email != null">
				,#{email, jdbcType=VARCHAR}
			</if>
			<if test="parentId != null">
				,#{parentId, jdbcType=INTEGER}
			</if>
			<if test="nodeIco != null">
				,#{nodeIco, jdbcType=INTEGER}
			</if>
			<if test="intLine != null">
				,#{intLine, jdbcType=INTEGER}
			</if>
			<if test="domainIndex != null">
				,#{domainIndex, jdbcType=INTEGER}
			</if>
			<if test="intLocal != null">
				,#{intLocal, jdbcType=INTEGER}
			</if>
			<if test="emailPSW != null">
				,#{emailPSW, jdbcType=VARCHAR}
			</if>
			<if test="intConnected != null">
				,#{intConnected, jdbcType=INTEGER}
			</if>
			<if test="emails != null">
				,#{emails, jdbcType=VARCHAR}
			</if>
			<if test="intorgLevel != null">
				,#{intorgLevel, jdbcType=INTEGER}
			</if>
			<if test="intSendType != null">
				,#{intSendType, jdbcType=INTEGER}
			</if>
			<if test="emailBackup != null">
				,#{emailBackup, jdbcType=VARCHAR}
			</if>
			<if test="emailImplement != null">
				,#{emailImplement, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateProjMuiProjList" parameterType="com.glaf.isdp.domain.ProjMuiProjList">
		update PROJ_MUIPROJLIST
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="id != null">
				ID = #{id, jdbcType=VARCHAR},
			</if>
			<if test="intFlag != null">
				INTFLAG = #{intFlag, jdbcType=INTEGER},
			</if>
			<if test="sysId != null">
				SYS_ID = #{sysId, jdbcType=VARCHAR},
			</if>
			<if test="projName != null">
				PROJNAME = #{projName, jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				NUM = #{num, jdbcType=VARCHAR},
			</if>
			<if test="ctime != null">
				CTIME = #{ctime, jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				CONTENT = #{content, jdbcType=VARCHAR},
			</if>
			<if test="dbName != null">
				SDBNAME = #{dbName, jdbcType=VARCHAR},
			</if>
			<if test="serverName != null">
				SSERVERNAME = #{serverName, jdbcType=VARCHAR},
			</if>
			<if test="user != null">
				SUSER = #{user, jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				SPASSWORD = #{password, jdbcType=VARCHAR},
			</if>
			<if test="listNo != null">
				LISTNO = #{listNo, jdbcType=INTEGER},
			</if>
			<if test="email != null">
				EMAIL = #{email, jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				PARENT_ID = #{parentId, jdbcType=INTEGER},
			</if>
			<if test="nodeIco != null">
				NODEICO = #{nodeIco, jdbcType=INTEGER},
			</if>
			<if test="intLine != null">
				INTLINE = #{intLine, jdbcType=INTEGER},
			</if>
			<if test="domainIndex != null">
				DOMAIN_INDEX = #{domainIndex, jdbcType=INTEGER},
			</if>
			<if test="intLocal != null">
				INTLOCAL = #{intLocal, jdbcType=INTEGER},
			</if>
			<if test="emailPSW != null">
				EMAIL_PSW = #{emailPSW, jdbcType=VARCHAR},
			</if>
			<if test="intConnected != null">
				INTCONNECTED = #{intConnected, jdbcType=INTEGER},
			</if>
			<if test="emails != null">
				EMAIL_S = #{emails, jdbcType=VARCHAR},
			</if>
			<if test="intorgLevel != null">
				INTORGLEVEL = #{intorgLevel, jdbcType=INTEGER},
			</if>
			<if test="intSendType != null">
				INTSENDTYPE = #{intSendType, jdbcType=INTEGER},
			</if>
			<if test="emailBackup != null">
				EMAIL_BACKUP = #{emailBackup, jdbcType=VARCHAR},
			</if>
			<if test="emailImplement != null">
				EMAIL_IMPLEMENT = #{emailImplement, jdbcType=VARCHAR},
			</if>
        </trim>
		where
          INDEX_ID = #{indexId, jdbcType=INTEGER}
		
    </update>

 
	<delete id="deleteProjMuiProjListById" parameterType="integer"> 
        delete from PROJ_MUIPROJLIST
        where INDEX_ID =	#{id}
	</delete>

	
	<delete id="deleteProjMuiProjLists" parameterType="com.glaf.isdp.query.ProjMuiProjListQuery">
		delete from PROJ_MUIPROJLIST
		where ( 
 			  INDEX_ID IN
              <foreach item="x_indexId" index="index" collection="indexIds" 
                     open="(" separator="," close=")">
                  #{x_indexId}
              </foreach>
		)
	</delete>


	<select id="getProjMuiProjListById" parameterType="integer" resultMap="projMuiProjListResultMap">
		select * from PROJ_MUIPROJLIST where INDEX_ID = #{id}
	</select>


	<select id="getProjMuiProjLists" 
	    parameterType="com.glaf.isdp.query.ProjMuiProjListQuery"
		resultMap="projMuiProjListResultMap">
		select distinct E.*
		<include refid="selectProjMuiProjListsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.INDEX_ID desc
		  </otherwise>
        </choose>
	</select>


	<select id="getProjMuiProjListCount" 
	    parameterType="com.glaf.isdp.query.ProjMuiProjListQuery"
		resultType="int">
		select count(*)
		<include refid="selectProjMuiProjListsSql" />
	</select>


	<sql id="selectProjMuiProjListsSql">

		from PROJ_MUIPROJLIST E
		
		<where>
		       1 = 1  
			 
	        
			<if test="id != null and id != '' ">
				and E.ID = #{id}
            </if>

			<if test="idLike != null and idLike != '' ">
				and E.ID like #{idLike}
            </if>

			<if test="ids != null and ids.size() &gt; 0">
			    and E.ID IN
                <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
                </foreach>
			</if>

			<if test="intFlag != null">
				and E.INTFLAG = #{intFlag}
            </if>

			<if test="intFlagGreaterThanOrEqual != null">
				and E.INTFLAG &gt;= #{intFlagGreaterThanOrEqual}
            </if>

			<if test="intFlagLessThanOrEqual != null">
				and E.INTFLAG &lt;= #{intFlagLessThanOrEqual}
            </if>

			<if test="intFlags != null and intFlags.size() &gt; 0">
			    and E.INTFLAG IN
                <foreach item="x_intFlag" index="index" collection="intFlags" 
                     open="(" separator="," close=")">
                  #{x_intFlag}
                </foreach>
			</if>
      
	        
			<if test="sysId != null and sysId != '' ">
				and E.SYS_ID = #{sysId}
            </if>

			<if test="sysIdLike != null and sysIdLike != '' ">
				and E.SYS_ID like #{sysIdLike}
            </if>

			<if test="sysIds != null and sysIds.size() &gt; 0">
			    and E.SYS_ID IN
                <foreach item="x_sysId" index="index" collection="sysIds" 
                     open="(" separator="," close=")">
                  #{x_sysId}
                </foreach>
			</if>
	        
			<if test="projName != null and projName != '' ">
				and E.PROJNAME = #{projName}
            </if>

			<if test="projNameLike != null and projNameLike != '' ">
				and E.PROJNAME like #{projNameLike}
            </if>

			<if test="projNames != null and projNames.size() &gt; 0">
			    and E.PROJNAME IN
                <foreach item="x_projName" index="index" collection="projNames" 
                     open="(" separator="," close=")">
                  #{x_projName}
                </foreach>
			</if>
	        
			<if test="num != null and num != '' ">
				and E.NUM = #{num}
            </if>

			<if test="numLike != null and numLike != '' ">
				and E.NUM like #{numLike}
            </if>

			<if test="nums != null and nums.size() &gt; 0">
			    and E.NUM IN
                <foreach item="x_num" index="index" collection="nums" 
                     open="(" separator="," close=")">
                  #{x_num}
                </foreach>
			</if>

			<if test="ctimeGreaterThanOrEqual != null">
				and E.CTIME &gt;= #{ctimeGreaterThanOrEqual}
            </if>

			<if test="ctimeLessThanOrEqual != null">
				and E.CTIME &lt;= #{ctimeLessThanOrEqual}
            </if>

	        
			<if test="content != null and content != '' ">
				and E.CONTENT = #{content}
            </if>

			<if test="contentLike != null and contentLike != '' ">
				and E.CONTENT like #{contentLike}
            </if>

			<if test="contents != null and contents.size() &gt; 0">
			    and E.CONTENT IN
                <foreach item="x_content" index="index" collection="contents" 
                     open="(" separator="," close=")">
                  #{x_content}
                </foreach>
			</if>
	        
			<if test="dbName != null and dbName != '' ">
				and E.SDBNAME = #{dbName}
            </if>

			<if test="dbNameLike != null and dbNameLike != '' ">
				and E.SDBNAME like #{dbNameLike}
            </if>

			<if test="dbNames != null and dbNames.size() &gt; 0">
			    and E.SDBNAME IN
                <foreach item="x_dbName" index="index" collection="dbNames" 
                     open="(" separator="," close=")">
                  #{x_dbName}
                </foreach>
			</if>
	        
			<if test="serverName != null and serverName != '' ">
				and E.SSERVERNAME = #{serverName}
            </if>

			<if test="serverNameLike != null and serverNameLike != '' ">
				and E.SSERVERNAME like #{serverNameLike}
            </if>

			<if test="serverNames != null and serverNames.size() &gt; 0">
			    and E.SSERVERNAME IN
                <foreach item="x_serverName" index="index" collection="serverNames" 
                     open="(" separator="," close=")">
                  #{x_serverName}
                </foreach>
			</if>
	        
			<if test="user != null and user != '' ">
				and E.SUSER = #{user}
            </if>

			<if test="userLike != null and userLike != '' ">
				and E.SUSER like #{userLike}
            </if>

			<if test="users != null and users.size() &gt; 0">
			    and E.SUSER IN
                <foreach item="x_user" index="index" collection="users" 
                     open="(" separator="," close=")">
                  #{x_user}
                </foreach>
			</if>
	        
			<if test="password != null and password != '' ">
				and E.SPASSWORD = #{password}
            </if>

			<if test="passwordLike != null and passwordLike != '' ">
				and E.SPASSWORD like #{passwordLike}
            </if>

			<if test="passwords != null and passwords.size() &gt; 0">
			    and E.SPASSWORD IN
                <foreach item="x_password" index="index" collection="passwords" 
                     open="(" separator="," close=")">
                  #{x_password}
                </foreach>
			</if>

			<if test="listNo != null">
				and E.LISTNO = #{listNo}
            </if>

			<if test="listNoGreaterThanOrEqual != null">
				and E.LISTNO &gt;= #{listNoGreaterThanOrEqual}
            </if>

			<if test="listNoLessThanOrEqual != null">
				and E.LISTNO &lt;= #{listNoLessThanOrEqual}
            </if>

			<if test="listNos != null and listNos.size() &gt; 0">
			    and E.LISTNO IN
                <foreach item="x_listNo" index="index" collection="listNos" 
                     open="(" separator="," close=")">
                  #{x_listNo}
                </foreach>
			</if>
      
	        
			<if test="email != null and email != '' ">
				and E.EMAIL = #{email}
            </if>

			<if test="emailLike != null and emailLike != '' ">
				and E.EMAIL like #{emailLike}
            </if>

			<if test="emails != null and emails.size() &gt; 0">
			    and E.EMAIL IN
                <foreach item="x_email" index="index" collection="emails" 
                     open="(" separator="," close=")">
                  #{x_email}
                </foreach>
			</if>

			<if test="parentId != null">
				and E.PARENT_ID = #{parentId}
            </if>

			<if test="parentIds != null and parentIds.size() &gt; 0">
			    and E.PARENT_ID IN
                <foreach item="x_parentId" index="index" collection="parentIds" 
                     open="(" separator="," close=")">
                  #{x_parentId}
                </foreach>
			</if>
      

			<if test="nodeIco != null">
				and E.NODEICO = #{nodeIco}
            </if>

			<if test="nodeIcoGreaterThanOrEqual != null">
				and E.NODEICO &gt;= #{nodeIcoGreaterThanOrEqual}
            </if>

			<if test="nodeIcoLessThanOrEqual != null">
				and E.NODEICO &lt;= #{nodeIcoLessThanOrEqual}
            </if>

			<if test="nodeIcos != null and nodeIcos.size() &gt; 0">
			    and E.NODEICO IN
                <foreach item="x_nodeIco" index="index" collection="nodeIcos" 
                     open="(" separator="," close=")">
                  #{x_nodeIco}
                </foreach>
			</if>
      

			<if test="intLine != null">
				and E.INTLINE = #{intLine}
            </if>

			<if test="intLineGreaterThanOrEqual != null">
				and E.INTLINE &gt;= #{intLineGreaterThanOrEqual}
            </if>

			<if test="intLineLessThanOrEqual != null">
				and E.INTLINE &lt;= #{intLineLessThanOrEqual}
            </if>

			<if test="intLines != null and intLines.size() &gt; 0">
			    and E.INTLINE IN
                <foreach item="x_intLine" index="index" collection="intLines" 
                     open="(" separator="," close=")">
                  #{x_intLine}
                </foreach>
			</if>
      

			<if test="domainIndex != null">
				and E.DOMAIN_INDEX = #{domainIndex}
            </if>

			<if test="domainIndexs != null and domainIndexs.size() &gt; 0">
			    and E.DOMAIN_INDEX IN
                <foreach item="x_domainIndex" index="index" collection="domainIndexs" 
                     open="(" separator="," close=")">
                  #{x_domainIndex}
                </foreach>
			</if>
      

			<if test="intLocal != null">
				and E.INTLOCAL = #{intLocal}
            </if>

			<if test="intLocalGreaterThanOrEqual != null">
				and E.INTLOCAL &gt;= #{intLocalGreaterThanOrEqual}
            </if>

			<if test="intLocalLessThanOrEqual != null">
				and E.INTLOCAL &lt;= #{intLocalLessThanOrEqual}
            </if>

			<if test="intLocals != null and intLocals.size() &gt; 0">
			    and E.INTLOCAL IN
                <foreach item="x_intLocal" index="index" collection="intLocals" 
                     open="(" separator="," close=")">
                  #{x_intLocal}
                </foreach>
			</if>
      
	        
			<if test="emailPSW != null and emailPSW != '' ">
				and E.EMAIL_PSW = #{emailPSW}
            </if>

			<if test="emailPSWLike != null and emailPSWLike != '' ">
				and E.EMAIL_PSW like #{emailPSWLike}
            </if>

			<if test="emailPSWs != null and emailPSWs.size() &gt; 0">
			    and E.EMAIL_PSW IN
                <foreach item="x_emailPSW" index="index" collection="emailPSWs" 
                     open="(" separator="," close=")">
                  #{x_emailPSW}
                </foreach>
			</if>

			<if test="intConnected != null">
				and E.INTCONNECTED = #{intConnected}
            </if>

			<if test="intConnectedGreaterThanOrEqual != null">
				and E.INTCONNECTED &gt;= #{intConnectedGreaterThanOrEqual}
            </if>

			<if test="intConnectedLessThanOrEqual != null">
				and E.INTCONNECTED &lt;= #{intConnectedLessThanOrEqual}
            </if>

			<if test="intConnecteds != null and intConnecteds.size() &gt; 0">
			    and E.INTCONNECTED IN
                <foreach item="x_intConnected" index="index" collection="intConnecteds" 
                     open="(" separator="," close=")">
                  #{x_intConnected}
                </foreach>
			</if>
      
	        
			<if test="emails != null and emails != '' ">
				and E.EMAIL_S = #{emails}
            </if>

			<if test="emailsLike != null and emailsLike != '' ">
				and E.EMAIL_S like #{emailsLike}
            </if>

			<if test="emailss != null and emailss.size() &gt; 0">
			    and E.EMAIL_S IN
                <foreach item="x_emails" index="index" collection="emailss" 
                     open="(" separator="," close=")">
                  #{x_emails}
                </foreach>
			</if>

			<if test="intorgLevel != null">
				and E.INTORGLEVEL = #{intorgLevel}
            </if>

			<if test="intorgLevelGreaterThanOrEqual != null">
				and E.INTORGLEVEL &gt;= #{intorgLevelGreaterThanOrEqual}
            </if>

			<if test="intorgLevelLessThanOrEqual != null">
				and E.INTORGLEVEL &lt;= #{intorgLevelLessThanOrEqual}
            </if>

			<if test="intorgLevels != null and intorgLevels.size() &gt; 0">
			    and E.INTORGLEVEL IN
                <foreach item="x_intorgLevel" index="index" collection="intorgLevels" 
                     open="(" separator="," close=")">
                  #{x_intorgLevel}
                </foreach>
			</if>
      

			<if test="intSendType != null">
				and E.INTSENDTYPE = #{intSendType}
            </if>

			<if test="intSendTypeGreaterThanOrEqual != null">
				and E.INTSENDTYPE &gt;= #{intSendTypeGreaterThanOrEqual}
            </if>

			<if test="intSendTypeLessThanOrEqual != null">
				and E.INTSENDTYPE &lt;= #{intSendTypeLessThanOrEqual}
            </if>

			<if test="intSendTypes != null and intSendTypes.size() &gt; 0">
			    and E.INTSENDTYPE IN
                <foreach item="x_intSendType" index="index" collection="intSendTypes" 
                     open="(" separator="," close=")">
                  #{x_intSendType}
                </foreach>
			</if>
      
	        
			<if test="emailBackup != null and emailBackup != '' ">
				and E.EMAIL_BACKUP = #{emailBackup}
            </if>

			<if test="emailBackupLike != null and emailBackupLike != '' ">
				and E.EMAIL_BACKUP like #{emailBackupLike}
            </if>

			<if test="emailBackups != null and emailBackups.size() &gt; 0">
			    and E.EMAIL_BACKUP IN
                <foreach item="x_emailBackup" index="index" collection="emailBackups" 
                     open="(" separator="," close=")">
                  #{x_emailBackup}
                </foreach>
			</if>
	        
			<if test="emailImplement != null and emailImplement != '' ">
				and E.EMAIL_IMPLEMENT = #{emailImplement}
            </if>

			<if test="emailImplementLike != null and emailImplementLike != '' ">
				and E.EMAIL_IMPLEMENT like #{emailImplementLike}
            </if>

			<if test="emailImplements != null and emailImplements.size() &gt; 0">
			    and E.EMAIL_IMPLEMENT IN
                <foreach item="x_emailImplement" index="index" collection="emailImplements" 
                     open="(" separator="," close=")">
                  #{x_emailImplement}
                </foreach>
			</if>
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
		</where>
	</sql>

	<select id="getLocalProjMuiProjList" parameterType="integer" resultMap="projMuiProjListResultMap">
		select * from proj_muiprojlist where intLocal = #{intLocal}
	</select>
</mapper>