<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.monitor.server.mapper.MonitorProcMapper">

 	<resultMap id="monitorProcResultMap"	type="com.glaf.monitor.server.domain.MonitorProc">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="terminalId" column="TERMINAL_ID_" jdbcType="VARCHAR"/>
        <result property="level" column="LEVEL_" jdbcType="VARCHAR"/>
        <result property="processName" column="PROCESS_NAME_" jdbcType="VARCHAR"/>
        <result property="name" column="NAME_" jdbcType="VARCHAR"/>
        <result property="prod" column="PROD_" jdbcType="VARCHAR"/>
        <result property="ver" column="VER_" jdbcType="VARCHAR"/>
        <result property="type" column="TYPE_" jdbcType="VARCHAR"/>
        <result property="desc" column="DESC_" jdbcType="VARCHAR"/>
        <result property="port" column="PORT_" jdbcType="INTEGER"/>
        <result property="monitorServiceAddress" column="MONITOR_SERVICE_ADDRESS_" jdbcType="VARCHAR"/>
        <result property="startAddress" column="START_ADDRESS_" jdbcType="VARCHAR"/>
        <result property="stopAddress" column="STOP_ADDRESS_" jdbcType="VARCHAR"/>
        <result property="terminateAddress" column="TERMINATE_ADDRESS_" jdbcType="VARCHAR"/>
        <result property="status" column="STATUS_" jdbcType="INTEGER"/>
        <result property="parentProcId" column="PARENT_PROC_ID_" jdbcType="VARCHAR"/>
        <result property="otherItems" column="OTHER_ITEMS_" jdbcType="VARCHAR"/>
        <result property="createby" column="CREATEBY_" jdbcType="VARCHAR"/>
        <result property="createtime" column="CREATETIME_" jdbcType="TIMESTAMP"/>
        <result property="updateby" column="UPDATEBY_" jdbcType="VARCHAR"/>
        <result property="updatetime" column="UPDATETIME_" jdbcType="TIMESTAMP"/>
        <result property="deleteFlag" column="DELETE_FLAG_" jdbcType="INTEGER"/>
        
        <result property="startCommand" column="START_COMMAND_" jdbcType="VARCHAR"/>
        <result property="stopCommand" column="STOP_COMMAND_" jdbcType="VARCHAR"/>
        <result property="terminateCommand" column="TERMINATE_COMMAND_" jdbcType="VARCHAR"/>
	</resultMap>

 
	<insert id="insertMonitorProc" parameterType="com.glaf.monitor.server.domain.MonitorProc">
		insert into MONITOR_PROC 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID_
			<if test="terminalId != null">
				,TERMINAL_ID_ 
			</if>
			<if test="level != null">
				,LEVEL_ 
			</if>
			<if test="processName != null">
				,PROCESS_NAME_ 
			</if>
			<if test="name != null">
				,NAME_ 
			</if>
			<if test="prod != null">
				,PROD_ 
			</if>
			<if test="ver != null">
				,VER_ 
			</if>
			<if test="type != null">
				,TYPE_ 
			</if>
			<if test="desc != null">
				,DESC_ 
			</if>
			<if test="port != null">
				,PORT_ 
			</if>
			<if test="monitorServiceAddress != null">
				,MONITOR_SERVICE_ADDRESS_ 
			</if>
			<if test="startAddress != null">
				,START_ADDRESS_ 
			</if>
			<if test="stopAddress != null">
				,STOP_ADDRESS_ 
			</if>
			<if test="terminateAddress != null">
				,TERMINATE_ADDRESS_ 
			</if>
			<if test="status != null">
				,STATUS_ 
			</if>
			<if test="parentProcId != null">
				,PARENT_PROC_ID_ 
			</if>
			<if test="otherItems != null">
				,OTHER_ITEMS_ 
			</if>
			<if test="createby != null">
				,CREATEBY_ 
			</if>
			<if test="createtime != null">
				,CREATETIME_ 
			</if>
			<if test="updateby != null">
				,UPDATEBY_ 
			</if>
			<if test="updatetime != null">
				,UPDATETIME_ 
			</if>
			<if test="deleteFlag != null">
				,DELETE_FLAG_ 
			</if>
			
			<if test="startCommand != null">
				,START_COMMAND_
			</if>
			<if test="stopCommand != null">
				,STOP_COMMAND_
			</if>
			<if test="terminateCommand != null">
				,TERMINATE_COMMAND_
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=VARCHAR}
	     
			<if test="terminalId != null">
				,#{terminalId, jdbcType=VARCHAR}
			</if>
			<if test="level != null">
				,#{level, jdbcType=VARCHAR}
			</if>
			<if test="processName != null">
				,#{processName, jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="prod != null">
				,#{prod, jdbcType=VARCHAR}
			</if>
			<if test="ver != null">
				,#{ver, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="port != null">
				,#{port, jdbcType=INTEGER}
			</if>
			<if test="monitorServiceAddress != null">
				,#{monitorServiceAddress, jdbcType=VARCHAR}
			</if>
			<if test="startAddress != null">
				,#{startAddress, jdbcType=VARCHAR}
			</if>
			<if test="stopAddress != null">
				,#{stopAddress, jdbcType=VARCHAR}
			</if>
			<if test="terminateAddress != null">
				,#{terminateAddress, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="parentProcId != null">
				,#{parentProcId, jdbcType=VARCHAR}
			</if>
			<if test="otherItems != null">
				,#{otherItems, jdbcType=VARCHAR}
			</if>
			<if test="createby != null">
				,#{createby, jdbcType=VARCHAR}
			</if>
			<if test="createtime != null">
				,#{createtime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateby != null">
				,#{updateby, jdbcType=VARCHAR}
			</if>
			<if test="updatetime != null">
				,#{updatetime, jdbcType=TIMESTAMP}
			</if>
			<if test="deleteFlag != null">
				,#{deleteFlag, jdbcType=INTEGER}
			</if>
			
			<if test="startCommand != null">
				,#{startCommand, jdbcType=VARCHAR}
			</if>
			<if test="stopCommand != null">
				,#{stopCommand, jdbcType=VARCHAR}
			</if>
			<if test="terminateCommand != null">
				,#{terminateCommand, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateMonitorProc" parameterType="com.glaf.monitor.server.domain.MonitorProc">
		update MONITOR_PROC
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="terminalId != null">
				TERMINAL_ID_ = #{terminalId, jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				LEVEL_ = #{level, jdbcType=VARCHAR},
			</if>
			<if test="processName != null">
				PROCESS_NAME_ = #{processName, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="prod != null">
				PROD_ = #{prod, jdbcType=VARCHAR},
			</if>
			<if test="ver != null">
				VER_ = #{ver, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				DESC_ = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="port != null">
				PORT_ = #{port, jdbcType=INTEGER},
			</if>
			<if test="monitorServiceAddress != null">
				MONITOR_SERVICE_ADDRESS_ = #{monitorServiceAddress, jdbcType=VARCHAR},
			</if>
			<if test="startAddress != null">
				START_ADDRESS_ = #{startAddress, jdbcType=VARCHAR},
			</if>
			<if test="stopAddress != null">
				STOP_ADDRESS_ = #{stopAddress, jdbcType=VARCHAR},
			</if>
			<if test="terminateAddress != null">
				TERMINATE_ADDRESS_ = #{terminateAddress, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS_ = #{status, jdbcType=INTEGER},
			</if>
			<if test="parentProcId != null">
				PARENT_PROC_ID_ = #{parentProcId, jdbcType=VARCHAR},
			</if>
			<if test="otherItems != null">
				OTHER_ITEMS_ = #{otherItems, jdbcType=VARCHAR},
			</if>
			<if test="createby != null">
				CREATEBY_ = #{createby, jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				CREATETIME_ = #{createtime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateby != null">
				UPDATEBY_ = #{updateby, jdbcType=VARCHAR},
			</if>
			<if test="updatetime != null">
				UPDATETIME_ = #{updatetime, jdbcType=TIMESTAMP},
			</if>
			<if test="deleteFlag != null">
				DELETE_FLAG_ = #{deleteFlag, jdbcType=INTEGER},
			</if>
			
			<if test="startCommand != null">
				START_COMMAND_ = #{startCommand, jdbcType=VARCHAR},
			</if>
			<if test="stopCommand != null">
				STOP_COMMAND_ = #{stopCommand, jdbcType=VARCHAR},
			</if>
			<if test="terminateCommand != null">
				TERMINATE_COMMAND_ = #{terminateCommand, jdbcType=VARCHAR},
			</if>
        </trim>
		where
          ID_ = #{id, jdbcType=VARCHAR}
		
    </update>

 
	<delete id="deleteMonitorProcById" parameterType="string"> 
        delete from MONITOR_PROC
        where ID_ =	#{id}
	</delete>

	
	<delete id="deleteMonitorProcs" parameterType="com.glaf.monitor.server.query.MonitorProcQuery">
		delete from MONITOR_PROC
		where ( 
 			  ID_ IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getMonitorProcById" parameterType="string" resultMap="monitorProcResultMap">
		select * from MONITOR_PROC where ID_ = #{id}
	</select>


	<select id="getMonitorProcs" 
	    parameterType="com.glaf.monitor.server.query.MonitorProcQuery"
		resultMap="monitorProcResultMap">
		select E.* from MONITOR_PROC E 
		<if test="categoryId != null">
			left join MONITOR_PROC_BUS_CATEGORY M
				on E.ID_ = M.ID_ 
		</if>
		<include refid="selectMonitorProcsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.ID_ desc
		  </otherwise>
        </choose>
	</select>


	<select id="getMonitorProcCount" 
	    parameterType="com.glaf.monitor.server.query.MonitorProcQuery"
		resultType="int">
		select count(*) from MONITOR_PROC E 
		<if test="categoryId != null">
			left join MONITOR_PROC_BUS_CATEGORY M
				on E.ID_ = M.ID_ 
		</if>
		<include refid="selectMonitorProcsSql" />
	</select>


	<sql id="selectMonitorProcsSql">

		
		
		<where>
		       1 = 1  
			 
	        
			<if test="terminalId != null and terminalId != '' ">
				and E.TERMINAL_ID_ = #{terminalId}
            </if>

			<if test="terminalIdLike != null and terminalIdLike != '' ">
				and E.TERMINAL_ID_ like #{terminalIdLike}
            </if>

			<if test="terminalIds != null and terminalIds.size() &gt; 0">
			    and E.TERMINAL_ID_ IN
                <foreach item="x_terminalId" index="index" collection="terminalIds" 
                     open="(" separator="," close=")">
                  #{x_terminalId}
                </foreach>
			</if>
	        
			<if test="level != null and level != '' ">
				and E.LEVEL_ = #{level}
            </if>

			<if test="levelLike != null and levelLike != '' ">
				and E.LEVEL_ like #{levelLike}
            </if>

			<if test="levels != null and levels.size() &gt; 0">
			    and E.LEVEL_ IN
                <foreach item="x_level" index="index" collection="levels" 
                     open="(" separator="," close=")">
                  #{x_level}
                </foreach>
			</if>
	        
			<if test="processName != null and processName != '' ">
				and E.PROCESS_NAME_ = #{processName}
            </if>

			<if test="processNameLike != null and processNameLike != '' ">
				and E.PROCESS_NAME_ like #{processNameLike}
            </if>

			<if test="processNames != null and processNames.size() &gt; 0">
			    and E.PROCESS_NAME_ IN
                <foreach item="x_processName" index="index" collection="processNames" 
                     open="(" separator="," close=")">
                  #{x_processName}
                </foreach>
			</if>
	        
			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
            </if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME_ like #{nameLike}
            </if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME_ IN
                <foreach item="x_name" index="index" collection="names" 
                     open="(" separator="," close=")">
                  #{x_name}
                </foreach>
			</if>
	        
			<if test="prod != null and prod != '' ">
				and E.PROD_ = #{prod}
            </if>

			<if test="prodLike != null and prodLike != '' ">
				and E.PROD_ like #{prodLike}
            </if>

			<if test="prods != null and prods.size() &gt; 0">
			    and E.PROD_ IN
                <foreach item="x_prod" index="index" collection="prods" 
                     open="(" separator="," close=")">
                  #{x_prod}
                </foreach>
			</if>
	        
			<if test="ver != null and ver != '' ">
				and E.VER_ = #{ver}
            </if>

			<if test="verLike != null and verLike != '' ">
				and E.VER_ like #{verLike}
            </if>

			<if test="vers != null and vers.size() &gt; 0">
			    and E.VER_ IN
                <foreach item="x_ver" index="index" collection="vers" 
                     open="(" separator="," close=")">
                  #{x_ver}
                </foreach>
			</if>
	        
			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
            </if>

			<if test="typeLike != null and typeLike != '' ">
				and E.TYPE_ like #{typeLike}
            </if>

			<if test="types != null and types.size() &gt; 0">
			    and E.TYPE_ IN
                <foreach item="x_type" index="index" collection="types" 
                     open="(" separator="," close=")">
                  #{x_type}
                </foreach>
			</if>
	        
			<if test="desc != null and desc != '' ">
				and E.DESC_ = #{desc}
            </if>

			<if test="descLike != null and descLike != '' ">
				and E.DESC_ like #{descLike}
            </if>

			<if test="descs != null and descs.size() &gt; 0">
			    and E.DESC_ IN
                <foreach item="x_desc" index="index" collection="descs" 
                     open="(" separator="," close=")">
                  #{x_desc}
                </foreach>
			</if>

			<if test="port != null">
				and E.PORT_ = #{port}
            </if>

			<if test="portGreaterThanOrEqual != null">
				and E.PORT_ &gt;= #{portGreaterThanOrEqual}
            </if>

			<if test="portLessThanOrEqual != null">
				and E.PORT_ &lt;= #{portLessThanOrEqual}
            </if>

			<if test="ports != null and ports.size() &gt; 0">
			    and E.PORT_ IN
                <foreach item="x_port" index="index" collection="ports" 
                     open="(" separator="," close=")">
                  #{x_port}
                </foreach>
			</if>
      
	        
			<if test="monitorServiceAddress != null and monitorServiceAddress != '' ">
				and E.MONITOR_SERVICE_ADDRESS_ = #{monitorServiceAddress}
            </if>

			<if test="monitorServiceAddressLike != null and monitorServiceAddressLike != '' ">
				and E.MONITOR_SERVICE_ADDRESS_ like #{monitorServiceAddressLike}
            </if>

			<if test="monitorServiceAddresss != null and monitorServiceAddresss.size() &gt; 0">
			    and E.MONITOR_SERVICE_ADDRESS_ IN
                <foreach item="x_monitorServiceAddress" index="index" collection="monitorServiceAddresss" 
                     open="(" separator="," close=")">
                  #{x_monitorServiceAddress}
                </foreach>
			</if>
	        
			<if test="startAddress != null and startAddress != '' ">
				and E.START_ADDRESS_ = #{startAddress}
            </if>

			<if test="startAddressLike != null and startAddressLike != '' ">
				and E.START_ADDRESS_ like #{startAddressLike}
            </if>

			<if test="startAddresss != null and startAddresss.size() &gt; 0">
			    and E.START_ADDRESS_ IN
                <foreach item="x_startAddress" index="index" collection="startAddresss" 
                     open="(" separator="," close=")">
                  #{x_startAddress}
                </foreach>
			</if>
	        
			<if test="stopAddress != null and stopAddress != '' ">
				and E.STOP_ADDRESS_ = #{stopAddress}
            </if>

			<if test="stopAddressLike != null and stopAddressLike != '' ">
				and E.STOP_ADDRESS_ like #{stopAddressLike}
            </if>

			<if test="stopAddresss != null and stopAddresss.size() &gt; 0">
			    and E.STOP_ADDRESS_ IN
                <foreach item="x_stopAddress" index="index" collection="stopAddresss" 
                     open="(" separator="," close=")">
                  #{x_stopAddress}
                </foreach>
			</if>
	        
			<if test="terminateAddress != null and terminateAddress != '' ">
				and E.TERMINATE_ADDRESS_ = #{terminateAddress}
            </if>

			<if test="terminateAddressLike != null and terminateAddressLike != '' ">
				and E.TERMINATE_ADDRESS_ like #{terminateAddressLike}
            </if>

			<if test="terminateAddresss != null and terminateAddresss.size() &gt; 0">
			    and E.TERMINATE_ADDRESS_ IN
                <foreach item="x_terminateAddress" index="index" collection="terminateAddresss" 
                     open="(" separator="," close=")">
                  #{x_terminateAddress}
                </foreach>
			</if>

			<if test="status != null">
				and E.STATUS_ = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS_ &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS_ &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
			    and E.STATUS_ IN
                <foreach item="x_status" index="index" collection="statuss" 
                     open="(" separator="," close=")">
                  #{x_status}
                </foreach>
			</if>
      
	        
			<if test="parentProcId != null and parentProcId != '' ">
				and E.PARENT_PROC_ID_ = #{parentProcId}
            </if>

			<if test="parentProcIdLike != null and parentProcIdLike != '' ">
				and E.PARENT_PROC_ID_ like #{parentProcIdLike}
            </if>

			<if test="parentProcIds != null and parentProcIds.size() &gt; 0">
			    and E.PARENT_PROC_ID_ IN
                <foreach item="x_parentProcId" index="index" collection="parentProcIds" 
                     open="(" separator="," close=")">
                  #{x_parentProcId}
                </foreach>
			</if>
	        
			<if test="otherItems != null and otherItems != '' ">
				and E.OTHER_ITEMS_ = #{otherItems}
            </if>

			<if test="otherItemsLike != null and otherItemsLike != '' ">
				and E.OTHER_ITEMS_ like #{otherItemsLike}
            </if>

			<if test="otherItemss != null and otherItemss.size() &gt; 0">
			    and E.OTHER_ITEMS_ IN
                <foreach item="x_otherItems" index="index" collection="otherItemss" 
                     open="(" separator="," close=")">
                  #{x_otherItems}
                </foreach>
			</if>
	        
			<if test="createby != null and createby != '' ">
				and E.CREATEBY_ = #{createby}
            </if>

			<if test="createbyLike != null and createbyLike != '' ">
				and E.CREATEBY_ like #{createbyLike}
            </if>

			<if test="createbys != null and createbys.size() &gt; 0">
			    and E.CREATEBY_ IN
                <foreach item="x_createby" index="index" collection="createbys" 
                     open="(" separator="," close=")">
                  #{x_createby}
                </foreach>
			</if>

			<if test="createtimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createtimeGreaterThanOrEqual}
            </if>

			<if test="createtimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createtimeLessThanOrEqual}
            </if>

	        
			<if test="updateby != null and updateby != '' ">
				and E.UPDATEBY_ = #{updateby}
            </if>

			<if test="updatebyLike != null and updatebyLike != '' ">
				and E.UPDATEBY_ like #{updatebyLike}
            </if>

			<if test="updatebys != null and updatebys.size() &gt; 0">
			    and E.UPDATEBY_ IN
                <foreach item="x_updateby" index="index" collection="updatebys" 
                     open="(" separator="," close=")">
                  #{x_updateby}
                </foreach>
			</if>

			<if test="updatetimeGreaterThanOrEqual != null">
				and E.UPDATETIME_ &gt;= #{updatetimeGreaterThanOrEqual}
            </if>

			<if test="updatetimeLessThanOrEqual != null">
				and E.UPDATETIME_ &lt;= #{updatetimeLessThanOrEqual}
            </if>


			<if test="deleteFlag != null">
				and E.DELETE_FLAG_ = #{deleteFlag}
            </if>

			<if test="deleteFlagGreaterThanOrEqual != null">
				and E.DELETE_FLAG_ &gt;= #{deleteFlagGreaterThanOrEqual}
            </if>

			<if test="deleteFlagLessThanOrEqual != null">
				and E.DELETE_FLAG_ &lt;= #{deleteFlagLessThanOrEqual}
            </if>

			<if test="deleteFlags != null and deleteFlags.size() &gt; 0">
			    and E.DELETE_FLAG_ IN
                <foreach item="x_deleteFlag" index="index" collection="deleteFlags" 
                     open="(" separator="," close=")">
                  #{x_deleteFlag}
                </foreach>
			</if>
      
            <if test="dataRequest != null and dataRequest.filter != null ">
			    <include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>
			 
			 <if test="categoryId != null">
				and M.PROC_CATEGORY_ID_ = #{categoryId}
			</if>
		</where>
	</sql>

</mapper>