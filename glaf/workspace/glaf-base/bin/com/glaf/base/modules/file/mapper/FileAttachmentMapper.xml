<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.file.mapper.FileAttachmentMapper">

	<resultMap id="fileAttachmentResultMap"
		type="com.glaf.base.modules.file.domain.FileAttachment">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="nodeId" column="NODEID_" jdbcType="BIGINT" />
		<result property="name" column="NAME_" jdbcType="VARCHAR" />
		<result property="filename" column="FILENAME_" jdbcType="VARCHAR" />
		<result property="originalFilename" column="ORIGINALFILENAME_"
			jdbcType="VARCHAR" />
		<result property="referId" column="REFERID_" jdbcType="VARCHAR" />
		<result property="type" column="TYPE_" jdbcType="VARCHAR" />
		<result property="desc" column="DESC_" jdbcType="VARCHAR" />
		<result property="path" column="PATH_" jdbcType="VARCHAR" />
		<result property="size" column="SIZE_" jdbcType="INTEGER" />
		<result property="width" column="WIDTH_" jdbcType="INTEGER" />
		<result property="height" column="HEIGHT_" jdbcType="INTEGER" />
		<result property="locked" column="LOCKED_" jdbcType="INTEGER" />
		<result property="deleteFlag" column="DELETEFLAG_" jdbcType="INTEGER" />
		<result property="createDate" column="CREATEDATE_" jdbcType="TIMESTAMP" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE_" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY_" jdbcType="VARCHAR" />
	</resultMap>


	<insert id="insertFileAttachment" parameterType="com.glaf.base.modules.file.domain.FileAttachment">
		insert into T_ATTACHMENT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="nodeId != null">
				,NODEID_
			</if>
			<if test="name != null">
				,NAME_
			</if>
			<if test="filename != null">
				,FILENAME_
			</if>
			<if test="originalFilename != null">
				,ORIGINALFILENAME_
			</if>
			<if test="referId != null">
				,REFERID_
			</if>
			<if test="type != null">
				,TYPE_
			</if>
			<if test="desc != null">
				,DESC_
			</if>
			<if test="path != null">
				,PATH_
			</if>
			<if test="size != null">
				,SIZE_
			</if>
			<if test="width != null">
				,WIDTH_
			</if>
			<if test="height != null">
				,HEIGHT_
			</if>
			<if test="locked != null">
				,LOCKED_
			</if>
			<if test="deleteFlag != null">
				,DELETEFLAG_
			</if>
			<if test="createDate != null">
				,CREATEDATE_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="updateDate != null">
				,UPDATEDATE_
			</if>
			<if test="updateBy != null">
				,UPDATEBY_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=VARCHAR}

			<if test="nodeId != null">
				,#{nodeId, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="filename != null">
				,#{filename, jdbcType=VARCHAR}
			</if>
			<if test="originalFilename != null">
				,#{originalFilename, jdbcType=VARCHAR}
			</if>
			<if test="referId != null">
				,#{referId, jdbcType=VARCHAR}
			</if>
			<if test="type != null">
				,#{type, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="path != null">
				,#{path, jdbcType=VARCHAR}
			</if>
			<if test="size != null">
				,#{size, jdbcType=INTEGER}
			</if>
			<if test="width != null">
				,#{width, jdbcType=INTEGER}
			</if>
			<if test="height != null">
				,#{height, jdbcType=INTEGER}
			</if>
			<if test="locked != null">
				,#{locked, jdbcType=INTEGER}
			</if>
			<if test="deleteFlag != null">
				,#{deleteFlag, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertFileAttachment" parameterType="java.util.List">
		insert into T_ATTACHMENT (
		ID_
		,NODEID_
		,NAME_
		,FILENAME_
		,ORIGINALFILENAME_
		,REFERID_
		,TYPE_
		,DESC_
		,PATH_
		,SIZE_
		,WIDTH_
		,HEIGHT_
		,LOCKED_
		,DELETEFLAG_
		,CREATEDATE_
		,CREATEBY_
		,UPDATEDATE_
		,UPDATEBY_
		)
		values
		<foreach collection="list" item="fileAttachment" index="index"
			separator=",">
			(
			#{fileAttachment.id, jdbcType=VARCHAR}
			,#{fileAttachment.nodeId, jdbcType=BIGINT}
			,#{fileAttachment.name,
			jdbcType=VARCHAR}
			,#{fileAttachment.filename, jdbcType=VARCHAR}
			,#{fileAttachment.originalFilename, jdbcType=VARCHAR}
			,#{fileAttachment.referId, jdbcType=VARCHAR}
			,#{fileAttachment.type,
			jdbcType=VARCHAR}
			,#{fileAttachment.desc, jdbcType=VARCHAR}
			,#{fileAttachment.path, jdbcType=VARCHAR}
			,#{fileAttachment.size,
			jdbcType=INTEGER}
			,#{fileAttachment.width, jdbcType=INTEGER}
			,#{fileAttachment.height, jdbcType=INTEGER}
			,#{fileAttachment.locked,
			jdbcType=INTEGER}
			,#{fileAttachment.deleteFlag, jdbcType=INTEGER}
			,#{fileAttachment.createDate, jdbcType=TIMESTAMP}
			,#{fileAttachment.createBy, jdbcType=VARCHAR}
			,#{fileAttachment.updateDate, jdbcType=TIMESTAMP}
			,#{fileAttachment.updateBy, jdbcType=VARCHAR}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertFileAttachment_oracle" parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="fileAttachment" index="index">
			insert
			into T_ATTACHMENT (
			ID_
			,NODEID_
			,NAME_
			,FILENAME_
			,ORIGINALFILENAME_
			,REFERID_
			,TYPE_
			,DESC_
			,PATH_
			,SIZE_
			,WIDTH_
			,HEIGHT_
			,LOCKED_
			,DELETEFLAG_
			,CREATEDATE_
			,CREATEBY_
			,UPDATEDATE_
			,UPDATEBY_
			) values (
			#{fileAttachment.id,
			jdbcType=VARCHAR}
			,#{fileAttachment.nodeId,
			jdbcType=BIGINT}
			,#{fileAttachment.name, jdbcType=VARCHAR}
			,#{fileAttachment.filename,
			jdbcType=VARCHAR}
			,#{fileAttachment.originalFilename, jdbcType=VARCHAR}
			,#{fileAttachment.referId, jdbcType=VARCHAR}
			,#{fileAttachment.type,
			jdbcType=VARCHAR}
			,#{fileAttachment.desc,
			jdbcType=VARCHAR}
			,#{fileAttachment.path, jdbcType=VARCHAR}
			,#{fileAttachment.size,
			jdbcType=INTEGER}
			,#{fileAttachment.width,
			jdbcType=INTEGER}
			,#{fileAttachment.height, jdbcType=INTEGER}
			,#{fileAttachment.locked,
			jdbcType=INTEGER}
			,#{fileAttachment.deleteFlag, jdbcType=INTEGER}
			,#{fileAttachment.createDate, jdbcType=TIMESTAMP}
			,#{fileAttachment.createBy, jdbcType=VARCHAR}
			,#{fileAttachment.updateDate, jdbcType=TIMESTAMP}
			,#{fileAttachment.updateBy, jdbcType=VARCHAR}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateFileAttachment" parameterType="com.glaf.base.modules.file.domain.FileAttachment">
		update T_ATTACHMENT
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="nodeId != null">
				NODEID_ = #{nodeId, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME_ = #{name, jdbcType=VARCHAR},
			</if>
			<if test="filename != null">
				FILENAME_ = #{filename, jdbcType=VARCHAR},
			</if>
			<if test="originalFilename != null">
				ORIGINALFILENAME_ = #{originalFilename,
				jdbcType=VARCHAR},
			</if>
			<if test="referId != null">
				REFERID_ = #{referId, jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE_ = #{type, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				DESC_ = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				PATH_ = #{path, jdbcType=VARCHAR},
			</if>
			<if test="size != null">
				SIZE_ = #{size, jdbcType=INTEGER},
			</if>
			<if test="width != null">
				WIDTH_ = #{width, jdbcType=INTEGER},
			</if>
			<if test="height != null">
				HEIGHT_ = #{height, jdbcType=INTEGER},
			</if>
			<if test="locked != null">
				LOCKED_ = #{locked, jdbcType=INTEGER},
			</if>
			<if test="deleteFlag != null">
				DELETEFLAG_ = #{deleteFlag, jdbcType=INTEGER},
			</if>
			<if test="updateDate != null">
				UPDATEDATE_ = #{updateDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				UPDATEBY_ = #{updateBy, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deleteFileAttachmentById" parameterType="string">
		delete from
		T_ATTACHMENT
		where ID_ = #{id}
	</delete>


	<delete id="deleteFileAttachments"
		parameterType="com.glaf.base.modules.file.query.FileAttachmentQuery">
		delete from T_ATTACHMENT
		where (
		ID_ IN
		<foreach item="x_id" index="index" collection="ids" open="("
			separator="," close=")">
			#{x_id}
		</foreach>
		)
	</delete>


	<select id="getFileAttachmentById" parameterType="string"
		resultMap="fileAttachmentResultMap">
		select * from T_ATTACHMENT where ID_ = #{id}
	</select>


	<select id="getFileAttachments"
		parameterType="com.glaf.base.modules.file.query.FileAttachmentQuery"
		resultMap="fileAttachmentResultMap">
		select distinct E.*
		<include refid="selectFileAttachmentsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.ID_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getFileAttachmentCount"
		parameterType="com.glaf.base.modules.file.query.FileAttachmentQuery"
		resultType="int">
		select count(*)
		<include refid="selectFileAttachmentsSql" />
	</select>


	<sql id="selectFileAttachmentsSql">

		from T_ATTACHMENT E

		<where>
			1 = 1

			<if test="nodeId != null">
				and E.NODEID_ = #{nodeId}
			</if>

			<if test="nodeIds != null and nodeIds.size() &gt; 0">
				and E.NODEID_ IN
				<foreach item="x_nodeId" index="index" collection="nodeIds"
					open="(" separator="," close=")">
					#{x_nodeId}
				</foreach>
			</if>

			<if test="name != null and name != '' ">
				and E.NAME_ = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and (
				  E.NAME_ like #{nameLike}
				  or E.FILENAME_ like #{nameLike}
				  or E.DESC_ like #{nameLike}
				)
			</if>

			<if test="filename != null and filename != '' ">
				and E.FILENAME_ = #{filename}
			</if>

			<if test="filenameLike != null and filenameLike != '' ">
				and E.FILENAME_ like #{filenameLike}
			</if>

			<if test="referId != null and referId != '' ">
				and E.REFERID_ = #{referId}
			</if>

			<if test="referIds != null and referIds.size() &gt; 0">
				and E.REFERID_ IN
				<foreach item="x_referId" index="index" collection="referIds"
					open="(" separator="," close=")">
					#{x_referId}
				</foreach>
			</if>

			<if test="type != null and type != '' ">
				and E.TYPE_ = #{type}
			</if>

			<if test="types != null and types.size() &gt; 0">
				and E.TYPE_ IN
				<foreach item="x_type" index="index" collection="types"
					open="(" separator="," close=")">
					#{x_type}
				</foreach>
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.DESC_ like #{descLike}
			</if>

			<if test="path != null and path != '' ">
				and E.PATH_ = #{path}
			</if>

			<if test="pathLike != null and pathLike != '' ">
				and E.PATH_ like #{pathLike}
			</if>

			<if test="sizeGreaterThanOrEqual != null">
				and E.SIZE_ &gt;= #{sizeGreaterThanOrEqual}
			</if>

			<if test="sizeLessThanOrEqual != null">
				and E.SIZE_ &lt;= #{sizeLessThanOrEqual}
			</if>

			<if test="locked != null">
				and E.LOCKED_ = #{locked}
			</if>

			<if test="deleteFlag != null">
				and E.DELETEFLAG_ = #{deleteFlag}
			</if>

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE_ &gt;= #{createDateGreaterThanOrEqual}
			</if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE_ &lt;= #{createDateLessThanOrEqual}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createBys != null and createBys.size() &gt; 0">
				and E.CREATEBY_ IN
				<foreach item="x_createBy" index="index" collection="createBys"
					open="(" separator="," close=")">
					#{x_createBy}
				</foreach>
			</if>

			<if test="updateDateGreaterThanOrEqual != null">
				and E.UPDATEDATE_ &gt;= #{updateDateGreaterThanOrEqual}
			</if>

			<if test="updateDateLessThanOrEqual != null">
				and E.UPDATEDATE_ &lt;= #{updateDateLessThanOrEqual}
			</if>

			<if test="updateBy != null and updateBy != '' ">
				and E.UPDATEBY_ = #{updateBy}
			</if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
				and E.UPDATEBY_ IN
				<foreach item="x_updateBy" index="index" collection="updateBys"
					open="(" separator="," close=")">
					#{x_updateBy}
				</foreach>
			</if>

			<if test="dataRequest != null and dataRequest.filter != null ">
				<include refid="com.glaf.global.GlobalMapper.dataRequestFilterCondition" />
			</if>

		</where>
	</sql>

</mapper>